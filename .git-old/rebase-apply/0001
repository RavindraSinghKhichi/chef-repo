From b8d78e2b9a9665a5c02b5b49dda5f4d9bb3fb4e9 Mon Sep 17 00:00:00 2001
From: RavindraSinghKhichi <ravindrasinghkhichi@gmail.com>
Date: Tue, 4 Jul 2017 15:41:51 +0530
Subject: before custom resource

---
 .chef/knife.rb                                     |    9 +
 .../tmp/greeting.txt.chef-20170629124718.490924    |    1 +
 .../tmp/greeting.txt.chef-20170702124429.799501    |    1 +
 .../tmp/greeting.txt.chef-20170702131026.292212    |    1 +
 .../local-mode-cache/cache/chef-client-running.pid |    1 +
 .chef/local-mode-cache/cache/chef-stacktrace.out   |   23 +
 .../cache/cookbooks/greeting/.kitchen.yml          |   26 +
 .../cache/cookbooks/greeting/Berksfile             |    3 +
 .../cache/cookbooks/greeting/README.md             |    4 +
 .../cache/cookbooks/greeting/chefignore            |  107 ++
 .../cache/cookbooks/greeting/metadata.rb           |   20 +
 .../cache/cookbooks/greeting/recipes/default.rb    |    3 +
 .../cache/cookbooks/greeting/resources/file.rb     |   15 +
 .../cache/cookbooks/my_cookbook/.kitchen.yml       |   27 +
 .../cache/cookbooks/my_cookbook/Berksfile          |    3 +
 .../cache/cookbooks/my_cookbook/Berksfile.lock     |    7 +
 .../cache/cookbooks/my_cookbook/README.md          |    4 +
 .../cookbooks/my_cookbook/attributes/default.rb    |    4 +
 .../cache/cookbooks/my_cookbook/chefignore         |  107 ++
 .../cookbooks/my_cookbook/libraries/ipaddress.rb   |   11 +
 .../cache/cookbooks/my_cookbook/metadata.rb        |   20 +
 .../cache/cookbooks/my_cookbook/recipes/default.rb |   19 +
 .chef/ravidrasinghk.pem                            |   27 +
 ...3931accbf8249927e29bf37c3b97881e7c66c553464a44a |    0
 ...1fd676f5bb70997eaf18fc67f9127df507d8f590fef02b0 |    0
 ...f9c46a51044cba572bbc96dd9f9783ba575d940256f305c |    0
 ...e605b9699559c058b118d0fd215f382d20431ef27802451 |    0
 ...23d2e4cac3dc838371899e125b544fa24df5aa66dd4a90f |    0
 ...bc2bb981ed5d6c2f5c9a29c735cc14a17a9cb5ce05a4d9c |    0
 ...8e7208677b452f114bf62deccbb4ba55b661a36adffa1fd |    0
 ...b235c806e890d98c3c6996b40cf6f3df10fb890b35f702d |    0
 ...93b6dd57b2ab988ee8591990169c5dce3f8e091f58cea0e |    0
 ...c20b754d94857dc5411d30510f152b558c33e4536ec6f37 |    0
 ...3888df6e5a65a45bd789a75bd9676b2d0f88b1730334e7c |    0
 ...091044e9818322b5a63a66dbf815e5e6eabcf9ab5a09f61 |    0
 ...e4c11eaf0955e1f4987a2b5b2075a12f6644ab1159775d0 |    0
 ...197d64a68f21e973e8635462ef0ef9752acb2dbc497e5d3 |    0
 ...34ad2a266c1c4e8b9e824724965baea6ba5b4a103b95711 |    0
 ...f9a4ea225333e6e835e8ad46e304e2b5c2e9c30e3612ed5 |    0
 ...bbe2b84a2b9fa802be709fe119b599dd1fd2fc48df8aa4f |    0
 ...92fb6bcc81465d912408c468e171d355185c0f10d27a301 |    0
 ...245fb6aab2cde8f756773eb450cb95a3a798c406db985c2 |    0
 ...c2a1ef36d7278478f3c7a67c2107b41e94848255b0bd75d |    0
 ...504411c017f9ff59303d90aabfa60e59905b51773abab04 |    0
 ...5060472286d0e276fb428b37e425b6d139d8eb64abfe368 |    0
 ...2192868f9908d43fb9cbd7aa4a896184e193e9dd71e3b85 |    0
 ...9b5380e9ded4c7d53a2e668114403309bcc875722aca235 |    0
 ...a65c5f7bb9cf5c17700428a63232637c49508292a80210b |    0
 Berksfile                                          |    3 +
 Berksfile.lock                                     |   24 +
 README.md                                          |    2 +
 Vagrantfile                                        |   13 +
 cookbooks/chefignore                               |   65 +
 .../.delivery/build_cookbook/.kitchen.yml          |   21 +
 .../.delivery/build_cookbook/Berksfile             |    7 +
 .../.delivery/build_cookbook/LICENSE               |    3 +
 .../.delivery/build_cookbook/README.md             |  146 ++
 .../.delivery/build_cookbook/chefignore            |  107 ++
 .../data_bags/keys/delivery_builder_keys.json      |    1 +
 .../.delivery/build_cookbook/metadata.rb           |    8 +
 .../.delivery/build_cookbook/recipes/default.rb    |    6 +
 .../.delivery/build_cookbook/recipes/deploy.rb     |    6 +
 .../.delivery/build_cookbook/recipes/functional.rb |    6 +
 .../.delivery/build_cookbook/recipes/lint.rb       |    6 +
 .../.delivery/build_cookbook/recipes/provision.rb  |    6 +
 .../.delivery/build_cookbook/recipes/publish.rb    |    6 +
 .../.delivery/build_cookbook/recipes/quality.rb    |    6 +
 .../.delivery/build_cookbook/recipes/security.rb   |    6 +
 .../.delivery/build_cookbook/recipes/smoke.rb      |    6 +
 .../.delivery/build_cookbook/recipes/syntax.rb     |    6 +
 .../.delivery/build_cookbook/recipes/unit.rb       |    6 +
 .../build_cookbook/secrets/fakey-mcfakerton        |    0
 .../test/fixtures/cookbooks/test/metadata.rb       |    2 +
 .../fixtures/cookbooks/test/recipes/default.rb     |    8 +
 .../custom_resource_samples/.delivery/config.json  |   12 +
 .../custom_resource_samples/.delivery/project.toml |   36 +
 cookbooks/custom_resource_samples/.gitignore       |   21 +
 cookbooks/custom_resource_samples/.kitchen.yml     |   26 +
 cookbooks/custom_resource_samples/Berksfile        |    3 +
 cookbooks/custom_resource_samples/README.md        |    4 +
 cookbooks/custom_resource_samples/chefignore       |  107 ++
 cookbooks/custom_resource_samples/metadata.rb      |   20 +
 .../custom_resource_samples/recipes/default.rb     |   14 +
 .../custom_resource_samples/resources/site.rb      |   24 +
 .../custom_resource_samples/spec/spec_helper.rb    |    2 +
 .../spec/unit/recipes/default_spec.rb              |   22 +
 .../test/smoke/default/default_test.rb             |   18 +
 cookbooks/docker-2.15.13/.foodcritic               |    1 +
 cookbooks/docker-2.15.13/CHANGELOG.md              | 1718 ++++++++++++++++++++
 cookbooks/docker-2.15.13/CONTRIBUTING.md           |    2 +
 cookbooks/docker-2.15.13/MAINTAINERS.md            |   20 +
 cookbooks/docker-2.15.13/README.md                 | 1419 ++++++++++++++++
 cookbooks/docker-2.15.13/libraries/_autoload.rb    |   13 +
 cookbooks/docker-2.15.13/libraries/docker_base.rb  |   90 +
 .../docker-2.15.13/libraries/docker_container.rb   |  446 +++++
 cookbooks/docker-2.15.13/libraries/docker_exec.rb  |   21 +
 cookbooks/docker-2.15.13/libraries/docker_image.rb |   94 ++
 .../libraries/docker_installation_binary.rb        |   40 +
 .../libraries/docker_installation_package.rb       |   32 +
 .../libraries/docker_installation_script.rb        |   51 +
 .../libraries/docker_installation_tarball.rb       |   47 +
 .../docker-2.15.13/libraries/docker_network.rb     |  127 ++
 .../docker-2.15.13/libraries/docker_registry.rb    |   38 +
 .../docker-2.15.13/libraries/docker_service.rb     |  130 ++
 .../libraries/docker_service_base.rb               |  123 ++
 .../libraries/docker_service_manager_execute.rb    |   56 +
 .../libraries/docker_service_manager_systemd.rb    |  116 ++
 .../docker_service_manager_sysvinit_debian.rb      |   87 +
 .../docker_service_manager_sysvinit_rhel.rb        |   81 +
 .../libraries/docker_service_manager_upstart.rb    |   64 +
 cookbooks/docker-2.15.13/libraries/docker_tag.rb   |   27 +
 .../docker-2.15.13/libraries/docker_volume.rb      |   33 +
 cookbooks/docker-2.15.13/libraries/helpers_auth.rb |   10 +
 cookbooks/docker-2.15.13/libraries/helpers_base.rb |  110 ++
 .../docker-2.15.13/libraries/helpers_container.rb  |  300 ++++
 .../docker-2.15.13/libraries/helpers_image.rb      |  104 ++
 .../libraries/helpers_installation_binary.rb       |   66 +
 .../libraries/helpers_installation_package.rb      |  124 ++
 .../libraries/helpers_installation_tarball.rb      |   50 +
 .../docker-2.15.13/libraries/helpers_network.rb    |  118 ++
 .../docker-2.15.13/libraries/helpers_service.rb    |  231 +++
 cookbooks/docker-2.15.13/libraries/matchers.rb     |  339 ++++
 cookbooks/docker-2.15.13/metadata.json             |    1 +
 .../default/default/docker-wait-ready.erb          |   10 +
 .../templates/default/default/docker.erb           |   24 +
 .../templates/default/sysconfig/docker.erb         |   19 +
 .../default/systemd/docker.service-override.erb    |   45 +
 .../templates/default/systemd/docker.service.erb   |   25 +
 .../default/systemd/docker.socket-override.erb     |   12 +
 .../templates/default/systemd/docker.socket.erb    |   12 +
 .../templates/default/systemd/tmpfiles.d.conf.erb  |    1 +
 .../templates/default/sysvinit/docker-debian.erb   |  149 ++
 .../templates/default/sysvinit/docker-rhel.erb     |  133 ++
 .../templates/default/upstart/docker.conf.erb      |   57 +
 .../greeting/.delivery/build_cookbook/.kitchen.yml |   21 +
 .../greeting/.delivery/build_cookbook/Berksfile    |    7 +
 .../greeting/.delivery/build_cookbook/LICENSE      |    3 +
 .../greeting/.delivery/build_cookbook/README.md    |  146 ++
 .../greeting/.delivery/build_cookbook/chefignore   |  107 ++
 .../data_bags/keys/delivery_builder_keys.json      |    1 +
 .../greeting/.delivery/build_cookbook/metadata.rb  |    8 +
 .../.delivery/build_cookbook/recipes/default.rb    |    6 +
 .../.delivery/build_cookbook/recipes/deploy.rb     |    6 +
 .../.delivery/build_cookbook/recipes/functional.rb |    6 +
 .../.delivery/build_cookbook/recipes/lint.rb       |    6 +
 .../.delivery/build_cookbook/recipes/provision.rb  |    6 +
 .../.delivery/build_cookbook/recipes/publish.rb    |    6 +
 .../.delivery/build_cookbook/recipes/quality.rb    |    6 +
 .../.delivery/build_cookbook/recipes/security.rb   |    6 +
 .../.delivery/build_cookbook/recipes/smoke.rb      |    6 +
 .../.delivery/build_cookbook/recipes/syntax.rb     |    6 +
 .../.delivery/build_cookbook/recipes/unit.rb       |    6 +
 .../build_cookbook/secrets/fakey-mcfakerton        |    0
 .../test/fixtures/cookbooks/test/metadata.rb       |    2 +
 .../fixtures/cookbooks/test/recipes/default.rb     |    8 +
 cookbooks/greeting/.delivery/config.json           |   12 +
 cookbooks/greeting/.delivery/project.toml          |   36 +
 cookbooks/greeting/.gitignore                      |   21 +
 cookbooks/greeting/.kitchen.yml                    |   26 +
 cookbooks/greeting/Berksfile                       |    3 +
 cookbooks/greeting/README.md                       |    4 +
 cookbooks/greeting/chefignore                      |  107 ++
 cookbooks/greeting/metadata.rb                     |   20 +
 cookbooks/greeting/recipes/default.rb              |   12 +
 cookbooks/greeting/resources/file.rb               |   15 +
 cookbooks/greeting/resources/site.rb               |   19 +
 cookbooks/greeting/spec/spec_helper.rb             |    2 +
 .../greeting/spec/unit/recipes/default_spec.rb     |   22 +
 .../greeting/test/smoke/default/default_test.rb    |   18 +
 cookbooks/iptables/CHANGELOG.md                    |  123 ++
 cookbooks/iptables/CONTRIBUTING.md                 |    2 +
 cookbooks/iptables/MAINTAINERS.md                  |   15 +
 cookbooks/iptables/README.md                       |  135 ++
 cookbooks/iptables/attributes/default.rb           |   41 +
 cookbooks/iptables/libraries/matchers.rb           |    9 +
 cookbooks/iptables/metadata.json                   |    1 +
 cookbooks/iptables/recipes/_package.rb             |   24 +
 cookbooks/iptables/recipes/default.rb              |   73 +
 cookbooks/iptables/recipes/disabled.rb             |   48 +
 cookbooks/iptables/resources/rule.rb               |   70 +
 .../iptables/templates/default/iptables-config.erb |    4 +
 .../iptables/templates/default/iptables_load.erb   |    3 +
 .../templates/default/rebuild-iptables.erb         |  142 ++
 .../.delivery/build_cookbook/.kitchen.yml          |   21 +
 .../my_cookbook/.delivery/build_cookbook/Berksfile |    7 +
 .../my_cookbook/.delivery/build_cookbook/LICENSE   |    3 +
 .../my_cookbook/.delivery/build_cookbook/README.md |  146 ++
 .../.delivery/build_cookbook/chefignore            |  107 ++
 .../data_bags/keys/delivery_builder_keys.json      |    1 +
 .../.delivery/build_cookbook/metadata.rb           |    8 +
 .../.delivery/build_cookbook/recipes/default.rb    |    6 +
 .../.delivery/build_cookbook/recipes/deploy.rb     |    6 +
 .../.delivery/build_cookbook/recipes/functional.rb |    6 +
 .../.delivery/build_cookbook/recipes/lint.rb       |    6 +
 .../.delivery/build_cookbook/recipes/provision.rb  |    6 +
 .../.delivery/build_cookbook/recipes/publish.rb    |    6 +
 .../.delivery/build_cookbook/recipes/quality.rb    |    6 +
 .../.delivery/build_cookbook/recipes/security.rb   |    6 +
 .../.delivery/build_cookbook/recipes/smoke.rb      |    6 +
 .../.delivery/build_cookbook/recipes/syntax.rb     |    6 +
 .../.delivery/build_cookbook/recipes/unit.rb       |    6 +
 .../build_cookbook/secrets/fakey-mcfakerton        |    0
 .../test/fixtures/cookbooks/test/metadata.rb       |    2 +
 .../fixtures/cookbooks/test/recipes/default.rb     |    8 +
 cookbooks/my_cookbook/.delivery/config.json        |   12 +
 cookbooks/my_cookbook/.delivery/project.toml       |   36 +
 cookbooks/my_cookbook/.kitchen.yml                 |   27 +
 .../my_cookbook/.kitchen/default-centos-73.yml     |    7 +
 .../my_cookbook/.kitchen/default-ubuntu-1604.yml   |    7 +
 .../machines/default/virtualbox/action_set_name    |    1 +
 .../machines/default/virtualbox/creator_uid        |    1 +
 .../.vagrant/machines/default/virtualbox/id        |    1 +
 .../machines/default/virtualbox/index_uuid         |    1 +
 .../machines/default/virtualbox/private_key        |   27 +
 .../machines/default/virtualbox/synced_folders     |    1 +
 .../Vagrantfile                                    |    9 +
 .../machines/default/virtualbox/action_set_name    |    1 +
 .../machines/default/virtualbox/creator_uid        |    1 +
 .../.vagrant/machines/default/virtualbox/id        |    1 +
 .../machines/default/virtualbox/index_uuid         |    1 +
 .../machines/default/virtualbox/private_key        |   27 +
 .../machines/default/virtualbox/synced_folders     |    1 +
 .../Vagrantfile                                    |    9 +
 .../machines/default/virtualbox/action_set_name    |    1 +
 .../machines/default/virtualbox/creator_uid        |    1 +
 .../.vagrant/machines/default/virtualbox/id        |    1 +
 .../machines/default/virtualbox/index_uuid         |    1 +
 .../machines/default/virtualbox/private_key        |   27 +
 .../machines/default/virtualbox/synced_folders     |    1 +
 .../Vagrantfile                                    |    9 +
 .../machines/default/virtualbox/action_set_name    |    1 +
 .../machines/default/virtualbox/creator_uid        |    1 +
 .../.vagrant/machines/default/virtualbox/id        |    1 +
 .../machines/default/virtualbox/index_uuid         |    1 +
 .../machines/default/virtualbox/private_key        |   27 +
 .../machines/default/virtualbox/synced_folders     |    1 +
 .../Vagrantfile                                    |    9 +
 .../machines/default/virtualbox/action_set_name    |    1 +
 .../machines/default/virtualbox/creator_uid        |    1 +
 .../.vagrant/machines/default/virtualbox/id        |    1 +
 .../machines/default/virtualbox/index_uuid         |    1 +
 .../machines/default/virtualbox/private_key        |   27 +
 .../machines/default/virtualbox/synced_folders     |    1 +
 .../Vagrantfile                                    |    9 +
 .../machines/default/virtualbox/action_set_name    |    1 +
 .../machines/default/virtualbox/creator_uid        |    1 +
 .../.vagrant/machines/default/virtualbox/id        |    1 +
 .../machines/default/virtualbox/index_uuid         |    1 +
 .../machines/default/virtualbox/private_key        |   27 +
 .../machines/default/virtualbox/synced_folders     |    1 +
 .../Vagrantfile                                    |    9 +
 .../machines/default/virtualbox/action_set_name    |    1 +
 .../machines/default/virtualbox/creator_uid        |    1 +
 .../.vagrant/machines/default/virtualbox/id        |    1 +
 .../machines/default/virtualbox/index_uuid         |    1 +
 .../machines/default/virtualbox/private_key        |   27 +
 .../machines/default/virtualbox/synced_folders     |    1 +
 .../Vagrantfile                                    |    9 +
 .../.kitchen/logs/default-centos-73.log            |    0
 .../.kitchen/logs/default-ubuntu-1604.log          |  103 ++
 cookbooks/my_cookbook/.kitchen/logs/kitchen.log    |    0
 .../my_cookbook/.kitchen/logs/server-centos-73.log |  181 +++
 .../.kitchen/logs/server-ubuntu-1604.log           |  167 ++
 .../.kitchen/logs/with-calc-centos-73.log          |  552 +++++++
 .../.kitchen/logs/with-calc-role-centos-73.log     |    0
 .../.kitchen/logs/with-role-centos-73.log          |    0
 .../my_cookbook/.kitchen/server-centos-73.yml      |    7 +
 .../my_cookbook/.kitchen/server-ubuntu-1604.yml    |    7 +
 .../my_cookbook/.kitchen/with-calc-centos-73.yml   |    7 +
 .../.kitchen/with-calc-role-centos-73.yml          |    7 +
 .../my_cookbook/.kitchen/with-role-centos-73.yml   |    7 +
 cookbooks/my_cookbook/Berksfile                    |    3 +
 cookbooks/my_cookbook/Berksfile.lock               |    7 +
 cookbooks/my_cookbook/README.md                    |    4 +
 cookbooks/my_cookbook/attributes/default.rb        |    4 +
 cookbooks/my_cookbook/chefignore                   |  107 ++
 cookbooks/my_cookbook/libraries/ipaddress.rb       |   11 +
 cookbooks/my_cookbook/metadata.rb                  |   20 +
 .../my_cookbook/recipes/.kitchen/logs/kitchen.log  |   30 +
 cookbooks/my_cookbook/recipes/default.rb           |   19 +
 cookbooks/my_cookbook/spec/spec_helper.rb          |    2 +
 .../my_cookbook/spec/unit/recipes/default_spec.rb  |   22 +
 .../test/integration/roles/calculator_role.rb      |    7 +
 .../test/integration/roles/my_cookbook_role.rb     |    5 +
 cookbooks/my_cookbook/test/recipes/default_test.rb |    3 +
 .../my_cookbook/test/smoke/default/default_test.rb |   10 +
 .../test/smoke/server/git_daemon_test.rb           |    8 +
 cookbooks/mysql-8.4.0/.foodcritic                  |    1 +
 cookbooks/mysql-8.4.0/CHANGELOG.md                 |  682 ++++++++
 cookbooks/mysql-8.4.0/CONTRIBUTING.md              |    2 +
 cookbooks/mysql-8.4.0/MAINTAINERS.md               |   16 +
 cookbooks/mysql-8.4.0/README.md                    |  420 +++++
 cookbooks/mysql-8.4.0/libraries/helpers.rb         |  286 ++++
 cookbooks/mysql-8.4.0/libraries/matchers.rb        |   71 +
 cookbooks/mysql-8.4.0/libraries/mysql_base.rb      |   30 +
 .../libraries/mysql_client_installation_package.rb |   31 +
 cookbooks/mysql-8.4.0/libraries/mysql_config.rb    |   56 +
 .../libraries/mysql_server_installation_package.rb |   42 +
 cookbooks/mysql-8.4.0/libraries/mysql_service.rb   |  105 ++
 .../mysql-8.4.0/libraries/mysql_service_base.rb    |  203 +++
 .../libraries/mysql_service_manager_systemd.rb     |  142 ++
 .../libraries/mysql_service_manager_sysvinit.rb    |   79 +
 .../libraries/mysql_service_manager_upstart.rb     |  103 ++
 cookbooks/mysql-8.4.0/metadata.json                |    1 +
 .../default/apparmor/usr.sbin.mysqld-instance.erb  |   14 +
 .../default/apparmor/usr.sbin.mysqld-local.erb     |    1 +
 .../templates/default/apparmor/usr.sbin.mysqld.erb |   47 +
 cookbooks/mysql-8.4.0/templates/default/my.cnf.erb |   57 +
 .../templates/default/smf/svc.method.mysqld.erb    |   28 +
 .../default/systemd/mysqld-wait-ready.erb          |   30 +
 .../templates/default/systemd/mysqld.service.erb   |   16 +
 .../templates/default/sysvinit/mysqld.erb          |  279 ++++
 .../templates/default/tmpfiles.d.conf.erb          |    1 +
 .../default/upstart/mysqld-wait-ready.erb          |   22 +
 .../templates/default/upstart/mysqld.erb           |   26 +
 cookbooks/ntp-3.4.0/CHANGELOG.md                   |  274 ++++
 cookbooks/ntp-3.4.0/CONTRIBUTING.md                |    2 +
 cookbooks/ntp-3.4.0/MAINTAINERS.md                 |   15 +
 cookbooks/ntp-3.4.0/README.md                      |  305 ++++
 cookbooks/ntp-3.4.0/attributes/default.rb          |  130 ++
 cookbooks/ntp-3.4.0/files/default/ntp.ini          |   23 +
 cookbooks/ntp-3.4.0/files/default/ntp.leapseconds  |  250 +++
 .../ntp-3.4.0/files/default/usr.sbin.ntpd.apparmor |   88 +
 cookbooks/ntp-3.4.0/libraries/ntp_helper.rb        |   49 +
 cookbooks/ntp-3.4.0/metadata.json                  |    1 +
 cookbooks/ntp-3.4.0/recipes/apparmor.rb            |   30 +
 cookbooks/ntp-3.4.0/recipes/default.rb             |  129 ++
 cookbooks/ntp-3.4.0/recipes/mac_os_x_client.rb     |   32 +
 cookbooks/ntp-3.4.0/recipes/windows_client.rb      |   45 +
 cookbooks/ntp-3.4.0/templates/default/ntp.conf.erb |  102 ++
 cookbooks/pwx_cookbook                             |    1 +
 cookbooks/starter/attributes/default.rb            |    7 +
 cookbooks/starter/files/default/sample.txt         |   16 +
 cookbooks/starter/metadata.rb                      |    5 +
 cookbooks/starter/recipes/default.rb               |    8 +
 cookbooks/starter/templates/default/sample.erb     |   27 +
 .../.delivery/build_cookbook/.kitchen.yml          |   21 +
 .../.delivery/build_cookbook/Berksfile             |    7 +
 .../.delivery/build_cookbook/LICENSE               |    3 +
 .../.delivery/build_cookbook/README.md             |  146 ++
 .../.delivery/build_cookbook/chefignore            |  107 ++
 .../data_bags/keys/delivery_builder_keys.json      |    1 +
 .../.delivery/build_cookbook/metadata.rb           |    8 +
 .../.delivery/build_cookbook/recipes/default.rb    |    6 +
 .../.delivery/build_cookbook/recipes/deploy.rb     |    6 +
 .../.delivery/build_cookbook/recipes/functional.rb |    6 +
 .../.delivery/build_cookbook/recipes/lint.rb       |    6 +
 .../.delivery/build_cookbook/recipes/provision.rb  |    6 +
 .../.delivery/build_cookbook/recipes/publish.rb    |    6 +
 .../.delivery/build_cookbook/recipes/quality.rb    |    6 +
 .../.delivery/build_cookbook/recipes/security.rb   |    6 +
 .../.delivery/build_cookbook/recipes/smoke.rb      |    6 +
 .../.delivery/build_cookbook/recipes/syntax.rb     |    6 +
 .../.delivery/build_cookbook/recipes/unit.rb       |    6 +
 .../build_cookbook/secrets/fakey-mcfakerton        |    0
 .../test/fixtures/cookbooks/test/metadata.rb       |    2 +
 .../fixtures/cookbooks/test/recipes/default.rb     |    8 +
 cookbooks/template_samples/.delivery/config.json   |   12 +
 cookbooks/template_samples/.delivery/project.toml  |   36 +
 cookbooks/template_samples/.gitignore              |   21 +
 cookbooks/template_samples/.kitchen.yml            |   25 +
 cookbooks/template_samples/Berksfile               |    3 +
 cookbooks/template_samples/README.md               |    4 +
 cookbooks/template_samples/attributes/default.rb   |    3 +
 cookbooks/template_samples/chefignore              |  107 ++
 cookbooks/template_samples/metadata.rb             |   20 +
 cookbooks/template_samples/recipes/default.rb      |   25 +
 cookbooks/template_samples/spec/spec_helper.rb     |    2 +
 .../spec/unit/recipes/default_spec.rb              |   22 +
 cookbooks/template_samples/templates/sudoers.erb   |   23 +
 cookbooks/template_samples/templates/vars.erb      |   18 +
 .../test/smoke/default/default_test.rb             |   18 +
 cookbooks/test                                     |    1 +
 .../website/.delivery/build_cookbook/.kitchen.yml  |   21 +
 .../website/.delivery/build_cookbook/Berksfile     |    7 +
 cookbooks/website/.delivery/build_cookbook/LICENSE |    3 +
 .../website/.delivery/build_cookbook/README.md     |  146 ++
 .../website/.delivery/build_cookbook/chefignore    |  107 ++
 .../data_bags/keys/delivery_builder_keys.json      |    1 +
 .../website/.delivery/build_cookbook/metadata.rb   |    8 +
 .../.delivery/build_cookbook/recipes/default.rb    |    6 +
 .../.delivery/build_cookbook/recipes/deploy.rb     |    6 +
 .../.delivery/build_cookbook/recipes/functional.rb |    6 +
 .../.delivery/build_cookbook/recipes/lint.rb       |    6 +
 .../.delivery/build_cookbook/recipes/provision.rb  |    6 +
 .../.delivery/build_cookbook/recipes/publish.rb    |    6 +
 .../.delivery/build_cookbook/recipes/quality.rb    |    6 +
 .../.delivery/build_cookbook/recipes/security.rb   |    6 +
 .../.delivery/build_cookbook/recipes/smoke.rb      |    6 +
 .../.delivery/build_cookbook/recipes/syntax.rb     |    6 +
 .../.delivery/build_cookbook/recipes/unit.rb       |    6 +
 .../build_cookbook/secrets/fakey-mcfakerton        |    0
 .../test/fixtures/cookbooks/test/metadata.rb       |    2 +
 .../fixtures/cookbooks/test/recipes/default.rb     |    8 +
 cookbooks/website/.delivery/config.json            |   12 +
 cookbooks/website/.delivery/project.toml           |   36 +
 cookbooks/website/.gitignore                       |   21 +
 cookbooks/website/.kitchen.yml                     |   25 +
 cookbooks/website/Berksfile                        |    3 +
 cookbooks/website/README.md                        |    4 +
 cookbooks/website/chefignore                       |  107 ++
 cookbooks/website/metadata.rb                      |   20 +
 cookbooks/website/recipes/default.rb               |   10 +
 cookbooks/website/resources/web                    |   46 +
 cookbooks/website/spec/spec_helper.rb              |    2 +
 .../website/spec/unit/recipes/default_spec.rb      |   22 +
 cookbooks/website/templates/httpd.conf.erb         |   13 +
 cookbooks/website/templates/httpd.service.erb      |   16 +
 .../website/test/smoke/default/default_test.rb     |   18 +
 environments/dev.rb                                |    1 +
 nodes/ravidrasinghk.json                           |    3 +
 roles/my_cookbook_role.rb                          |    4 +
 roles/starter.rb                                   |    6 +
 roles/web_servers.rb                               |    9 +
 414 files changed, 17251 insertions(+)
 create mode 100644 .chef/knife.rb
 create mode 100644 .chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170629124718.490924
 create mode 100644 .chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170702124429.799501
 create mode 100644 .chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170702131026.292212
 create mode 100644 .chef/local-mode-cache/cache/chef-client-running.pid
 create mode 100644 .chef/local-mode-cache/cache/chef-stacktrace.out
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/greeting/.kitchen.yml
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/greeting/Berksfile
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/greeting/README.md
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/greeting/chefignore
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/greeting/metadata.rb
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/greeting/recipes/default.rb
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/greeting/resources/file.rb
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/my_cookbook/.kitchen.yml
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/my_cookbook/Berksfile
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/my_cookbook/Berksfile.lock
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/my_cookbook/README.md
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/my_cookbook/attributes/default.rb
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/my_cookbook/chefignore
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/my_cookbook/libraries/ipaddress.rb
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/my_cookbook/metadata.rb
 create mode 100644 .chef/local-mode-cache/cache/cookbooks/my_cookbook/recipes/default.rb
 create mode 100644 .chef/ravidrasinghk.pem
 create mode 100644 .chef/syntaxcache/127e798411cab8e993931accbf8249927e29bf37c3b97881e7c66c553464a44a
 create mode 100644 .chef/syntaxcache/19f82c69798b5cd2e1fd676f5bb70997eaf18fc67f9127df507d8f590fef02b0
 create mode 100644 .chef/syntaxcache/1adeb9ae00e48acb9f9c46a51044cba572bbc96dd9f9783ba575d940256f305c
 create mode 100644 .chef/syntaxcache/1f0796fef33fef791e605b9699559c058b118d0fd215f382d20431ef27802451
 create mode 100644 .chef/syntaxcache/210166d3f8414c2c923d2e4cac3dc838371899e125b544fa24df5aa66dd4a90f
 create mode 100644 .chef/syntaxcache/3298a06ffe91fe1bebc2bb981ed5d6c2f5c9a29c735cc14a17a9cb5ce05a4d9c
 create mode 100644 .chef/syntaxcache/3b505e9eb28bcd4c08e7208677b452f114bf62deccbb4ba55b661a36adffa1fd
 create mode 100644 .chef/syntaxcache/499dde047290d4278b235c806e890d98c3c6996b40cf6f3df10fb890b35f702d
 create mode 100644 .chef/syntaxcache/5098823e5fc7c24b093b6dd57b2ab988ee8591990169c5dce3f8e091f58cea0e
 create mode 100644 .chef/syntaxcache/60ad6d0acafb6124cc20b754d94857dc5411d30510f152b558c33e4536ec6f37
 create mode 100644 .chef/syntaxcache/69820a89db516ddd63888df6e5a65a45bd789a75bd9676b2d0f88b1730334e7c
 create mode 100644 .chef/syntaxcache/7e4a25d3e05334e08091044e9818322b5a63a66dbf815e5e6eabcf9ab5a09f61
 create mode 100644 .chef/syntaxcache/8c47bf4230301f9ece4c11eaf0955e1f4987a2b5b2075a12f6644ab1159775d0
 create mode 100644 .chef/syntaxcache/91d277ae666e6f025197d64a68f21e973e8635462ef0ef9752acb2dbc497e5d3
 create mode 100644 .chef/syntaxcache/9307f0984d3f0e55b34ad2a266c1c4e8b9e824724965baea6ba5b4a103b95711
 create mode 100644 .chef/syntaxcache/96a9b92021900d9fdf9a4ea225333e6e835e8ad46e304e2b5c2e9c30e3612ed5
 create mode 100644 .chef/syntaxcache/a51f534e31b22aefebbe2b84a2b9fa802be709fe119b599dd1fd2fc48df8aa4f
 create mode 100644 .chef/syntaxcache/bd1a1058778918e8a92fb6bcc81465d912408c468e171d355185c0f10d27a301
 create mode 100644 .chef/syntaxcache/c7895b51ad006f744245fb6aab2cde8f756773eb450cb95a3a798c406db985c2
 create mode 100644 .chef/syntaxcache/c7b8b08c636d8f222c2a1ef36d7278478f3c7a67c2107b41e94848255b0bd75d
 create mode 100644 .chef/syntaxcache/cd54e4a81b49c9538504411c017f9ff59303d90aabfa60e59905b51773abab04
 create mode 100644 .chef/syntaxcache/d178ffa6be9223d475060472286d0e276fb428b37e425b6d139d8eb64abfe368
 create mode 100644 .chef/syntaxcache/e16e09ea3bb2219a42192868f9908d43fb9cbd7aa4a896184e193e9dd71e3b85
 create mode 100644 .chef/syntaxcache/eb63513623393c7199b5380e9ded4c7d53a2e668114403309bcc875722aca235
 create mode 100644 .chef/syntaxcache/f9a3e45f498fc396da65c5f7bb9cf5c17700428a63232637c49508292a80210b
 create mode 100644 Berksfile
 create mode 100644 Berksfile.lock
 create mode 100644 README.md
 create mode 100644 Vagrantfile
 create mode 100644 cookbooks/chefignore
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/.kitchen.yml
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/Berksfile
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/LICENSE
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/README.md
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/chefignore
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/metadata.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/default.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/deploy.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/functional.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/lint.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/provision.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/publish.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/quality.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/security.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/smoke.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/syntax.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/unit.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/secrets/fakey-mcfakerton
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
 create mode 100644 cookbooks/custom_resource_samples/.delivery/config.json
 create mode 100644 cookbooks/custom_resource_samples/.delivery/project.toml
 create mode 100644 cookbooks/custom_resource_samples/.gitignore
 create mode 100644 cookbooks/custom_resource_samples/.kitchen.yml
 create mode 100644 cookbooks/custom_resource_samples/Berksfile
 create mode 100644 cookbooks/custom_resource_samples/README.md
 create mode 100644 cookbooks/custom_resource_samples/chefignore
 create mode 100644 cookbooks/custom_resource_samples/metadata.rb
 create mode 100644 cookbooks/custom_resource_samples/recipes/default.rb
 create mode 100644 cookbooks/custom_resource_samples/resources/site.rb
 create mode 100644 cookbooks/custom_resource_samples/spec/spec_helper.rb
 create mode 100644 cookbooks/custom_resource_samples/spec/unit/recipes/default_spec.rb
 create mode 100644 cookbooks/custom_resource_samples/test/smoke/default/default_test.rb
 create mode 100644 cookbooks/docker-2.15.13/.foodcritic
 create mode 100644 cookbooks/docker-2.15.13/CHANGELOG.md
 create mode 100644 cookbooks/docker-2.15.13/CONTRIBUTING.md
 create mode 100644 cookbooks/docker-2.15.13/MAINTAINERS.md
 create mode 100644 cookbooks/docker-2.15.13/README.md
 create mode 100644 cookbooks/docker-2.15.13/libraries/_autoload.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_base.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_container.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_exec.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_image.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_installation_binary.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_installation_package.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_installation_script.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_installation_tarball.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_network.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_registry.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_service.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_service_base.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_service_manager_execute.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_service_manager_systemd.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_service_manager_sysvinit_debian.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_service_manager_sysvinit_rhel.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_service_manager_upstart.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_tag.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/docker_volume.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/helpers_auth.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/helpers_base.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/helpers_container.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/helpers_image.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/helpers_installation_binary.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/helpers_installation_package.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/helpers_installation_tarball.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/helpers_network.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/helpers_service.rb
 create mode 100644 cookbooks/docker-2.15.13/libraries/matchers.rb
 create mode 100644 cookbooks/docker-2.15.13/metadata.json
 create mode 100644 cookbooks/docker-2.15.13/templates/default/default/docker-wait-ready.erb
 create mode 100644 cookbooks/docker-2.15.13/templates/default/default/docker.erb
 create mode 100755 cookbooks/docker-2.15.13/templates/default/sysconfig/docker.erb
 create mode 100644 cookbooks/docker-2.15.13/templates/default/systemd/docker.service-override.erb
 create mode 100644 cookbooks/docker-2.15.13/templates/default/systemd/docker.service.erb
 create mode 100644 cookbooks/docker-2.15.13/templates/default/systemd/docker.socket-override.erb
 create mode 100644 cookbooks/docker-2.15.13/templates/default/systemd/docker.socket.erb
 create mode 100644 cookbooks/docker-2.15.13/templates/default/systemd/tmpfiles.d.conf.erb
 create mode 100644 cookbooks/docker-2.15.13/templates/default/sysvinit/docker-debian.erb
 create mode 100644 cookbooks/docker-2.15.13/templates/default/sysvinit/docker-rhel.erb
 create mode 100644 cookbooks/docker-2.15.13/templates/default/upstart/docker.conf.erb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/.kitchen.yml
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/Berksfile
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/LICENSE
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/README.md
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/chefignore
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/metadata.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/recipes/default.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/recipes/deploy.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/recipes/functional.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/recipes/lint.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/recipes/provision.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/recipes/publish.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/recipes/quality.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/recipes/security.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/recipes/smoke.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/recipes/syntax.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/recipes/unit.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/secrets/fakey-mcfakerton
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
 create mode 100644 cookbooks/greeting/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
 create mode 100644 cookbooks/greeting/.delivery/config.json
 create mode 100644 cookbooks/greeting/.delivery/project.toml
 create mode 100644 cookbooks/greeting/.gitignore
 create mode 100644 cookbooks/greeting/.kitchen.yml
 create mode 100644 cookbooks/greeting/Berksfile
 create mode 100644 cookbooks/greeting/README.md
 create mode 100644 cookbooks/greeting/chefignore
 create mode 100644 cookbooks/greeting/metadata.rb
 create mode 100644 cookbooks/greeting/recipes/default.rb
 create mode 100644 cookbooks/greeting/resources/file.rb
 create mode 100644 cookbooks/greeting/resources/site.rb
 create mode 100644 cookbooks/greeting/spec/spec_helper.rb
 create mode 100644 cookbooks/greeting/spec/unit/recipes/default_spec.rb
 create mode 100644 cookbooks/greeting/test/smoke/default/default_test.rb
 create mode 100644 cookbooks/iptables/CHANGELOG.md
 create mode 100644 cookbooks/iptables/CONTRIBUTING.md
 create mode 100644 cookbooks/iptables/MAINTAINERS.md
 create mode 100644 cookbooks/iptables/README.md
 create mode 100644 cookbooks/iptables/attributes/default.rb
 create mode 100644 cookbooks/iptables/libraries/matchers.rb
 create mode 100644 cookbooks/iptables/metadata.json
 create mode 100644 cookbooks/iptables/recipes/_package.rb
 create mode 100644 cookbooks/iptables/recipes/default.rb
 create mode 100644 cookbooks/iptables/recipes/disabled.rb
 create mode 100644 cookbooks/iptables/resources/rule.rb
 create mode 100644 cookbooks/iptables/templates/default/iptables-config.erb
 create mode 100644 cookbooks/iptables/templates/default/iptables_load.erb
 create mode 100644 cookbooks/iptables/templates/default/rebuild-iptables.erb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/.kitchen.yml
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/Berksfile
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/LICENSE
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/README.md
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/chefignore
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/metadata.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/recipes/default.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/recipes/deploy.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/recipes/functional.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/recipes/lint.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/recipes/provision.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/recipes/publish.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/recipes/quality.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/recipes/security.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/recipes/smoke.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/recipes/syntax.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/recipes/unit.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/secrets/fakey-mcfakerton
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
 create mode 100644 cookbooks/my_cookbook/.delivery/config.json
 create mode 100644 cookbooks/my_cookbook/.delivery/project.toml
 create mode 100644 cookbooks/my_cookbook/.kitchen.yml
 create mode 100644 cookbooks/my_cookbook/.kitchen/default-centos-73.yml
 create mode 100644 cookbooks/my_cookbook/.kitchen/default-ubuntu-1604.yml
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/action_set_name
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/creator_uid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/id
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/index_uuid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/private_key
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/synced_folders
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/Vagrantfile
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/action_set_name
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/creator_uid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/id
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/index_uuid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/private_key
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/synced_folders
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/Vagrantfile
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/action_set_name
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/creator_uid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/id
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/index_uuid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/private_key
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/synced_folders
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/Vagrantfile
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/action_set_name
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/creator_uid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/id
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/index_uuid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/private_key
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/synced_folders
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/Vagrantfile
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/action_set_name
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/creator_uid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/id
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/index_uuid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/private_key
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/synced_folders
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/Vagrantfile
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/action_set_name
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/creator_uid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/id
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/index_uuid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/private_key
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/synced_folders
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/Vagrantfile
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/action_set_name
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/creator_uid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/id
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/index_uuid
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/private_key
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/synced_folders
 create mode 100644 cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/Vagrantfile
 create mode 100644 cookbooks/my_cookbook/.kitchen/logs/default-centos-73.log
 create mode 100644 cookbooks/my_cookbook/.kitchen/logs/default-ubuntu-1604.log
 create mode 100644 cookbooks/my_cookbook/.kitchen/logs/kitchen.log
 create mode 100644 cookbooks/my_cookbook/.kitchen/logs/server-centos-73.log
 create mode 100644 cookbooks/my_cookbook/.kitchen/logs/server-ubuntu-1604.log
 create mode 100644 cookbooks/my_cookbook/.kitchen/logs/with-calc-centos-73.log
 create mode 100644 cookbooks/my_cookbook/.kitchen/logs/with-calc-role-centos-73.log
 create mode 100644 cookbooks/my_cookbook/.kitchen/logs/with-role-centos-73.log
 create mode 100644 cookbooks/my_cookbook/.kitchen/server-centos-73.yml
 create mode 100644 cookbooks/my_cookbook/.kitchen/server-ubuntu-1604.yml
 create mode 100644 cookbooks/my_cookbook/.kitchen/with-calc-centos-73.yml
 create mode 100644 cookbooks/my_cookbook/.kitchen/with-calc-role-centos-73.yml
 create mode 100644 cookbooks/my_cookbook/.kitchen/with-role-centos-73.yml
 create mode 100644 cookbooks/my_cookbook/Berksfile
 create mode 100644 cookbooks/my_cookbook/Berksfile.lock
 create mode 100644 cookbooks/my_cookbook/README.md
 create mode 100644 cookbooks/my_cookbook/attributes/default.rb
 create mode 100644 cookbooks/my_cookbook/chefignore
 create mode 100644 cookbooks/my_cookbook/libraries/ipaddress.rb
 create mode 100644 cookbooks/my_cookbook/metadata.rb
 create mode 100644 cookbooks/my_cookbook/recipes/.kitchen/logs/kitchen.log
 create mode 100644 cookbooks/my_cookbook/recipes/default.rb
 create mode 100644 cookbooks/my_cookbook/spec/spec_helper.rb
 create mode 100644 cookbooks/my_cookbook/spec/unit/recipes/default_spec.rb
 create mode 100644 cookbooks/my_cookbook/test/integration/roles/calculator_role.rb
 create mode 100644 cookbooks/my_cookbook/test/integration/roles/my_cookbook_role.rb
 create mode 100644 cookbooks/my_cookbook/test/recipes/default_test.rb
 create mode 100644 cookbooks/my_cookbook/test/smoke/default/default_test.rb
 create mode 100644 cookbooks/my_cookbook/test/smoke/server/git_daemon_test.rb
 create mode 100644 cookbooks/mysql-8.4.0/.foodcritic
 create mode 100644 cookbooks/mysql-8.4.0/CHANGELOG.md
 create mode 100644 cookbooks/mysql-8.4.0/CONTRIBUTING.md
 create mode 100644 cookbooks/mysql-8.4.0/MAINTAINERS.md
 create mode 100644 cookbooks/mysql-8.4.0/README.md
 create mode 100644 cookbooks/mysql-8.4.0/libraries/helpers.rb
 create mode 100644 cookbooks/mysql-8.4.0/libraries/matchers.rb
 create mode 100644 cookbooks/mysql-8.4.0/libraries/mysql_base.rb
 create mode 100644 cookbooks/mysql-8.4.0/libraries/mysql_client_installation_package.rb
 create mode 100644 cookbooks/mysql-8.4.0/libraries/mysql_config.rb
 create mode 100644 cookbooks/mysql-8.4.0/libraries/mysql_server_installation_package.rb
 create mode 100644 cookbooks/mysql-8.4.0/libraries/mysql_service.rb
 create mode 100644 cookbooks/mysql-8.4.0/libraries/mysql_service_base.rb
 create mode 100644 cookbooks/mysql-8.4.0/libraries/mysql_service_manager_systemd.rb
 create mode 100644 cookbooks/mysql-8.4.0/libraries/mysql_service_manager_sysvinit.rb
 create mode 100644 cookbooks/mysql-8.4.0/libraries/mysql_service_manager_upstart.rb
 create mode 100644 cookbooks/mysql-8.4.0/metadata.json
 create mode 100644 cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld-instance.erb
 create mode 100644 cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld-local.erb
 create mode 100644 cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld.erb
 create mode 100644 cookbooks/mysql-8.4.0/templates/default/my.cnf.erb
 create mode 100644 cookbooks/mysql-8.4.0/templates/default/smf/svc.method.mysqld.erb
 create mode 100644 cookbooks/mysql-8.4.0/templates/default/systemd/mysqld-wait-ready.erb
 create mode 100644 cookbooks/mysql-8.4.0/templates/default/systemd/mysqld.service.erb
 create mode 100644 cookbooks/mysql-8.4.0/templates/default/sysvinit/mysqld.erb
 create mode 100644 cookbooks/mysql-8.4.0/templates/default/tmpfiles.d.conf.erb
 create mode 100644 cookbooks/mysql-8.4.0/templates/default/upstart/mysqld-wait-ready.erb
 create mode 100644 cookbooks/mysql-8.4.0/templates/default/upstart/mysqld.erb
 create mode 100644 cookbooks/ntp-3.4.0/CHANGELOG.md
 create mode 100644 cookbooks/ntp-3.4.0/CONTRIBUTING.md
 create mode 100644 cookbooks/ntp-3.4.0/MAINTAINERS.md
 create mode 100644 cookbooks/ntp-3.4.0/README.md
 create mode 100644 cookbooks/ntp-3.4.0/attributes/default.rb
 create mode 100644 cookbooks/ntp-3.4.0/files/default/ntp.ini
 create mode 100644 cookbooks/ntp-3.4.0/files/default/ntp.leapseconds
 create mode 100644 cookbooks/ntp-3.4.0/files/default/usr.sbin.ntpd.apparmor
 create mode 100644 cookbooks/ntp-3.4.0/libraries/ntp_helper.rb
 create mode 100644 cookbooks/ntp-3.4.0/metadata.json
 create mode 100644 cookbooks/ntp-3.4.0/recipes/apparmor.rb
 create mode 100644 cookbooks/ntp-3.4.0/recipes/default.rb
 create mode 100644 cookbooks/ntp-3.4.0/recipes/mac_os_x_client.rb
 create mode 100644 cookbooks/ntp-3.4.0/recipes/windows_client.rb
 create mode 100644 cookbooks/ntp-3.4.0/templates/default/ntp.conf.erb
 create mode 160000 cookbooks/pwx_cookbook
 create mode 100644 cookbooks/starter/attributes/default.rb
 create mode 100644 cookbooks/starter/files/default/sample.txt
 create mode 100644 cookbooks/starter/metadata.rb
 create mode 100644 cookbooks/starter/recipes/default.rb
 create mode 100644 cookbooks/starter/templates/default/sample.erb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/.kitchen.yml
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/Berksfile
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/LICENSE
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/README.md
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/chefignore
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/metadata.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/recipes/default.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/recipes/deploy.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/recipes/functional.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/recipes/lint.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/recipes/provision.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/recipes/publish.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/recipes/quality.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/recipes/security.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/recipes/smoke.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/recipes/syntax.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/recipes/unit.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/secrets/fakey-mcfakerton
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
 create mode 100644 cookbooks/template_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
 create mode 100644 cookbooks/template_samples/.delivery/config.json
 create mode 100644 cookbooks/template_samples/.delivery/project.toml
 create mode 100644 cookbooks/template_samples/.gitignore
 create mode 100644 cookbooks/template_samples/.kitchen.yml
 create mode 100644 cookbooks/template_samples/Berksfile
 create mode 100644 cookbooks/template_samples/README.md
 create mode 100644 cookbooks/template_samples/attributes/default.rb
 create mode 100644 cookbooks/template_samples/chefignore
 create mode 100644 cookbooks/template_samples/metadata.rb
 create mode 100644 cookbooks/template_samples/recipes/default.rb
 create mode 100644 cookbooks/template_samples/spec/spec_helper.rb
 create mode 100644 cookbooks/template_samples/spec/unit/recipes/default_spec.rb
 create mode 100644 cookbooks/template_samples/templates/sudoers.erb
 create mode 100644 cookbooks/template_samples/templates/vars.erb
 create mode 100644 cookbooks/template_samples/test/smoke/default/default_test.rb
 create mode 160000 cookbooks/test
 create mode 100644 cookbooks/website/.delivery/build_cookbook/.kitchen.yml
 create mode 100644 cookbooks/website/.delivery/build_cookbook/Berksfile
 create mode 100644 cookbooks/website/.delivery/build_cookbook/LICENSE
 create mode 100644 cookbooks/website/.delivery/build_cookbook/README.md
 create mode 100644 cookbooks/website/.delivery/build_cookbook/chefignore
 create mode 100644 cookbooks/website/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
 create mode 100644 cookbooks/website/.delivery/build_cookbook/metadata.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/recipes/default.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/recipes/deploy.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/recipes/functional.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/recipes/lint.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/recipes/provision.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/recipes/publish.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/recipes/quality.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/recipes/security.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/recipes/smoke.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/recipes/syntax.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/recipes/unit.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/secrets/fakey-mcfakerton
 create mode 100644 cookbooks/website/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
 create mode 100644 cookbooks/website/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
 create mode 100644 cookbooks/website/.delivery/config.json
 create mode 100644 cookbooks/website/.delivery/project.toml
 create mode 100644 cookbooks/website/.gitignore
 create mode 100644 cookbooks/website/.kitchen.yml
 create mode 100644 cookbooks/website/Berksfile
 create mode 100644 cookbooks/website/README.md
 create mode 100644 cookbooks/website/chefignore
 create mode 100644 cookbooks/website/metadata.rb
 create mode 100644 cookbooks/website/recipes/default.rb
 create mode 100644 cookbooks/website/resources/web
 create mode 100644 cookbooks/website/spec/spec_helper.rb
 create mode 100644 cookbooks/website/spec/unit/recipes/default_spec.rb
 create mode 100644 cookbooks/website/templates/httpd.conf.erb
 create mode 100644 cookbooks/website/templates/httpd.service.erb
 create mode 100644 cookbooks/website/test/smoke/default/default_test.rb
 create mode 100644 environments/dev.rb
 create mode 100644 nodes/ravidrasinghk.json
 create mode 100644 roles/my_cookbook_role.rb
 create mode 100644 roles/starter.rb
 create mode 100644 roles/web_servers.rb

diff --git a/.chef/knife.rb b/.chef/knife.rb
new file mode 100644
index 0000000000000000000000000000000000000000..4253801036fc2ee5676d22dbe26cddcc5b59a2af
--- /dev/null
+++ b/.chef/knife.rb
@@ -0,0 +1,9 @@
+# See http://docs.chef.io/config_rb_knife.html for more information on knife configuration options
+
+current_dir = File.dirname(__FILE__)
+log_level                :info
+log_location             STDOUT
+node_name                "ravidrasinghk"
+client_key               "#{current_dir}/ravidrasinghk.pem"
+chef_server_url          "https://api.chef.io/organizations/kt_chef"
+cookbook_path            ["#{current_dir}/../cookbooks"]
diff --git a/.chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170629124718.490924 b/.chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170629124718.490924
new file mode 100644
index 0000000000000000000000000000000000000000..795aa29da5a3ffe49f9b16b6b4b4856d0593ca2f
--- /dev/null
+++ b/.chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170629124718.490924
@@ -0,0 +1 @@
+Hello World !!!!
\ No newline at end of file
diff --git a/.chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170702124429.799501 b/.chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170702124429.799501
new file mode 100644
index 0000000000000000000000000000000000000000..28cf67640e502fe8e879a863bd1bbcd4366689e8
--- /dev/null
+++ b/.chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170702124429.799501
@@ -0,0 +1 @@
+Hallo Welt!
diff --git a/.chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170702131026.292212 b/.chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170702131026.292212
new file mode 100644
index 0000000000000000000000000000000000000000..795aa29da5a3ffe49f9b16b6b4b4856d0593ca2f
--- /dev/null
+++ b/.chef/local-mode-cache/backup/tmp/greeting.txt.chef-20170702131026.292212
@@ -0,0 +1 @@
+Hello World !!!!
\ No newline at end of file
diff --git a/.chef/local-mode-cache/cache/chef-client-running.pid b/.chef/local-mode-cache/cache/chef-client-running.pid
new file mode 100644
index 0000000000000000000000000000000000000000..174b831bf0ab3165c75c3867469fd4da6dedb33d
--- /dev/null
+++ b/.chef/local-mode-cache/cache/chef-client-running.pid
@@ -0,0 +1 @@
+9755
\ No newline at end of file
diff --git a/.chef/local-mode-cache/cache/chef-stacktrace.out b/.chef/local-mode-cache/cache/chef-stacktrace.out
new file mode 100644
index 0000000000000000000000000000000000000000..2642443de2679e79a582ea73c7aa2d4899dac287
--- /dev/null
+++ b/.chef/local-mode-cache/cache/chef-stacktrace.out
@@ -0,0 +1,23 @@
+Generated at 2017-07-02 12:43:31 +0530
+Chef::Exceptions::RecipeNotFound: could not find recipe file /home/ravi/chef-repo/recipes[my_cookbook]
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/run_context.rb:353:in `load_recipe_file'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/policy_builder/expand_node_object.rb:100:in `block in setup_run_context'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/policy_builder/expand_node_object.rb:99:in `each'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/policy_builder/expand_node_object.rb:99:in `setup_run_context'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:511:in `setup_run_context'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/client.rb:281:in `run'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:295:in `block in fork_chef_client'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:283:in `fork'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:283:in `fork_chef_client'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:248:in `block in run_chef_client'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/local_mode.rb:44:in `with_server_connectivity'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:236:in `run_chef_client'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:450:in `loop'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:450:in `interval_run_chef_client'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application/client.rb:434:in `run_application'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/lib/chef/application.rb:59:in `run'
+/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.19.36/bin/chef-client:26:in `<top (required)>'
+/bin/chef-client:57:in `load'
+/bin/chef-client:57:in `<main>'
\ No newline at end of file
diff --git a/.chef/local-mode-cache/cache/cookbooks/greeting/.kitchen.yml b/.chef/local-mode-cache/cache/cookbooks/greeting/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..ee87fa9cc314e17119d51423aba0e4c6106aef6d
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/greeting/.kitchen.yml
@@ -0,0 +1,26 @@
+---
+driver:
+  name: vagrant
+
+provisioner:
+  name: chef_zero
+  # You may wish to disable always updating cookbooks in CI or other testing environments.
+  # For example:
+  #   always_update_cookbooks: <%= !ENV['CI'] %>
+  always_update_cookbooks: true
+
+verifier:
+  name: inspec
+
+platforms:
+  - name: ubuntu-16.04
+  - name: centos-7.3
+
+suites:
+  - name: default
+    run_list:
+      - recipe[greeting::default]
+    verifier:
+      inspec_tests:
+        - test/smoke/default
+    attributes:
diff --git a/.chef/local-mode-cache/cache/cookbooks/greeting/Berksfile b/.chef/local-mode-cache/cache/cookbooks/greeting/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..34fea2166bafb6b6a62488907c532a9d4692d35e
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/greeting/Berksfile
@@ -0,0 +1,3 @@
+source 'https://supermarket.chef.io'
+
+metadata
diff --git a/.chef/local-mode-cache/cache/cookbooks/greeting/README.md b/.chef/local-mode-cache/cache/cookbooks/greeting/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..041c4e67e3c8a5f3ceb509eb1665ce573c9fcff4
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/greeting/README.md
@@ -0,0 +1,4 @@
+# greeting
+
+TODO: Enter the cookbook description here.
+
diff --git a/.chef/local-mode-cache/cache/cookbooks/greeting/chefignore b/.chef/local-mode-cache/cache/cookbooks/greeting/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/greeting/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/.chef/local-mode-cache/cache/cookbooks/greeting/metadata.rb b/.chef/local-mode-cache/cache/cookbooks/greeting/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..9774e130ab95bdad5f84f6dafa744f7cdf9c28a3
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/greeting/metadata.rb
@@ -0,0 +1,20 @@
+name 'greeting'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'All Rights Reserved'
+description 'Installs/Configures greeting'
+long_description 'Installs/Configures greeting'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+# The `issues_url` points to the location where issues for this cookbook are
+# tracked.  A `View Issues` link will be displayed on this cookbook's page when
+# uploaded to a Supermarket.
+#
+# issues_url 'https://github.com/<insert_org_here>/greeting/issues'
+
+# The `source_url` points to the development reposiory for this cookbook.  A
+# `View Source` link will be displayed on this cookbook's page when uploaded to
+# a Supermarket.
+#
+# source_url 'https://github.com/<insert_org_here>/greeting'
diff --git a/.chef/local-mode-cache/cache/cookbooks/greeting/recipes/default.rb b/.chef/local-mode-cache/cache/cookbooks/greeting/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..d01c597872cf23188da77e0487086548eba4b963
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/greeting/recipes/default.rb
@@ -0,0 +1,3 @@
+greeting_file "Ohai" do 
+  title "Chef"
+end
diff --git a/.chef/local-mode-cache/cache/cookbooks/greeting/resources/file.rb b/.chef/local-mode-cache/cache/cookbooks/greeting/resources/file.rb
new file mode 100644
index 0000000000000000000000000000000000000000..57ee54291a621c6908545bb4fa27208daccc9fc7
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/greeting/resources/file.rb
@@ -0,0 +1,15 @@
+property :title, String, default: "World"
+property :path, String, default: "/tmp/greeting.txt"
+action :create do  
+  Chef::Log.info "Adding '#{new_resource.name}' greeting as #{new_resource.path}"  
+  file new_resource.path do    
+    content "#{new_resource.name}, #{new_resource.title}!"    
+    action :create  
+  end
+end
+action :remove do  
+  Chef::Log.info "Removing '#{new_resource.name}' greeting #{new_resource.path}"  
+  file new_resource.path do    
+    action :delete  
+  end
+end
diff --git a/.chef/local-mode-cache/cache/cookbooks/my_cookbook/.kitchen.yml b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..2734b254fe79489f488e71778c2ecfbc89d51902
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/.kitchen.yml
@@ -0,0 +1,27 @@
+---
+driver:
+  name: vagrant
+
+provisioner:
+  name: chef_zero
+  always_update_cookbooks: true
+
+verifier:
+  name: inspec
+
+platforms:
+  - name: centos-7.3
+suites:
+  - name: default
+    run_list:
+      - recipe[my_cookbook::default]
+  - name: with_role
+    run_list:
+      - role[my_cookbook_role]
+  - name: with_calc_role
+    run_list:
+      - role[calculator_role]
+    verifier:
+      inspec_tests:
+        - test/smoke/default
+    attributes:
diff --git a/.chef/local-mode-cache/cache/cookbooks/my_cookbook/Berksfile b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..34fea2166bafb6b6a62488907c532a9d4692d35e
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/Berksfile
@@ -0,0 +1,3 @@
+source 'https://supermarket.chef.io'
+
+metadata
diff --git a/.chef/local-mode-cache/cache/cookbooks/my_cookbook/Berksfile.lock b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/Berksfile.lock
new file mode 100644
index 0000000000000000000000000000000000000000..42543f0f20cfe46cfc21a58118b8b261db55c4d3
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/Berksfile.lock
@@ -0,0 +1,7 @@
+DEPENDENCIES
+  my_cookbook
+    path: .
+    metadata: true
+
+GRAPH
+  my_cookbook (0.1.0)
diff --git a/.chef/local-mode-cache/cache/cookbooks/my_cookbook/README.md b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..cf62bc9ed951d4872fcbaf2a9b4f3a98a6e9b2ad
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/README.md
@@ -0,0 +1,4 @@
+# my_cookbook
+
+TODO: Enter the cookbook description here.
+
diff --git a/.chef/local-mode-cache/cache/cookbooks/my_cookbook/attributes/default.rb b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/attributes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..c6fafcc237b9568d496792c7e9ce0cff2df2d5a1
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/attributes/default.rb
@@ -0,0 +1,4 @@
+default['my_cookbook']['greeting'] = 'ohai, chef!'
+default['my_cookbook']['message'] = 'Hello World !!!!'
+default['my_cookbook']['calcvar'] = "#{node['my_cookbook']['Hi']} #{node['my_cookbook']['world']}"
+default['my_cookbook']['ipaddr'] = 'ravi'
diff --git a/.chef/local-mode-cache/cache/cookbooks/my_cookbook/chefignore b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/.chef/local-mode-cache/cache/cookbooks/my_cookbook/libraries/ipaddress.rb b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/libraries/ipaddress.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7d2a7bad7174e7fadf7e92e6f5dc9644bf60c2e7
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/libraries/ipaddress.rb
@@ -0,0 +1,11 @@
+#class Chef::Recipe  
+#  def netmask(ipaddress)    
+#    IPAddress(ipaddress).netmask  
+#  end
+#end
+
+class Chef::Recipe::IPAddress      
+  def self.netmask(ipaddress)        
+    IPAddress(ipaddress).netmask      
+  end    
+end
diff --git a/.chef/local-mode-cache/cache/cookbooks/my_cookbook/metadata.rb b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b28c08fc2ab127ed38c82c4fc1f8fa5212f220bc
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/metadata.rb
@@ -0,0 +1,20 @@
+name 'my_cookbook'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'All Rights Reserved'
+description 'Installs/Configures my_cookbook'
+long_description 'Installs/Configures my_cookbook'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+# The `issues_url` points to the location where issues for this cookbook are
+# tracked.  A `View Issues` link will be displayed on this cookbook's page when
+# uploaded to a Supermarket.
+#
+# issues_url 'https://github.com/<insert_org_here>/my_cookbook/issues'
+
+# The `source_url` points to the development reposiory for this cookbook.  A
+# `View Source` link will be displayed on this cookbook's page when uploaded to
+# a Supermarket.
+#
+# source_url 'https://github.com/<insert_org_here>/my_cookbook'
diff --git a/.chef/local-mode-cache/cache/cookbooks/my_cookbook/recipes/default.rb b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..6510a816b8f386d7e7a34bd7512fb6bd62b2fd82
--- /dev/null
+++ b/.chef/local-mode-cache/cache/cookbooks/my_cookbook/recipes/default.rb
@@ -0,0 +1,19 @@
+file '/tmp/greeting.txt' do
+  content node['my_cookbook']['message']
+end
+
+file '/tmp/calc.txt' do
+  content node['my_cookbook']['calcvar']
+end
+
+chef_gem 'ipaddress' do
+  compile_time true
+end
+
+require 'ipaddress'
+ip = '10.10.0.0/24'
+#mask = netmask(ip)
+mask = IPAddress.netmask(ip)
+Chef::Log.info("Netmask of #{ip}: #{mask}")
+
+
diff --git a/.chef/ravidrasinghk.pem b/.chef/ravidrasinghk.pem
new file mode 100644
index 0000000000000000000000000000000000000000..d51adc143dd84bf5ebbd03bd0f516a30b802ec63
--- /dev/null
+++ b/.chef/ravidrasinghk.pem
@@ -0,0 +1,27 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIEpgIBAAKCAQEAv24ckM2lK8iRsHcmRy7LXsAGp1dRCjpya3PY6pClhMw0MCfg
+F0LC1TbGT9WgLqqKkUyW+rha0bw8tjB7F7hpwSX6qtDgimCtn8Mtn7ZMkp1WaYH+
+96iNDm3kEXDJ4TBs1Bv9s1edXSnCbjU/Nvv5k2VhX78vdt/WMdlc5PeGeBL49UpA
+G7XV5PZm7FTV5LRhdY6hiDJpxlQLabyKgr22uBkB2BwrViVpYI7CGxfMYXS46o/E
+XzFJ8IovP5RTK12BfWmONjcllI1w8YC8Kw+oy2RtDw9f0NjF1AUx45CV1ivYlNhH
+iJqOLis1fws6ibDMo9p7g0/owJ6eemhX9fEPywIDAQABAoIBAQCkGUw7hU31/nWF
+hF433xFPI+WQRfWegwPawPBOA7kf4b1LGqOqzPwfsljFzycFWgR3EeTLAIY6DNcu
+hti+OMPPYzNCgtQ5Sy8LKVFO/AMgG+gbgeiDfOWOXP2JRdqJQ+3G1kfhGVY4qreV
+qeeKxu3nQJz8avPRP4hqKx7K2LVY7865CUqA/PoZYMhVSCkuA8f3lcscbsR3x2yD
+uj64Ep2RMvhbPmNVTleDwK+Q8NJz8AESoXc24aTFHE4N5gKTU3TjX5x00ITtsCb7
+MRBrBtpJtj6/x0sz+Ft4WF3XamPr1kyyX9PbH8al2ftY3eDO4SoZmyWhp8TPA8Da
+kQFhrOZBAoGBAOdrVkQXmtTpjm7xTxbQmPXwE9VdLYuGMtMS40jHPE9jRr4ocR2Y
+r0yr+kM5K9lJs0IQqBYem00K1OA+Ej7Ny/ILH1FYdZeJPNzktuj6dX11Oyv1MaUb
+FuBtqhqFzQeM+RAaScqowAKm8+Dk8vHBGkHTtJ5w0CQEzXnLhxSp4a3TAoGBANPD
+Z6fn2xXgugmiG7eTyKQ/QsFLZmpnz4sAzdXfOX16ZzpFWuWyTHpGH20H3mja1FfM
+Yxs7DyUqrL7kZivyAEVbxvd96dQwuumOcA7iHpoCVQikdLWSw2lXwbM1jcVEW6oE
+pJZOWSSARMt8CGHzplc3uhu3GhYa58OFn5vnukMpAoGBANELzAyMiifkpu6e+wOw
+AUzAxxnJJvhPjJ/RAxFeMKPCGUhzfeLvZwNKozKQdYS+J7j5FO2OTlmk/DFowNCM
+1LtbwrmXv/nYVetwi64feXyQJpiJ0IPF2b94MN3umgxFE0Oxi5EPKQv8RneUOcWa
+2x41oIYzgEHZOMfZy7cl0qBTAoGBANIN0pRK+JcLA37qvnOqtCu4VI9IK58Aum43
+rfWoJ27ALAUxJqkR46qmRCXy2DtKVbeBlg082BkV66SvCmos8vfZwdNdosRIUh+6
+mo0o3xIFnjOkbeBuZEfqNMl/JdG3rPVJBbnSnboHQjZWIjqHZUi+jm1PgyDKL3tS
+4K/VfH2BAoGBALJ1w6Z/Feqrno5MKN+KWI0Hkw+ySqYczVPzOsOGIO7A00u+upW7
+jGKuB/lKQreJ3Qr2YtxKX9Qs//9owachh8s9+ANJC9otPIQZUvMaK4D7NoptWFuE
+/EmbnYqSY2kW1RYqnIFNZ0wO21tUg1nnWqE0K0aMLrKyh0FTAUQTuACP
+-----END RSA PRIVATE KEY-----
\ No newline at end of file
diff --git a/.chef/syntaxcache/127e798411cab8e993931accbf8249927e29bf37c3b97881e7c66c553464a44a b/.chef/syntaxcache/127e798411cab8e993931accbf8249927e29bf37c3b97881e7c66c553464a44a
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/19f82c69798b5cd2e1fd676f5bb70997eaf18fc67f9127df507d8f590fef02b0 b/.chef/syntaxcache/19f82c69798b5cd2e1fd676f5bb70997eaf18fc67f9127df507d8f590fef02b0
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/1adeb9ae00e48acb9f9c46a51044cba572bbc96dd9f9783ba575d940256f305c b/.chef/syntaxcache/1adeb9ae00e48acb9f9c46a51044cba572bbc96dd9f9783ba575d940256f305c
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/1f0796fef33fef791e605b9699559c058b118d0fd215f382d20431ef27802451 b/.chef/syntaxcache/1f0796fef33fef791e605b9699559c058b118d0fd215f382d20431ef27802451
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/210166d3f8414c2c923d2e4cac3dc838371899e125b544fa24df5aa66dd4a90f b/.chef/syntaxcache/210166d3f8414c2c923d2e4cac3dc838371899e125b544fa24df5aa66dd4a90f
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/3298a06ffe91fe1bebc2bb981ed5d6c2f5c9a29c735cc14a17a9cb5ce05a4d9c b/.chef/syntaxcache/3298a06ffe91fe1bebc2bb981ed5d6c2f5c9a29c735cc14a17a9cb5ce05a4d9c
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/3b505e9eb28bcd4c08e7208677b452f114bf62deccbb4ba55b661a36adffa1fd b/.chef/syntaxcache/3b505e9eb28bcd4c08e7208677b452f114bf62deccbb4ba55b661a36adffa1fd
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/499dde047290d4278b235c806e890d98c3c6996b40cf6f3df10fb890b35f702d b/.chef/syntaxcache/499dde047290d4278b235c806e890d98c3c6996b40cf6f3df10fb890b35f702d
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/5098823e5fc7c24b093b6dd57b2ab988ee8591990169c5dce3f8e091f58cea0e b/.chef/syntaxcache/5098823e5fc7c24b093b6dd57b2ab988ee8591990169c5dce3f8e091f58cea0e
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/60ad6d0acafb6124cc20b754d94857dc5411d30510f152b558c33e4536ec6f37 b/.chef/syntaxcache/60ad6d0acafb6124cc20b754d94857dc5411d30510f152b558c33e4536ec6f37
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/69820a89db516ddd63888df6e5a65a45bd789a75bd9676b2d0f88b1730334e7c b/.chef/syntaxcache/69820a89db516ddd63888df6e5a65a45bd789a75bd9676b2d0f88b1730334e7c
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/7e4a25d3e05334e08091044e9818322b5a63a66dbf815e5e6eabcf9ab5a09f61 b/.chef/syntaxcache/7e4a25d3e05334e08091044e9818322b5a63a66dbf815e5e6eabcf9ab5a09f61
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/8c47bf4230301f9ece4c11eaf0955e1f4987a2b5b2075a12f6644ab1159775d0 b/.chef/syntaxcache/8c47bf4230301f9ece4c11eaf0955e1f4987a2b5b2075a12f6644ab1159775d0
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/91d277ae666e6f025197d64a68f21e973e8635462ef0ef9752acb2dbc497e5d3 b/.chef/syntaxcache/91d277ae666e6f025197d64a68f21e973e8635462ef0ef9752acb2dbc497e5d3
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/9307f0984d3f0e55b34ad2a266c1c4e8b9e824724965baea6ba5b4a103b95711 b/.chef/syntaxcache/9307f0984d3f0e55b34ad2a266c1c4e8b9e824724965baea6ba5b4a103b95711
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/96a9b92021900d9fdf9a4ea225333e6e835e8ad46e304e2b5c2e9c30e3612ed5 b/.chef/syntaxcache/96a9b92021900d9fdf9a4ea225333e6e835e8ad46e304e2b5c2e9c30e3612ed5
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/a51f534e31b22aefebbe2b84a2b9fa802be709fe119b599dd1fd2fc48df8aa4f b/.chef/syntaxcache/a51f534e31b22aefebbe2b84a2b9fa802be709fe119b599dd1fd2fc48df8aa4f
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/bd1a1058778918e8a92fb6bcc81465d912408c468e171d355185c0f10d27a301 b/.chef/syntaxcache/bd1a1058778918e8a92fb6bcc81465d912408c468e171d355185c0f10d27a301
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/c7895b51ad006f744245fb6aab2cde8f756773eb450cb95a3a798c406db985c2 b/.chef/syntaxcache/c7895b51ad006f744245fb6aab2cde8f756773eb450cb95a3a798c406db985c2
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/c7b8b08c636d8f222c2a1ef36d7278478f3c7a67c2107b41e94848255b0bd75d b/.chef/syntaxcache/c7b8b08c636d8f222c2a1ef36d7278478f3c7a67c2107b41e94848255b0bd75d
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/cd54e4a81b49c9538504411c017f9ff59303d90aabfa60e59905b51773abab04 b/.chef/syntaxcache/cd54e4a81b49c9538504411c017f9ff59303d90aabfa60e59905b51773abab04
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/d178ffa6be9223d475060472286d0e276fb428b37e425b6d139d8eb64abfe368 b/.chef/syntaxcache/d178ffa6be9223d475060472286d0e276fb428b37e425b6d139d8eb64abfe368
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/e16e09ea3bb2219a42192868f9908d43fb9cbd7aa4a896184e193e9dd71e3b85 b/.chef/syntaxcache/e16e09ea3bb2219a42192868f9908d43fb9cbd7aa4a896184e193e9dd71e3b85
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/eb63513623393c7199b5380e9ded4c7d53a2e668114403309bcc875722aca235 b/.chef/syntaxcache/eb63513623393c7199b5380e9ded4c7d53a2e668114403309bcc875722aca235
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/.chef/syntaxcache/f9a3e45f498fc396da65c5f7bb9cf5c17700428a63232637c49508292a80210b b/.chef/syntaxcache/f9a3e45f498fc396da65c5f7bb9cf5c17700428a63232637c49508292a80210b
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/Berksfile b/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..9ea45ef254470964d2f5f64b37c73ede5b6e92c1
--- /dev/null
+++ b/Berksfile
@@ -0,0 +1,3 @@
+source 'https://supermarket.chef.io'
+cookbook "docker"
+cookbook "php"
diff --git a/Berksfile.lock b/Berksfile.lock
new file mode 100644
index 0000000000000000000000000000000000000000..3681b227c41a820922b9b9f27772a50df8560f32
--- /dev/null
+++ b/Berksfile.lock
@@ -0,0 +1,24 @@
+DEPENDENCIES
+  docker
+  php
+
+GRAPH
+  build-essential (8.0.3)
+    mingw (>= 1.1)
+    seven_zip (>= 0.0.0)
+  compat_resource (12.19.0)
+  docker (2.15.13)
+  mingw (2.0.1)
+    seven_zip (>= 0.0.0)
+  mysql (8.4.0)
+  ohai (5.1.0)
+  php (4.4.0)
+    build-essential (>= 0.0.0)
+    mysql (>= 6.0.0)
+    yum-epel (>= 0.0.0)
+  seven_zip (2.0.2)
+    windows (>= 1.2.2)
+  windows (3.1.1)
+    ohai (>= 4.0.0)
+  yum-epel (2.1.2)
+    compat_resource (>= 12.16.3)
diff --git a/README.md b/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..766dd66f9e45b090c163e77fc9ed115b477dd2fc
--- /dev/null
+++ b/README.md
@@ -0,0 +1,2 @@
+# chef-repo
+for training purposes
diff --git a/Vagrantfile b/Vagrantfile
new file mode 100644
index 0000000000000000000000000000000000000000..2a738127aedc761941f2e812d317f2c8708538ac
--- /dev/null
+++ b/Vagrantfile
@@ -0,0 +1,13 @@
+Vagrant.configure("2") do |config| 
+  config.vm.box = "opscode-ubuntu-16.04" 
+  config.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-16.04_chef-provisionerless.box" 
+  config.omnibus.chef_version = :latest  
+
+ config.vm.provision :chef_client do |chef|   
+   chef.provisioning_path = "/etc/chef"   
+   chef.chef_server_url = "https://api.chef.io/organizations/kt_chef"  
+   chef.validation_key_path = ".chef/ravindrasinghk.pem"   
+   chef.validation_client_name = "ravindrasinghk"   
+   chef.node_name = "vagrantserver1" 
+ end
+end
diff --git a/cookbooks/chefignore b/cookbooks/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..704d148a1d48a5d3a00ac900d3b1360ed86faf57
--- /dev/null
+++ b/cookbooks/chefignore
@@ -0,0 +1,65 @@
+# Chef
+.chef/*.pem
+.chef/encrypted_data_bag_secret
+
+# Ruby
+.rake_test_cache
+.rvmrc
+.rbenv-version
+
+# Emacs
+*~
+\#*\#
+/.emacs.desktop
+/.emacs.desktop.lock
+.elc
+auto-save-list
+tramp
+.\#*
+
+# Emacs org-mode
+.org-id-locations
+*_archive
+
+# SublimeText
+*.sublime-workspace
+
+# TextMate
+*.tmproj
+*.tmproject
+tmtags
+
+# Vim
+.*.s[a-w][a-z]
+*.un~
+Session.vim
+.netrwhist
+*~
+
+# OS X
+.DS_Store
+.AppleDouble
+.LSOverride
+Icon
+._*
+.Spotlight-V100
+.Trashes
+
+# Windows
+Thumbs.db
+ehthumbs.db
+Desktop.ini
+$RECYCLE.BIN/
+
+# Git
+.git/
+.gitignore
+.gitmodules
+
+# Subversion
+.svn/
+
+# Mercurial
+.hg/*
+*/.hg/*
+.hgignore
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/.kitchen.yml b/cookbooks/custom_resource_samples/.delivery/build_cookbook/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..775a7d607753cf12625df4865c8da117189303de
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/.kitchen.yml
@@ -0,0 +1,21 @@
+---
+driver:
+  name: vagrant
+  synced_folders:
+    - [<%= File.join(ENV['PWD'], '..', '..')%>, '/tmp/repo-data']
+
+provisioner:
+  name: chef_zero
+  encrypted_data_bag_secret_key_path: 'secrets/fakey-mcfakerton'
+  data_bags_path: './data_bags'
+  product_name: chefdk
+
+platforms:
+  - name: ubuntu-16.04
+  - name: centos-7.3
+
+suites:
+  - name: default
+    run_list:
+      - recipe[test]
+    attributes:
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/Berksfile b/cookbooks/custom_resource_samples/.delivery/build_cookbook/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..61dab723b78f5f07a4a04767cca81aaf363fba45
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/Berksfile
@@ -0,0 +1,7 @@
+source 'https://supermarket.chef.io'
+
+metadata
+
+group :delivery do
+  cookbook 'test', path: './test/fixtures/cookbooks/test'
+end
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/LICENSE b/cookbooks/custom_resource_samples/.delivery/build_cookbook/LICENSE
new file mode 100644
index 0000000000000000000000000000000000000000..d31c097cd765797dae86c191c2ed6548bc4f8ea6
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/LICENSE
@@ -0,0 +1,3 @@
+Copyright 2017 The Authors
+
+All rights reserved, do not redistribute.
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/README.md b/cookbooks/custom_resource_samples/.delivery/build_cookbook/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..297af5a63e2feab2b6617f3576a3807bc8e240d1
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/README.md
@@ -0,0 +1,146 @@
+# build_cookbook
+
+A build cookbook for running the parent project through Chef Delivery
+
+This build cookbook should be customized to suit the needs of the parent project. Using this cookbook can be done outside of Chef Delivery, too. If the parent project is a Chef cookbook, we've detected that and "wrapped" [delivery-truck](https://github.com/chef-cookbooks/delivery-truck). That means it is a dependency, and each of its pipeline phase recipes is included in the appropriate phase recipes in this cookbook. If the parent project is not a cookbook, it's left as an exercise to the reader to customize the recipes as needed for each phase in the pipeline.
+
+## .delivery/config.json
+
+In the parent directory to this build_cookbook, the `config.json` can be modified as necessary. For example, phases can be skipped, publishing information can be added, and so on. Refer to customer support or the Chef Delivery documentation for assistance on what options are available for this configuration.
+
+## Test Kitchen - Local Verify Testing
+
+This cookbook also has a `.kitchen.yml` which can be used to create local build nodes with Test Kitchen to perform the verification phases, `unit`, `syntax`, and `lint`. When running `kitchen converge`, the instances will be set up like Chef Delivery "build nodes" with the [delivery_build cookbook](https://github.com/chef-cookbooks/delivery_build). The reason for this is to make sure that the same exact kind of nodes are used by this build cookbook are run on the local workstation as would run Delivery. It will run `delivery job verify PHASE` for the parent project.
+
+Modify the `.kitchen.yml` if necessary to change the platforms or other configuration to run the verify phases. After making changes in the parent project, `cd` into this directory (`.delivery/build_cookbook`), and run:
+
+```
+kitchen test
+```
+
+## Recipes
+
+Each of the recipes in this build_cookbook are run in the named phase during the Chef Delivery pipeline. The `unit`, `syntax`, and `lint` recipes are additionally run when using Test Kitchen for local testing as noted in the above section.
+
+## Making Changes - Cookbook Example
+
+When making changes in the parent project (that which lives in `../..` from this directory), or in the recipes in this build cookbook, there is a bespoke workflow for Chef Delivery. As an example, we'll discuss a Chef Cookbook as the parent.
+
+First, create a new branch for the changes.
+
+```
+git checkout -b testing-build-cookbook
+```
+
+Next, increment the version in the metadata.rb. This should be in the _parent_, not in this, the build_cookbook. If this is not done, the verify phase will fail.
+
+```
+% git diff
+<SNIP>
+-version '0.1.0'
++version '0.1.1'
+```
+
+The change we'll use for an example is to install the `zsh` package. Write a failing ChefSpec in the cookbook project's `spec/unit/recipes/default_spec.rb`.
+
+```ruby
+require 'spec_helper'
+
+describe 'godzilla::default' do
+  context 'When all attributes are default, on Ubuntu 16.04' do
+    let(:chef_run) do
+      runner = ChefSpec::ServerRunner.new(platform: 'ubuntu', version: '16.04')
+      runner.converge(described_recipe)
+    end
+
+    it 'installs zsh' do
+      expect(chef_run).to install_package('zsh')
+    end
+  end
+end
+```
+
+Commit the local changes as work in progress. The `delivery job` expects to use a clean git repository.
+
+```
+git add ../..
+git commit -m 'WIP: Testing changes'
+```
+
+From _this_ directory (`.delivery/build_cookbook`, relative to the parent cookbook project), run
+
+```
+cd .delivery/build_cookbook
+kitchen converge
+```
+
+This will take some time at first, because the VMs need to be created, Chef installed, the Delivery CLI installed, etc. Later runs will be faster until they are destroyed. It will also fail on the first VM, as expected, because we wrote the test first. Now edit the parent cookbook project's default recipe to install `zsh`.
+
+```
+cd ../../
+$EDITOR/recipes/default.rb
+```
+
+It should look like this:
+
+```
+package 'zsh'
+```
+
+Create another commit.
+
+```
+git add .
+git commit -m 'WIP: Install zsh in default recipe'
+```
+
+Now rerun kitchen from the build_cookbook.
+
+```
+cd .delivery/build_cookbook
+kitchen converge
+```
+
+This will take awhile because it will now pass on the first VM, and then create the second VM. We should have warned you this was a good time for a coffee break.
+
+```
+Recipe: test::default
+
+- execute HOME=/home/vagrant delivery job verify unit --server localhost --ent test --org kitchen
+  * execute[HOME=/home/vagrant delivery job verify lint --server localhost --ent test --org kitchen] action run
+    - execute HOME=/home/vagrant delivery job verify lint --server localhost --ent test --org kitchen
+
+    - execute HOME=/home/vagrant delivery job verify syntax --server localhost --ent test --org kitchen
+
+Running handlers:
+Running handlers complete
+Chef Client finished, 3/32 resources updated in 54.665445968 seconds
+Finished converging <default-centos-71> (1m26.83s).
+```
+
+Victory is ours! Our verify phase passed on the build nodes.
+
+We are ready to run this through our Delivery pipeline. Simply run `delivery review` on the local system from the parent project, and it will open a browser window up to the change we just added.
+
+```
+cd ../..
+delivery review
+```
+
+## FAQ
+
+### Why don't I just run rspec and foodcritic/rubocop on my local system?
+
+An objection to the Test Kitchen approach is that it is much faster to run the unit, lint, and syntax commands for the project on the local system. That is totally true, and also totally valid. Do that for the really fast feedback loop. However, the dance we do with Test Kitchen brings a much higher degree of confidence in the changes we're making, that everything will run on the build nodes in Chef Delivery. We strongly encourage this approach before actually pushing the changes to Delivery.
+
+### Why do I have to make a commit every time?
+
+When running `delivery job`, it expects to merge the commit for the changeset against the clean master branch. If we don't save our progress by making a commit, our local changes aren't run through `delivery job` in the Test Kitchen build instances. We can always perform an interactive rebase, and modify the original changeset message in Delivery with `delivery review --edit`. The latter won't modify the git commits, only the changeset in Delivery.
+
+### What do I do next?
+
+Make changes in the cookbook project as required for organizational goals and needs. Modify the `build_cookbook` as necessary for the pipeline phases that the cookbook should go through.
+
+### What if I get stuck?
+
+Contact Chef Support, or your Chef Customer Success team and they will help you get unstuck.
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/chefignore b/cookbooks/custom_resource_samples/.delivery/build_cookbook/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json b/cookbooks/custom_resource_samples/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
new file mode 100644
index 0000000000000000000000000000000000000000..af375ea862bf1f1dd7690ebd71e5c1cedc6d70ff
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
@@ -0,0 +1 @@
+{"id": "delivery_builder_keys"}
\ No newline at end of file
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/metadata.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..d9b56212aaa865b11ac7fc206d6e986fb65d284d
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/metadata.rb
@@ -0,0 +1,8 @@
+name 'build_cookbook'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'all_rights'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+depends 'delivery-truck'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/default.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b2746b56b1e55c70e2c97e0af0d57ee087d94e9a
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/default.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::default'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/deploy.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/deploy.rb
new file mode 100644
index 0000000000000000000000000000000000000000..9a61010dcda0604510d6dcafc9bc6db2877f1d8c
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/deploy.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: deploy
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::deploy'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/functional.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/functional.rb
new file mode 100644
index 0000000000000000000000000000000000000000..cae646df925c8c63d1c7c000314aff74c9923636
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/functional.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: functional
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::functional'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/lint.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/lint.rb
new file mode 100644
index 0000000000000000000000000000000000000000..40aee0c5b4de883a34713d9ea8651228e7a429aa
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/lint.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: lint
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::lint'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/provision.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/provision.rb
new file mode 100644
index 0000000000000000000000000000000000000000..57d0a78cea413ac381326cfb669b4a6754d4a0a8
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/provision.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: provision
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::provision'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/publish.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/publish.rb
new file mode 100644
index 0000000000000000000000000000000000000000..ad890fd0ec92477b700e75c0a3c466522f38fc8c
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/publish.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: publish
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::publish'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/quality.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/quality.rb
new file mode 100644
index 0000000000000000000000000000000000000000..f5d4d743afebf2f8557ff6f0e652e2e1cac54b10
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/quality.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: quality
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::quality'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/security.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/security.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7d47af168dd97b5e4b696b2c0940c00ebd27395b
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/security.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: security
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::security'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/smoke.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/smoke.rb
new file mode 100644
index 0000000000000000000000000000000000000000..2203cbd2f3812d553ec660d94a5d054debaa44bf
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/smoke.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: smoke
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::smoke'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/syntax.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/syntax.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7147f96a26936d888ee82a9a5e6f8d1db266ed8d
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/syntax.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: syntax
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::syntax'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/unit.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/unit.rb
new file mode 100644
index 0000000000000000000000000000000000000000..fa6d9ba4ecf28a65db1cb545cabdd114eb790239
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/recipes/unit.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: unit
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::unit'
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/secrets/fakey-mcfakerton b/cookbooks/custom_resource_samples/.delivery/build_cookbook/secrets/fakey-mcfakerton
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..17250391e21792b0418942941b4ef01d6ef41d78
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
@@ -0,0 +1,2 @@
+name 'test'
+version '0.1.0'
\ No newline at end of file
diff --git a/cookbooks/custom_resource_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb b/cookbooks/custom_resource_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..5675ce6b8dbbfca9dc4ba7c77e795185e8a3ba05
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
@@ -0,0 +1,8 @@
+%w(unit lint syntax).each do |phase|
+  # TODO: This works on Linux/Unix. Not Windows.
+  execute "HOME=/home/vagrant delivery job verify #{phase} --server localhost --ent test --org kitchen" do
+    cwd '/tmp/repo-data'
+    user 'vagrant'
+    environment('GIT_DISCOVERY_ACROSS_FILESYSTEM' => '1')
+  end
+end
diff --git a/cookbooks/custom_resource_samples/.delivery/config.json b/cookbooks/custom_resource_samples/.delivery/config.json
new file mode 100644
index 0000000000000000000000000000000000000000..6c0e69fc01572a56024e29f4d4cb59c84d0d9d34
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/config.json
@@ -0,0 +1,12 @@
+{
+  "version": "2",
+  "build_cookbook": {
+    "name": "build_cookbook",
+    "path": ".delivery/build_cookbook"
+  },
+  "skip_phases": [],
+  "job_dispatch": {
+    "version": "v2"
+  },
+  "dependencies": []
+}
diff --git a/cookbooks/custom_resource_samples/.delivery/project.toml b/cookbooks/custom_resource_samples/.delivery/project.toml
new file mode 100644
index 0000000000000000000000000000000000000000..c453234bc9b4b151cc57be8f613ad75c614dc762
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.delivery/project.toml
@@ -0,0 +1,36 @@
+# Delivery Prototype for Local Phases Execution
+#
+# The purpose of this file is to prototype a new way to execute
+# phases locally on your workstation. The delivery-cli will read
+# this file and execute the command(s) that are configured for
+# each phase. You can customize them by just modifying the phase
+# key on this file.
+#
+# By default these phases are configured for Cookbook Workflow only
+#
+# As this is still a prototype we are not modifying the current
+# config.json file and it will continue working as usual.
+
+[local_phases]
+unit = "chef exec rspec spec/"
+lint = "chef exec cookstyle"
+# Foodcritic includes rules only appropriate for community cookbooks
+# uploaded to Supermarket. We turn off any rules tagged "supermarket"
+# by default. If you plan to share this cookbook you should remove
+# '-t ~supermarket' below to enable supermarket rules.
+syntax = "chef exec foodcritic . --exclude spec -f any -t ~supermarket"
+provision = "chef exec kitchen create"
+deploy = "chef exec kitchen converge"
+smoke = "chef exec kitchen verify"
+# The functional phase is optional, you can define it by uncommenting
+# the line below and running the command: `delivery local functional`
+# functional = ""
+cleanup = "chef exec kitchen destroy"
+
+# Remote project.toml file
+#
+# Specify a remote URI location for the `project.toml` file.
+# This is useful for teams that wish to centrally manage the behavior
+# of the `delivery local` command across many different projects.
+#
+# remote_file = "https://url/project.toml"
diff --git a/cookbooks/custom_resource_samples/.gitignore b/cookbooks/custom_resource_samples/.gitignore
new file mode 100644
index 0000000000000000000000000000000000000000..febee30092d697dc9b7c7a2f42bfd571fe9da25a
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.gitignore
@@ -0,0 +1,21 @@
+.vagrant
+*~
+*#
+.#*
+\#*#
+.*.sw[a-z]
+*.un~
+
+# Bundler
+Gemfile.lock
+bin/*
+.bundle/*
+
+# test kitchen
+.kitchen/
+.kitchen.local.yml
+
+# Chef
+Berksfile.lock
+.zero-knife.rb
+Policyfile.lock.json
diff --git a/cookbooks/custom_resource_samples/.kitchen.yml b/cookbooks/custom_resource_samples/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..075e1e699f1eb9b633a673d0e0cf20a9a89d901b
--- /dev/null
+++ b/cookbooks/custom_resource_samples/.kitchen.yml
@@ -0,0 +1,26 @@
+---
+driver:
+  name: vagrant
+
+provisioner:
+  name: chef_zero
+  # You may wish to disable always updating cookbooks in CI or other testing environments.
+  # For example:
+  #   always_update_cookbooks: <%= !ENV['CI'] %>
+  always_update_cookbooks: true
+
+verifier:
+  name: inspec
+
+platforms:
+  - name: ubuntu-16.04
+  - name: centos-7.3
+
+suites:
+  - name: default
+    run_list:
+      - recipe[custom_resource_samples::default]
+    verifier:
+      inspec_tests:
+        - test/smoke/default
+    attributes:
diff --git a/cookbooks/custom_resource_samples/Berksfile b/cookbooks/custom_resource_samples/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..34fea2166bafb6b6a62488907c532a9d4692d35e
--- /dev/null
+++ b/cookbooks/custom_resource_samples/Berksfile
@@ -0,0 +1,3 @@
+source 'https://supermarket.chef.io'
+
+metadata
diff --git a/cookbooks/custom_resource_samples/README.md b/cookbooks/custom_resource_samples/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..ba37dcb3b4390519eaee7502914392eaedc20bfd
--- /dev/null
+++ b/cookbooks/custom_resource_samples/README.md
@@ -0,0 +1,4 @@
+# custom_resource_samples
+
+TODO: Enter the cookbook description here.
+
diff --git a/cookbooks/custom_resource_samples/chefignore b/cookbooks/custom_resource_samples/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/cookbooks/custom_resource_samples/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/cookbooks/custom_resource_samples/metadata.rb b/cookbooks/custom_resource_samples/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..38fdfa16822d4e966a7f4e225182aeda4fa355f0
--- /dev/null
+++ b/cookbooks/custom_resource_samples/metadata.rb
@@ -0,0 +1,20 @@
+name 'custom_resource_samples'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'All Rights Reserved'
+description 'Installs/Configures custom_resource_samples'
+long_description 'Installs/Configures custom_resource_samples'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+# The `issues_url` points to the location where issues for this cookbook are
+# tracked.  A `View Issues` link will be displayed on this cookbook's page when
+# uploaded to a Supermarket.
+#
+# issues_url 'https://github.com/<insert_org_here>/custom_resource_samples/issues'
+
+# The `source_url` points to the development reposiory for this cookbook.  A
+# `View Source` link will be displayed on this cookbook's page when uploaded to
+# a Supermarket.
+#
+# source_url 'https://github.com/<insert_org_here>/custom_resource_samples'
diff --git a/cookbooks/custom_resource_samples/recipes/default.rb b/cookbooks/custom_resource_samples/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..de8d9abcd2f6fcefa5bf8ebd8f84e28c4b4d9d16
--- /dev/null
+++ b/cookbooks/custom_resource_samples/recipes/default.rb
@@ -0,0 +1,14 @@
+#
+# Cookbook:: custom_resource_samples
+# Recipe:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+
+#when we don't give name to the resource 
+custom_resource_samples_site 'httpd' do 
+  homepage '<h1>Name is not gvn to the custom resource in the resource file</h1>'
+end 
+
+#when name is given 
+httpd_resource 'httpd' do 
+  homepage '<h1>Name is given to the custom resource</h1>'
diff --git a/cookbooks/custom_resource_samples/resources/site.rb b/cookbooks/custom_resource_samples/resources/site.rb
new file mode 100644
index 0000000000000000000000000000000000000000..5698b9f44f6d4adf9fb63d1ee993fd9f2d4661c5
--- /dev/null
+++ b/cookbooks/custom_resource_samples/resources/site.rb
@@ -0,0 +1,24 @@
+property :homepage, string, default: '<h1>Hello World</h1>'
+
+#if we don't give name to cookbook the name of this resource will be
+#cookbooname_filename
+
+resource_name :http_resource
+
+action :create do
+  package 'httpd'
+  
+  service 'httpd' do 
+    action [:enable, :start]
+  end 
+
+  file '/var/www/html/index.html' do
+    content homepage
+  end
+end
+
+action :delete do
+  package 'httpd' do 
+    action :delete
+  end 
+end 
diff --git a/cookbooks/custom_resource_samples/spec/spec_helper.rb b/cookbooks/custom_resource_samples/spec/spec_helper.rb
new file mode 100644
index 0000000000000000000000000000000000000000..1dd5126bf629c317834b3c7bb35842981fc93233
--- /dev/null
+++ b/cookbooks/custom_resource_samples/spec/spec_helper.rb
@@ -0,0 +1,2 @@
+require 'chefspec'
+require 'chefspec/berkshelf'
diff --git a/cookbooks/custom_resource_samples/spec/unit/recipes/default_spec.rb b/cookbooks/custom_resource_samples/spec/unit/recipes/default_spec.rb
new file mode 100644
index 0000000000000000000000000000000000000000..a5254de3c3c04a77777405ceddfa8a1c3aa86c46
--- /dev/null
+++ b/cookbooks/custom_resource_samples/spec/unit/recipes/default_spec.rb
@@ -0,0 +1,22 @@
+#
+# Cookbook:: custom_resource_samples
+# Spec:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+
+require 'spec_helper'
+
+describe 'custom_resource_samples::default' do
+  context 'When all attributes are default, on an Ubuntu 16.04' do
+    let(:chef_run) do
+      # for a complete list of available platforms and versions see:
+      # https://github.com/customink/fauxhai/blob/master/PLATFORMS.md
+      runner = ChefSpec::ServerRunner.new(platform: 'ubuntu', version: '16.04')
+      runner.converge(described_recipe)
+    end
+
+    it 'converges successfully' do
+      expect { chef_run }.to_not raise_error
+    end
+  end
+end
diff --git a/cookbooks/custom_resource_samples/test/smoke/default/default_test.rb b/cookbooks/custom_resource_samples/test/smoke/default/default_test.rb
new file mode 100644
index 0000000000000000000000000000000000000000..fe2b9f8c77ac00935a82849446a6bf37546439fe
--- /dev/null
+++ b/cookbooks/custom_resource_samples/test/smoke/default/default_test.rb
@@ -0,0 +1,18 @@
+# # encoding: utf-8
+
+# Inspec test for recipe custom_resource_samples::default
+
+# The Inspec reference, with examples and extensive documentation, can be
+# found at http://inspec.io/docs/reference/resources/
+
+unless os.windows?
+  # This is an example test, replace with your own test.
+  describe user('root'), :skip do
+    it { should exist }
+  end
+end
+
+# This is an example test, replace it with your own test.
+describe port(80), :skip do
+  it { should_not be_listening }
+end
diff --git a/cookbooks/docker-2.15.13/.foodcritic b/cookbooks/docker-2.15.13/.foodcritic
new file mode 100644
index 0000000000000000000000000000000000000000..913f038a416e769b47e960ef729cff3b6f17e333
--- /dev/null
+++ b/cookbooks/docker-2.15.13/.foodcritic
@@ -0,0 +1 @@
+~FC005
diff --git a/cookbooks/docker-2.15.13/CHANGELOG.md b/cookbooks/docker-2.15.13/CHANGELOG.md
new file mode 100644
index 0000000000000000000000000000000000000000..f5bdc3affdc9a979b61a8dcebd488c9942224c1e
--- /dev/null
+++ b/cookbooks/docker-2.15.13/CHANGELOG.md
@@ -0,0 +1,1718 @@
+# Docker Cookbook Changelog
+
+This file is used to list changes made in each version of the docker cookbook.
+
+## 2.15.13 (2017-06-15)
+- kill_after property default value to nil
+- only use --raw-logs argument in versions which support it
+
+## 2.15.12 (2017-06-13)
+- reverting gem metadata for now as it requires build tools dependency for the json gem
+
+## 2.15.11 (2017-06-13)
+- make docker.service override match closer to stock
+
+## 2.15.10 (2017-06-13)
+- adding support for chef >= 12.8 metadata gem installs
+- using docker-api 1.33.4
+
+## 2.15.9 (2017-06-13)
+- updating systemd docker.service with changes from official docker install
+- 12.04 doesnt support docker 17.05.0
+
+## 2.15.8 (2017-06-12)
+- Bumping to latest docker version
+
+## 2.15.7 (2017-06-12)
+- Adding Ubuntu Zesty 17.04 support
+
+## 2.15.6 (2017-05-01)
+- #853 - Add network_aliases support
+- #854 - Expose package_name through the docker_service resource
+
+## 2.15.5 (2017-04-19)
+- Fixing up memory related API keys
+- Adding KernelMemory
+- Adding MemorySwappiness
+- Adding MemoryReservation
+- Fixing MemorySwap convergatude (bug #833)
+- Allowing for both integer and string input for all memory values
+
+## 2.15.4 (2017-04-19)
+- Fixing security_opt property
+
+## 2.15.3 (2017-04-18)
+- Updating for 17.04.0
+
+## 2.15.2 (2017-02-15)
+- Reverting 12.15.1 changes
+
+## 2.15.1 (2017-02-15)
+- 799 - Adding service restarts to systemd template resources
+
+## 2.15.0 (2017-02-15)
+- Removing dependency on compat_resource.
+- Now requires Chef 12.5 or higher.
+
+## 2.14.3 (2017-02-14)
+- Defaulting package installation version to docker 1.13.1
+
+## 2.14.3 (2017-02-06)
+- Reverting gem vendor due to c extensions in json dep.
+- Using docker-api-1.33.2 in \_autoload
+
+## 2.14.2 (2017-01-31)
+- Vendoring docker-api-1.33.2
+
+## 2.14.1 (2017-01-31)
+- defaulting to package installation on amazonlinux
+
+## 2.14.0 (2017-01-31)
+- various updates for Docker 1.13.0
+- defaulting to 1.13.0 for docker_installation
+- package name fixes for new debian/ubuntu schemes
+- defaulting restart_policy to nil in docker_resource
+
+## 2.13.11 (2017-01-25)
+- #798 - Temporary "fix" for delayed service restart: using :immediate
+  notification in docker_service resource
+
+## 2.13.10 (2017-01-13)
+- #800 - fixing ubuntu startup script
+- #802 - using chef_version methong only in 12.6.0 and higher
+
+## 2.13.9 (2016-12-29)
+- 793 - Removing service restarts due to chef-client behavior changes.
+
+## 2.13.8 (2016-12-28)
+- #794 - network mode bridge
+- removing emacs package in upstart provider
+- Adding dokken / travis test matrix
+
+## 2.13.7 (2016-12-24)
+- adding additional logging drivers
+- adding action :reload
+
+## 2.13.6 (2016-12-22)
+- adding ip_address support for docker_containers
+- adding volume_driver support
+
+## 2.13.5 (2016-12-21)
+- Temporary work around for broke upstart provider in chef-client
+- Fixing package name for ubuntu version later than 1.12.3
+
+## 2.13.4 (2016-12-20)
+- Fixing comparison operator docker daemon args for versions < 1.12
+
+## 2.13.3 (2016-12-20)
+- 792 - Reverting 791 fix
+
+## 2.13.2 (2016-12-20)
+- 791 - Fix logic bug in docker_service daemon args calculation
+
+## 2.13.1 (2016-12-19)
+- #786 - Adding options hash to docker_volume connection
+- #787 - Adding wait loop to docker_service_manager_execute :stop
+
+## 2.13.0 (2016-11-25)
+- Adding sysctl property to docker_container resource
+
+## 2.12.0 (2016-11-25)
+- Updating compat_resource dep to 12.16.2
+- Updating docker-api gem dep 1.32.1
+
+## 2.11.1 (2016-11-24)
+- Fix for #701 - Revert commit that caused restart loops in systemd provider
+
+## 2.11.0 (2016-11-23)
+- make systemd MountFlags configurable
+- make running wait time configurable
+
+## 2.10.0 (2016-11-23)
+- Implement network connect/disconnect
+- Fixed dns options mutual exclusion
+- Misc test harness cleanup
+
+## 2.9.10 (2016-11-14)
+-renaming systemd_conf to systemd_args due to a conflict with systemd cookbook
+
+## 2.9.9 (2016-11-14)
+-Fixing resource idempotence in labels property
+-Fix regression introduced by #741, breaking Debian installation
+-Added ro_rootfs => ReadonlyRootfs special cases mapping
+-Enable systemd options as a docker_service attribute
+
+## 2.9.8 (2016-11-08)
+- Fixed a typo in an error message
+- Enable tarball install through docker_service
+- option log_opt is defined as --log-opt value1 --log-opt value2 instead of --log-opt=value1 --log-opt=value2
+- Depend on a working compat_resource cookbook
+
+## 2.9.7 (2016-10-14)
+- Require the most recent compat_resource
+- Get foodcritic passing
+- Update the Rakefile and use cookstyle
+- Use cookstyle in Travis
+- Add matchers for docker_installation_tarball
+
+## v2.9.6
+- entrypoint not entry_point README
+- dockerd binary on 1.12+ for upstart
+- fix docker.socket for systemd
+
+## v2.9.5
+- bumping docker-api gem
+
+## v2.9.4
+- Switch to the dockerd binary on 1.12+
+- Add links to resources overview list
+
+## v2.9.3
+- add uts_mode support for docker_container provider (#730)
+
+## v2.9.2
+- adding feature ReadonlyRootfs
+- bumping docker version to 1.11.2
+- removing etcd, fails tests for xenial and swarm will have it builtin in 1.12
+
+## v2.9.1
+- implement userns_mode for containers
+
+## v2.9.0
+- Feature - docker_installation_tarball resource
+- Patch - Adding missing http_proxy support to rhel/sysvinit
+- Patch #705 - Avoid installing docker-api gem in ChefSpec
+
+## v2.8.0
+- Feature - User namespace configuration capability for docker_service
+
+## v2.7.1
+
+- Updated test matrix in the readme to reflect reality
+
+## v2.7.0
+
+- Initial support for Ubuntu 16.04
+- Initial support for Fedora 22 / 23
+
+## v2.6.8
+
+- notifies need to restart service immediately to prevent containers from stopping
+- bumping docker-api version 1.28.0
+- adding tests for image load
+
+## v2.6.7
+
+- only wait for running state if detached
+- updating systemd template and bugfix for socket
+
+## v2.6.6
+
+- refactor of docker-wait-ready
+
+## v2.6.5
+
+- need a guard around docker_socket incase it isn't set
+
+## v2.6.4
+
+- passing parsed socket file to init script
+- removing unused action remove_link
+
+## v2.6.3
+
+- Implements load action for images
+
+## v2.6.2
+
+- Include init support for oracle platform
+
+## v2.6.1
+
+- Add support for docker_container image property with custom repository port
+- Resolve restarting container races
+- New resource docker_exec
+
+## v2.6.0
+
+- :insecure_registry in the docker_service provider can now be a string or array
+- scientific and oracle have been added to the metadata as supported platforms
+- The effect of -1 on memory_swap has been clarified in the readme
+- Tests have been updated to run faster using trap vs. nc
+- Checksums for new Docker releases have been added
+
+## v2.5.9
+
+- Depend on compat_resource >= 12.9.0
+
+## v2.5.8
+
+- Setting desired_state: true for volumes / binds properties
+- Now redeploy container on volume change.
+- Change :restart action behavior to :run containers if they don't exist yet.
+
+## v2.5.7
+
+- Remove vendored gems in favor of chef_gem install
+- Extending available log_driver options
+
+## v2.5.6
+
+- Adding no_proxy to Upstart defaults template
+
+## v2.5.5
+
+- Fixing up various default: nil warnings
+
+## v2.5.4
+
+- Allowing nil as type possibility for docker_service :package_options
+- property
+
+## v2.5.3
+
+- Adding ChefSpec.define_matcher for all resources
+
+## v2.5.2
+
+- Setting log_driver and log_opts to desired_state: false
+
+## v2.5.1
+
+- package_options property to pass options to underlying package resource
+
+## v2.5.0
+
+- Defaulting installation version to 1.10.0
+- Documenting docker_network resource in README
+- Documenting docker_volume resource in README
+
+## v2.4.26
+
+- Adding docker_volume resource
+
+## v2.4.25
+
+- Various fixes to docker_network around subsequent runs
+- Utilizing property coersion and converge_if_changed
+
+## v2.4.24
+
+- Avoiding restart loops in chef-client 12.4.3
+- Using delayed notifications for service restarts
+
+## v2.4.23
+
+- Getting rid of Chef 13 deprecation warning
+- returning nil in default_tls_cert_path
+
+## v2.4.22
+
+- Revamped systemd resources to use package native unit files
+- Using /etc/systemd/system to override settings
+
+## v2.4.21
+
+- Revamped sysvinit resources to use package native scripts.a
+- Using /etc/sysconfig on rhel and /etc/default on Debian
+- Ubuntu 12.04 now uses Upstart
+- Debian Wheezy support
+- Fixed install_method validation
+
+## v2.4.20
+
+- Temporarily disabling validate_install_method
+
+## v2.4.19
+
+- Adding docker_tag force property
+
+## v2.4.18
+
+- Fixing broken version / install_method validation check
+
+## v2.4.17
+
+- Re-doing service_manager_upstart implementation
+- Using package native init config and utilizing /etc/default
+
+## v2.4.16
+
+- Adding validation proc for docker_service.version to throw error
+- when specifying version with script installations
+
+## v2.4.15
+
+- fixing raiseure -> failure typo in docker_container validation
+- Patching vendored docker-api-1.26.0
+- <https://github.com/swipely/docker-api/issues/369>
+
+## v2.4.14
+
+- Updating .gitignore and re-adding vendored docker-api gem
+
+## v2.4.13
+
+- stricter conditionals on container validation
+- updating vendored docker-api gem to 1.26.0
+- setting default Docker installation version to 1.9.1
+- updating inspec for service-execute
+- updating inspec for service-sysvinit
+- updating inspec for service-upstart
+- updating inspec for service-systemd
+- removing unused serverspec suites
+
+## v2.4.12
+
+- Set default docker_container.exposed_port to empty Hash
+
+## v2.4.11
+
+- Updating metadata to use compat_resource ~> 12.7.1
+
+## v2.4.10
+
+- (re)adding host property to docker_network
+
+## v2.4.9
+
+- using require_relative to load files
+- specifying resource_name instead of use_automatic_resource_name
+
+## v2.4.8
+
+- removing duplicate :tls properties
+- removing instances of 'default: nil'
+- depending on 'compat_resource', '~> 12.5.26'
+
+## v2.4.7
+
+- Using Gem::Version to handle semantic verisoning and be compatible for ≥ 1.10
+- v2.4.6
+
+--------------------------------------------------------------------------------
+
+- 613 - Fix docker_container redeploys with bad link array ordering
+
+## v2.4.5
+
+- Fix coerce_volumes in case current value is a Chef::Node::ImmutableArray
+- Adding tests for binds alias to volumes
+
+## v2.4.4
+
+- Updating vendored docker-api to 1.25.0
+- Adding experimental docker_network resource
+
+## v2.4.3
+
+- Setting docker_container property defaults to match Docker CLI
+- Reverting image-id hack
+- Adding disable-legacy-registry
+
+## v2.4.2
+
+- Unifying volumes and binds properties on docker_container resource
+- Should use "volumes" everywhere now. Aliased method for backward compatibility.
+
+## v2.4.1
+
+- Various fixes in wait-ready loops:
+- 598 - systemd manager return value check for docker-wait-ready
+- 600 - execute manager last iteration check fix.
+
+## v2.4.0
+
+- Adding support for pid_mode and ipc_mode to docker_container
+
+## v2.3.23
+
+- Changing bridge property validation to String
+
+## v2.3.22
+
+- using parsed_hostname to force nil value to Docker API when
+- network_mode is host
+
+## v2.3.21
+
+- reverting hostname coerce
+
+## v2.3.20
+
+- adding coerce_hostname
+- Fixing github issues #542 and #572
+
+## v2.3.19
+
+switching systemd unit MountFlags from slave to private
+
+## v2.3.18
+
+- removing detach/autoremove conflict check
+
+## v2.3.17
+
+- Reverting gem loading trickery. Reverting to LOAD_PATH.push
+
+## v2.3.16
+
+- Adding validation checking for detach / autoremove property
+- conflicts
+
+## v2.3.15
+
+- Loading vendored gems the same way chef_gem would.
+- Resolving Chef provisioning conflicts
+
+## v2.3.14
+
+- Supporting Upstart for Linux Mint
+
+## v2.3.13
+
+- Updating compat_resource dep to >=12.5.23
+
+## v2.3.12
+
+- Pinning compat_resource version to 12.5.14 to avoid warning
+
+## v2.3.11
+
+- Using LOAD_PATH.push instead of LOAD_PATH.unshift for vendored gems
+
+## v2.3.10
+
+- Fix method name for pidfile in docker_service_manager_execute
+
+## v2.3.9
+
+- Adding Linux Mint to helpers_installation_package
+
+## v2.3.8
+
+- 582 using symbols in excon opts
+- Resolves 458
+
+## v2.3.7
+
+- 574 - updating docker to 1.9.1
+- 575 - remove nil values from container create hash
+- 576 - updating centos to 7.1
+- 577 - check for conflicting properties
+- 578 - Update docker_container library documentation on timeouts
+- 579 - suggest adding kill_after on a failed action stop
+
+## v2.3.6
+
+- 573 adding support for port range
+
+## v2.3.5
+
+- fixing desired_state on docker_container force property
+
+## v2.3.4
+
+- Fixing up ports logic
+- Supporting multiple ip/ports
+
+## v2.3.3
+
+- vendoring docker-api-1.24.1
+
+## v2.3.2
+
+- vendoring docker-api-1.24.0
+- setting desired_state:false for tls properties
+
+## v2.3.1
+
+- Support for multiple docker_service instances with docker_service_manager_upstart
+- Support for multiple docker_service instances with docker_service_manager_systemd
+
+## v2.3.0
+
+- Support for multiple docker_service instances with docker_service_manager_sysvinit
+
+## v2.2.11
+
+- Support for multiple docker_service instances with docker_service_manager_execute
+
+## v2.2.10
+
+- 565 - Add support for --exec-opt to docker daemon
+- 566 - Rename cluster-opts to cluster-opt
+
+## v2.2.9
+
+- 560 - Add cluster-store options to docker daemon
+
+## v2.2.8
+
+- 559 - setting tls and tls_verify should to nil by default
+
+## v2.2.7
+
+- Supporting Docker ENV variables without explicitly setting
+- per-resource host TLS information
+- Serverspec -> inspec fixes
+
+## v2.2.6
+
+- Docker 1.9 support
+- Updates to pull_image id checking
+- Updates default_network_mode calculation
+
+## v2.2.5
+
+- Updating metadata to depend on compat_resource >= 12.5.14
+
+## v2.2.4
+
+- More minor fixes to Upstart script template
+
+## v2.2.3
+
+- Minor fix to Upstart script template
+
+## v2.2.2
+
+- Upstart script now waits for all filesystems instead of just local-filesystems
+
+## v2.2.1
+
+- marking attach_ properties desired_state: false
+
+## v2.2.0
+
+- Switching docker_installation method to auto
+- Cleaning up some old Chef::Provider namespace cruft
+
+## v2.1.23
+
+- Adding docker_service auto_restart property. Defaulting to false.
+
+## v2.1.22
+
+- Updating README with docker_installation and docker_service_manager resources
+- Adding "desired_state: false" to docker_installation properties
+
+## v2.1.21
+
+- Refactoring docker_service into docker_service_manager_whatever
+- Fixing bug in coerce_daemon_labels
+- Fixes to resources-171 suite serverspec
+
+## v2.1.20
+
+- Fixing docker_installation_script resource
+
+## v2.1.19
+
+- Various cruft cleanup in service templates.
+- Explicitly enabling ipv4 forwarding in execute provider
+- docker_service_sysvinit test suite
+- docker_service_upstart test suite
+- docker_service_systemd test suite
+
+## v2.1.18
+
+- Kitchen refactoring
+- docker_service_execute bug fixes
+
+## v2.1.17
+
+- Fixing merge meant for v2.1.16
+
+## v2.1.16
+
+- Adding install_method property to select docker_installation resource
+- Using docker_installation_binary by default
+- Fixing up serverspec for pre-182 resource test recipes
+
+## v2.1.15
+
+- Updates to README around kill_after property on :stop action
+- Updates to various test containers to handle SIGKILL properly
+
+## v2.1.14
+
+- Fixing missing property regression in docker_service
+
+## v2.1.13
+
+- Fixing up independent of docker_installation_binary resource, adding
+- kitchen suites and serverspec tests
+
+## v2.1.12
+
+- 531 - Bugfix for invalid parameters in docker_container :stop
+- action
+
+## v2.1.11
+
+- Fixing LocalJumpError in docker_container
+
+## v2.1.10
+
+- Adding 'desired_state: false' to various timeouts
+
+## v2.1.9
+
+- Refactoring: Moving remote file installation method into
+- docker_installation_binary resource
+
+## v2.1.8
+
+- Refactoring: Removing classes from the Chef::Resource namespace
+
+## v2.1.7
+
+- Fixing connection information in docker_container and helpers_base
+- Refactoring .kitchen.yml tests
+
+## v2.1.6
+
+- Enabling TLS options for docker_container and docker_image
+- Various test fixes
+
+## v2.1.5
+
+- 528 - Don't enable https connection scheme if not using TLS
+
+## v2.1.4
+
+- 517 - Disallowing nil value for Docker command
+
+## v2.1.3
+
+- 514 - Fixing coerce and comparison logic in exposed_ports and
+- volumes to prevent unwanted restarts
+
+## v2.1.2
+
+- Adding why_run support
+
+## v2.1.1
+
+- 511 - fix container wait state checking
+- 512 - wait for registry ports to be open in test recipe
+- 519 - updating README to include labels#511 - fix container
+
+## v2.1.0
+
+- Changing docker_container default action to :run from
+- :run_if_missing.
+
+## v2.0.4
+
+- 504 - stop and start should wait for the container to complete
+- 506 - restart to use the api endpoint
+
+## v2.0.3
+
+- Allowing nil for docker_registry properties
+
+## v2.0.2
+
+- Fixing LocalJumpError caused by next instead of return helper methods
+
+## v2.0.1
+
+- 491 - Return best host for docker to connect
+- 495 - iptables opts shouldn't be forced to true/false
+- 497 - Removing property_is_set so timeout pick up defaults
+
+## v2.0.0
+
+- Converted resources from LWRP to Chef 12.5 Custom Resources
+- Added dependency on compat_resource cookbook, works back to 12.0.0
+- Various fixes around sysvinit scripts in docker_service
+- Total backwards compatibility with recipes written for chef-docker 1.x
+
+## v1.0.49
+
+- Handling NilClass error on docker_image default creds handling
+
+## v1.0.48
+
+- Adding a 20 try timeout to the docker_wait_ready block
+
+## v1.0.47
+
+- 484 - Fall back to creds for index.docker.io on image pull
+
+## v1.0.46
+
+- 438 - Adding per-resource host property to docker_image and
+- docker_container
+
+## v1.0.45
+
+- Allow :redeploy on missing containers
+- TLS fixes
+- Updating sysvinit script to use docker_opts
+
+## v1.0.44
+
+- Adding Label support for docker_container
+
+## v1.0.43
+
+- Switching docker_service sysvinit provider from ::Insserv to ::Debian
+
+## v1.0.42
+
+- Fix for docker_service to allow setting icc to false
+- Get chefspec happy on latest nightly chefdk again
+- Accepting both String and Array for default_ulimit
+
+## v1.0.41
+
+- Refactoring broken sysvinit scripts
+- 421 - Adding docker-wait-ready blocks
+- Discovered TLS verification is broken. Disabling for now.
+
+## v1.0.40
+
+- Fixing broken Chef::Provider::DockerService::Execute
+
+## v1.0.39
+
+- Various fixes around sysvinit
+
+## v1.0.38
+
+- docker_container - enabling Docker CLI syntax for ulimits
+
+## v1.0.37
+
+- Adding tests for #416
+
+## v1.0.36
+
+- Replacing docker_log helper function with docker_service.logfile
+
+## v1.0.35
+
+- Creating DockerHelpers::Service namespace and moving appropriate methods into it.
+- Start of load_current_resource implementation for docker_service for #423
+
+## v1.0.34
+
+- notifying new_resource to restart when updating docker_bin
+
+## v1.0.33
+
+- Registry authentication fixes and slight docker_image refactor
+- Updates for foodcritic and travis
+
+## v1.0.32
+
+- 451 Changed default docker_container memory_swap to prevent unwanted redeploys.
+
+## v1.0.31
+
+- 447 - Fix for log-config driver type
+- 448 - Fix unwanted redeploys due to calculation of exposed_port changes.
+- 450 - Treat docker_container volumes attribute as unmanaged to prevent redeploys
+
+## v1.0.30
+
+- 427 - Qualify port bindings with protocol even when implicitly tcp.
+- 443 - Added docker_container log_driver and log_opts attributes.
+- Changing docker_image read_timeout default to 60
+- Misc cleanup for README and Gemfile
+
+## v1.0.29
+
+- 432 Fixing :redeploy so it returns the container the correct state
+- (create vs run)
+- Fixing blank variable interpolation in tmpfiles.d/docker.conf
+
+## v1.0.28
+
+- Adding journald gelf and fluentd to logging driver whitelist
+- Allow specifying multiple DNS servers for docker_service
+
+## v1.0.27
+
+- Cleaning up code duplication across docker_service init templates
+
+## v1.0.26
+
+- switching from get.docker.io to get.docker.com
+
+## v1.0.25
+
+- Updating checksum in specs for 1.8.2
+- Downloading over https
+- Removing nonexistent action :enable from docker_service
+
+## v1.0.24
+
+- 410 - Fixing Dockerfile override behavior for hostname and ulimits
+- on api 1.9
+- Upgrading to Docker 1.8.2 for default version
+
+## v1.0.23
+
+- Fixing Dockerfile / resource override behavior for working_dir
+
+## v1.0.22
+
+- Removed patch authentication header to bundled docker-api gem
+- Moved credential reset logic into image provider
+
+## v1.0.21
+
+- 379 and #356 - patching vendored docker-api gem authentication headers
+
+## v1.0.20
+
+- Handling the situation where USER COMMAND ENV and ENTRYPOINT are set in
+- an image build, but not in a docker_container resource
+
+## v1.0.19
+
+- Raising error on authentication error in docker_registry
+- Allowing an array for storage_opts in docker_service
+- Fixing parsed_checksum in docker_service
+- Fixing entrypoint parsing in docker_container
+
+## v1.0.18
+
+- Removing leftover log resources used for debugging in development
+
+## v1.0.17
+
+- Fixing up regressions in older Docker API versions introduced in cookbook release 1.0.15
+- _ Adding @api_version instance variable
+- Adding serialized_log_config
+- Adding parsed_network_mode
+
+## v1.0.16
+
+- Adding CIDR support for docker_service bip property
+
+## v1.0.15
+
+- 309 - Adding bits to enable container re-deployment when properties change
+
+## v1.0.14
+
+- Adding api read and write timeouts
+
+## v1.0.13
+
+- Fixing docker_service CLI argument generation for log-driver mtu and pidfile
+
+## v1.0.12
+
+- Fixing platform_family string (redhat -> rhel) in docker_service sysvinit provider
+
+## v1.0.11
+
+- Renaming retries to api_retries to not conflict with Chef::Resource
+
+## v1.0.10
+
+- Accepting userland-proxy flag
+- Fix bug in parsed_storage_driver method
+- Correcting usage of ip_forwarding flag
+- Let Docker pick --log-level instead of defaulting to :info
+
+## v1.0.9
+
+- Fixing Upstart respawn limit
+
+## v1.0.8
+
+- 382 - Fixing docker_service to accept an array for storage_opt
+
+## v1.0.7
+
+- 381 - Removing prepended whitespace in DOCKER_OPTS
+
+## v1.0.6
+
+- 369 - Fixing up HostConfig.NetworkMode to work as expected
+
+## v1.0.5
+
+- 241 - Only updating docker_image resource on :pull if new bits were pulled
+- on tag (useful for latest)
+- Changing docker_image default action to :pull
+
+## v1.0.4
+
+- 368 - Fixing port property to be kind_of [String, Array]
+- Adding missing detach property. Defaulting to false.
+
+## v1.0.3
+
+- 366 - Using docker_kernel instead of docker_arch in parsed_checksum
+
+## v1.0.2
+
+- 365 - Fix logic for parsing an array of hosts
+- 363 - Allow an array for port property
+
+## v1.0.1
+
+- Switching docker_service default TLS setting to false to it works
+- out of the box
+
+## v1.0.0
+
+- vendoring the docker-api rubygem
+- docker_image and docker_container resources now use speak to the
+- Docker Remote API instead of shelling out
+- docker_containers must now have unique names
+- "volumes" property now acts like the VOLUMES directive in a Dockerfile
+- added "binds" property for local mounting
+- standardizing on "repo" and "tag" as components of an image
+- identifier
+
+## v0.43.0 (2015-07-28)
+
+- Updating README to reflect docker_image and docker_tag reality
+- Implementing rm, noprune, nocache and force on docker_image
+
+## v0.42.0 (2015-07-28)
+
+- removing docker_image :load and :tag action
+- adding docker_tag resource
+- renaming docker_tag image_name property to :repo; creating alias
+- implementing docker_image :push action
+
+## v0.41.0 (2015-07-26)
+
+- vendoring docker-api rubygem
+- beginning work to convert docker_image to use native API instead of shelling out
+- changing docker_image default action to :pull_if_missing
+- removing some deprecated interfaces
+
+## v0.40.3 (2015-07-14)
+
+- remove --no-trunc from docker container status in sysvinit script
+- 334 - docker_container tag property (issue 320)
+- 331 - docker_container ulimit property
+- 328 - Upstart job respawn status detection
+- 326 - Upstart job restart behavior fix sysvinit script examples
+- 236 - README#324 - Reference DOCKER_OPTS Amazon Linux#325
+
+## v0.40.2 (2015-07-14)
+
+- Support for older Chef versions
+
+## v0.40.1 (2015-07-08)
+
+- Changing host property to kind_of Array
+
+## v0.40.0 (2015-06-29)
+
+Important changes with this release:
+
+- MAJOR INTERFACE CHANGE
+- Recipes replaced with docker_service resource*
+- Removing a ton of dependencies
+- Storage backends, kernel module loading, etc should now be handled externally
+- Updating for Docker 1.6.2
+- Preferring binary install method to OS packages
+
+IMPORTANT
+
+- attributes/ will be removed in the next release.
+- most are currently non-functional
+- All options will be driven through resource properties
+
+## v0.37.0
+
+Please note some important changes with this release:
+
+- The sysconfig DOCKER_OPTS improvement in [#250] can potentially change the behavior of that environment variable as it now allows shell interpolation of any embedded variables. This should not affect most environments. If your DOCKER_OPTS does contains any expected `$`, please escape via `\$` for previous behavior or be sure it will behave as expected before upgrading.
+- The daemon restart option (which is deprecated) has been defaulted to `nil` instead of `false` when `node['docker']['container_init_type']` is set to prevent issues with container restart policies. If you're dependent on the daemon option, please be sure to update your `node['docker']['restart']` appropriately.
+- This release also defaults systemd docker host to `fd://` to match upstream, enabling socket activation properly. Adjust `node['docker']['host']` if necessary.
+- Bugfix: [#239]: Upstart: install inotify tools only once (avoid CHEF-3694 warning) (thanks jperville)
+- Bugfix: [#240]: Fixed dead service containers not being restarted on docker_container :run (thanks jperville)
+- Bugfix: [#244]: Made docker_container action :remove remove the actual upstart service file (thanks jperville)
+- Bugfix: [#246]: Lengthen shell_out timeout as workaround for slow docker_container action stop (thanks jperville)
+- Bugfix: [#258]: Fix checking docker container status on debian (thanks fxposter)
+- Bugfix: [#260]: Fix accidental port changing when using systemd templates (thanks fxposter)
+- Bugfix: [#266]: Get tests working on master (thanks tduffield)
+- Bugfix: [#267]: Replace outdated testcontainerd (thanks tduffield)
+- Bugfix: [#269]: Fix tests on Travis by following Rubocop style guidelines (container LWRP) (thanks fxposter)
+- Bugfix: [#280] / [#281]: Fix port handling when omitted in container LWRP (thanks databus23)
+- Bugfix: [#284] / [#285]: runit finish script to stop a container (thanks xmik)
+- Bugfix: [#288][]: Fix docker.socket unit for RHEL7 (thanks databus23)
+- Bugfix: [#292]: readme formatting fix (thanks wormzer)
+- Improvement: [#208]: Add CentOS/RHEL 7 support (thanks dermusikman and intoximeters)
+- Improvement: [#232]: Added support for insecure-registry docker daemon option (thanks jperville)
+- Improvement: [#233] / [#234]: Added support for registry-mirror docker daemon option (thanks jperville and tarnfeld)
+- Improvement: [#237]: Deprecate the restart daemon option (thanks jperville)
+- Improvement: [#238]: Added docker_container restart attribute (thanks jperville)
+- Improvement: [#242]: Added docker_container action :create (thanks jperville)
+- Improvement: [#245]: Add a Gitter chat badge to README.md (thanks tduffield)
+- Improvement: [#250]: Use double-quotes for DOCKER_OPTS (thanks rchekaluk)
+- Improvement: [#259]: Use registry on image inspection (thanks fxposter)
+- Improvement: [#263]: Add additional_host attribute to container resource (thanks fxposter)
+- Improvement: [#264] / [#265]: Access keyserver.ubuntu.com on port 80 (thanks sauraus)
+- Improvement: [#268]: Updated the /etc/init/docker.conf template (thanks jperville)
+- Improvement: [#276]: Added support for docker options device and cap-add (thanks hvolkmer)
+- Improvement: [#279]: Allow docker_container memory to have String value (eg. memory='1G') (thanks jperville)
+- Improvement: [#287]: redhat 7 does not need the epel repository (thanks databus23)
+- Improvement: [#289]: Update systemd service/socket files (from upstream) (thanks databus23)
+- Improvement: [#296]: Default systemd to fd:// as well as use upstream MountFlags=slave and LimitCORE=infinity
+- Improvement: [#297]: Update docker daemon SysV init scripts with upstream improvements
+- Improvement: [#298]: Further deprecate daemon restart flag by default, which interferes with restart policies
+
+# 0.36.0
+
+- Bugfix: [#181]: Fixed remove_link action (thanks jperville).
+- Bugfix: [#185]: Fix for non idempotent run action on docker_container (thanks bplunkert).
+- Bugfix: [#188]: Applied temporary workaround to address the libcgmanager error to users running LXC on Ubuntu 14.04.
+- Bugfix: [#196]: Address Helpers module naming conflict (thanks sethrosenblum).
+- Bugfix: [#200]: Fix how service actions are handled by docker_container resource (thanks brianhartsock).
+- Bugfix: [#202]: Correctly check for the kernel.release version on Debian (thanks Tritlo, paweloczadly).
+- Bugfix: [#203]: Fix pull notifications for tagged images (thanks hobofan).
+- Bugfix: [#205]: Fix current_resource.name assignments in docker_container provider (thanks jperville).
+- Bugfix: [#206]: Fixes to container name detection (thanks jperville).
+- Enhancement: [#217]: Explicitly set key and keyserver for docker apt repository (thanks sethrosenblum).
+- Improvement: Pull in init script changes from upstream for sysv and systemd.
+- Bugfix: [#219]: Explicitly set Upstart provider for Ubuntu 14.04 and 14.10 (thanks methodx).
+- Improvement: [#220]: Create graph directory if it is specified (thanks jontg).
+- Bugfix: [#224]: Fix runit container template to properly use exec (thanks waisbrot).
+- Bugfix: Appropriately check for LXC when using the binary recipe on Fedora.
+- Bugfix: Implement workaround for docker/docker#2702 on Ubuntu 14.10.
+- Enhancement: [#221]: Added NO_PROXY support (thanks jperville).
+- Various Test Suite Modifications
+
+  - Enhancement: [#192]: Allow image tags in serverspec matching (thanks bplunkert).
+  - Bugfix: [#223]: Convert a few occurrences of old 'should' rspec syntax to 'expect' (thanks jperville).
+  - Disable a few platforms that are experiencing bugs unrelated to core functionality.
+  - Address ChefSpec 4.1 deprecation warnings.
+  - Update Berksfile to reference supermarket.getchef.com instead of api.berkshelf.com
+
+# 0.35.2
+
+- Bugfix: [#171]: Default Ubuntu 14.04 to Docker PPA
+- Bugfix: [#175]: Do not set --selinux-enabled in opts unless explicitly defined for older versions
+- Bugfix: [#176]: Use docker host attribute in docker_container Upstart inotifywait
+
+# 0.35.1
+
+- Bugfix: [#172]: Generate no cidfile by default, even when deploying as service
+- Bugfix: [#173]: Updated docker upstart script (should fix service docker restart)
+
+# 0.35.0
+
+After a long personal hiatus (sorry!), this is the last minor release before 1.0 of the cookbook. If you can handle the Docker port number change and don't use anything deprecated, upgrading to 1.0.X from 0.35.X of the cookbook should be very easy.
+
+This release has a bunch of changes and hasn't been fully tested yet. Wanted to get it out there for broad testing. Please use caution!
+
+Major kudos to @tduffield for the [#147] PR, which includes:
+
+- Binary Installation
+
+  - Added missing dependency resolution for using the binary.
+
+- Dependency Checks
+
+  - Added `docker::dep_check` that will take an action if certain dependencies are not met.
+
+    - `node[docker][alert_on_error_action] = :fatal` will kill the chef run and print the error message.
+    - `node[docker][alert_on_error_action] = :warn` will print the error message but continue with the chef run. There is no guarantee that it will succeed though.
+
+- KitchenCI
+
+  - Copied MiniTests to ServerSpec Tests
+  - Added new platforms (Debian 7.4)
+  - Changed provisioner from chef-solo to chef-zero
+  - Removed Ubuntu 12.10 because it is not supported by Docker and the Kernel is bad and fails all the tests.
+  - Removed tests for the source recipe. The dotcloud/docker repo actually doesn't build any Go deliverables.
+
+    - I think that the source recipe needs to be completely refactored.
+
+Other awesome work merged:
+
+- [#142]: Bugfix: Redeploy breaks when a link is present
+- [#139]/[#153]/[#154]/[#156]/[#157]: Bugfix: container/image ID given as nil, fixes deprecated -notrunc
+- [#164]: Bugfix: Removing a container should also remove its cidfile
+- [#166]: Bugfix: Fix docker_inspect_id for Docker 1.0+
+- [#158]/[#160]/[#165]: Bugfix: Fix NameError when displaying error messages for timed-out commands
+- [#169]: Bugfix: Specify Upstart as service provider for cgroup on Ubuntu 14.04 (workaround for CHEF-5276, fixed in Chef 11.14)
+- [#137]/[#138]: Enhancement: Experimental Ubuntu 14.04 LTS support
+- [#144]: Enhancement: Experimental Amazon linux support
+- [#150]/[#152]: Enhancement: Add net attribute, deprecate networking
+- [#168]: Enhancement: Allow override of package name
+- [#161]: Enhancement: Add minitest case for SysV service
+- [#149]: Enhancement: Add --selinux-enabled daemon flag
+- Enhancement: container LWRP remove_link and remove_volume actions
+- Enhancement: Add storage-opt daemon flag
+- Enhancement: Add Docker 0.11.0, 0.11.1, 0.12.0, 1.0.0, 1.0.1 binary checksums
+
+# 0.34.2
+
+- [#141]: Bugfix/Enhancement: Fix and enhance docker_image pull/push behavior with Docker 0.10
+
+  - Removes deprecated --registry and --tag CLI args from docker_image pull
+  - Adds support for registry attribute usage in docker_image pull and push
+  - Adds support for tag attribute usage in docker_image push
+
+# 0.34.1
+
+- [#134]: Bugfix: Fix docker_registry login handling, fixes #114
+
+# 0.34.0
+
+Attributes now available for all docker daemon flags as well as system IP forwarding.
+
+- REMOVED: container_dns_ attributes (use replacement dns_ attributes on daemon for all containers or docker_container dns* attributes instead)
+- DEPRECATED: bind_* attributes to match docker terminology (use host attribute instead)
+- Bugfix: [#132]: Do Not Explicitly Set storage_driver Attribute
+- Bugfix: [#133]: Remove explicit false defaults in resources
+- Bugfix: [#114]: Error executing action login on resource docker_registry
+- Enhancement: [#115]: Add IP forwarding attributes
+- Enhancement: [#116]: Docker 0.10.0: Add --no-prune to docker rmi
+- Enhancement: [#117]: Docker 0.10.0: Add --output flag to docker save (as well as tag support)
+- Enhancement: [#118]: Docker 0.10.0: Add --input flag to docker load
+- Enhancement: [#119]: Docker 0.10.0: Add support for --env-file to load environment variables from files
+- Enhancement: [#120]: Docker 0.10.0: Deprecate docker insert
+- Enhancement: [#123]: Add docker kill --signal
+- Enhancement: [#124]: Add all docker daemon options as attributes
+- Enhancement: [#125]: Use dns* attributes to set docker daemon options, not defaults per-container
+- Enhancement: [#128]: Add checksum attribute for binary downloads
+- Enhancement: [#126]: Set long option names for specified docker daemon options
+- Enhancement: [#127]: Use a helper function to specify single line docker daemon options
+
+# 0.33.1
+
+- Bugfix: [#112]: Defines runner methods for ChefSpec matchers
+- Bugfix: [#113]: [D-15] Fedora 19 installs Docker 0.8.1, does not have the -G or -e flag
+
+# 0.33.0
+
+This release deprecates AUFS/device-mapper handling from chef-docker, but provides backwards compatibility by still including the default recipe of the new cookbooks. Please update your dependencies, Github watching/issues, and recipes to reflect the two new community cookbooks:
+
+- aufs: [aufs on community site](http://community.opscode.com/cookbooks/aufs) / [chef-aufs on Github](https://github.com/bflad/chef-aufs)
+- device-mapper: [device-mapper on community site](http://community.opscode.com/cookbooks/device-mapper) / [chef-device-mapper on Github](https://github.com/bflad/chef-device-mapper)
+- Bugfix: [#109]: Remove on lxc-net start from docker Upstart
+- Enhancement: [#88]: Migrate AUFS logic to separate cookbook
+- Enhancement: [#90]: Migrate device-mapper logic to separate cookbook
+- Enhancement: [#110]: Add docker Upstart pre-start script and limits configuration
+- Enhancement: [#105]: Add --label for docker run
+- Enhancement: [#106]: Add --opt for docker run
+- Enhancement: [#107]: Add --networking for docker run
+- Enhancement: [#108]: Add --dns-search for docker run
+- Enhancement: [#104]: Add TMPDIR
+- Enhancement: [#111]: Add DOCKER_LOGFILE configuration
+- Enhancement: container_dns* attributes to set --dns and --dns-search for all containers
+
+# 0.32.2
+
+- Bugfix: [#101]: Explicitly install lxc on Ubuntu (when lxc is exec_driver; continue to fully support LXC as a default installation path since its been since Docker 0.1)
+- Bugfix: [#103]: Fix host argument (in docker run)
+
+# 0.32.1
+
+- Bugfix: [#98]: Ensure Ruby 1.8 syntax is supported
+- Bugfix: Skip empty Array values in cli_args helper
+
+# 0.32.0
+
+_If you're using CentOS/RHEL with EPEL, upcoming docker-io 0.9.0 package upgrade can be tracked at [Bugzilla 1074880](https://bugzilla.redhat.com/show_bug.cgi?id=1074880)_
+
+This release includes Docker 0.9.0 changes and defaults, such as setting exec_driver to libcontainer ("native"), setting -rm on docker build, double dash arguments on the CLI, additional flags, etc.
+
+- DEPRECATED: Rename storage_type attribute to storage_driver to [match Docker terminology](http://docs.docker.io/en/latest/reference/commandline/cli/#daemon) (storage_type will be removed in chef-docker 1.0)
+- DEPRECATED: Rename virtualization_type attribute to exec_driver to [match Docker terminology](http://docs.docker.io/en/latest/reference/commandline/cli/#daemon) (virtualization_type will be removed in chef-docker 1.0)
+- Bugfix: [#80]: Use double dashed arguments on CLI
+- Bugfix: Surround String values on CLI with quotes
+- Enhancement: [#77]: Improved docker ps handling
+- Enhancement: [#78]: Docker 0.9.0: Make --rm the default for docker build
+- Enhancement: [#81]: Docker 0.9.0: Add a -G option to specify the group which unix sockets belong
+- Enhancement: [#82]: Docker 0.9.0: Add -f flag to docker rm to force removal of running containers
+- Enhancement: Add -f flag for docker rmi to force removal of images
+- Enhancement: [#83]: Docker 0.9.0: Add DOCKER_RAMDISK environment variable to make Docker work when the root is on a ramdisk
+- Enhancement: [#84]: Docker 0.9.0: Add -e flag for execution driver
+- Enhancement: [#85]: Docker 0.9.0: Default to libcontainer
+- Enhancement: [#86]: Add Chefspec LWRP matchers
+
+# 0.31.0
+
+Lots of init love this release. Now supporting runit.
+
+Please note change of storage_type attribute from devmapper to devicemapper (and associated recipe name change) to match docker's name for the driver.
+
+Cookbook now automatically adds -s option to init configurations if storage_type is defined, which is it by default. If you were specifying -s in the options attribute, you no longer need to do so. In my quick testing, docker daemon doesn't seem to mind if -s is specified twice on startup, although you'll probably want to get rid of the extra specification.
+
+I've also dropped the LANG= and LC_ALL= locale environment settings from the Upstart job configuration. Its not specified in the default docker job. Please open an issue in docker project and here if for some reason this is actually necessary.
+
+- Bugfix: Match devicemapper storage_type attribute to match docker driver name (along with recipe name)
+- Enhancement: [#72]: Add initial runit init_type
+- Enhancement: [#60]: Automatically set docker -d -s from storage_type attribute
+- Enhancement: Simplify default/sysconfig file into one template (docker.sysconfig.erb) and source into SysV/Upstart init configurations
+- Enhancement: Add Debian docker daemon SysV init template
+
+# 0.30.2
+
+- Bugfix: [#68]: Fix CommandTimeout handling in LWRPs
+- Bugfix: [#67]: Fix argument order to pull when tag specified
+
+# 0.30.1
+
+Public or private registry login should now correctly occur and login once per credentials change.
+
+- Bugfix: [#64]: Correct CLI ordering of registry login
+- Bugfix: [#65]: login command skipped in registry provider
+- Enhancement: registry provider current resource attributes loaded from .dockercfg
+
+# 0.30.0
+
+Awesome work by [@jcrobak] to close out two issues ([#49] and [#52]) with [#62]. Note change below in image build action.
+
+- Bugfix: [#52]: return codes of docker commands not verified
+- Bugfix: Add missing pull_if_missing action to image resource
+- Enhancement: [#56]: Switch build action to build_if_missing, build action now builds each run (be careful with image growth!)
+- Enhancement: [#59]: Add Mac OS X installation support
+- Enhancement: [#49]: Add docker_cmd_timeout attribute and daemon verification
+- Enhancement: [#58]: Add container redeploy action
+- Enhancement: [#63]: Add group_members attribute and group recipe to manage docker group
+
+# 0.29.0
+
+- Enhancement: [#57]: Implement id checking when determining current_resource
+
+  - Added to both container and image LWRPs
+
+- Enhancement: Set created and status attributes for current container resources (for handlers, wrappers, etc.)
+
+- Enhancement: Set created and virtual_size attributes for image resource (for handlers, wrappers, etc.)
+
+# 0.28.0
+
+- Enhancement: [#55]: image LWRP pull action now attempts pull every run (use pull_if_missing action for old behavior)
+
+# 0.27.1
+
+- Bugfix: [#51]: container LWRP current_resource attribute matching should also depend on container_name
+
+# 0.27.0
+
+- Enhancement: [#48]: Accept FalseClass CLI arguments (also explicitly declare =true for TrueClass CLI arguments)
+
+# 0.26.0
+
+- Bugfix: Add SysV init script for binary installs
+- Enhancement: Add storage_type and virtualization_type attributes
+- Enhancement: Initial devmapper support for binary installs on CentOS/Ubuntu
+- Enhancement: [#47] Debian-specific container SysV init script
+- Enhancement: [#46] Add rm attribute for build action on image LWRP
+- Enhancement: Add no_cache attribute for build action on image LWRP
+
+# 0.25.1
+
+- Bugfix: [#44] Add missing run attribute for commit action on container LWRP
+
+# 0.25.0
+
+- DEPRECATED: image LWRP dockerfile, image_url, and path attributes (replaced with source attribute)
+- Bugfix: Use docker_cmd for container LWRP remove and restart actions
+- Enhancement: Add registry LWRP with login action
+- Enhancement: Standardize on "smart" and reusable destination and source attributes for container and image LWRPs to define paths/URLs for various operations
+- Enhancement: Add commit, cp, export, and kill actions to container LWRP
+- Enhancement: Add insert, load, push, save, and tag actions to image LWRP
+- Enhancement: Add local file and directory support to import action of image LWRP
+- Enhancement: Add Array support to container LWRP link attribute
+- Enhancement: Cleaned up LWRP documentation
+
+# 0.24.2
+
+- Bugfix: [#43] Better formatting for container LWRP debug logging
+
+# 0.24.1
+
+- Bugfix: Explicitly declare depends and supports in metadata
+- Bugfix: Handle container run action if container exists but isn't running
+
+# 0.24.0
+
+- Bugfix: [#42] fix(upstart): Install inotify-tools if using upstart
+- Enhancement: [#38] Allow a user to specify a custom template for their container init configuration
+
+# 0.23.1
+
+- Bugfix: [#39] Fix NoMethodError bugs in docker::aufs recipe
+
+# 0.23.0
+
+- Bugfix: Default oracle init_type to sysv
+- Enhancement: Experimental Debian 7 package support
+- Enhancement: Use new yum-epel cookbook instead of yum::epel recipe
+- Enhancement: Use `value_for_platform` where applicable in attributes, requires Chef 11
+
+# 0.22.0
+
+- Enhancement: [#35] Use kernel release for package name on saucy and newer
+- Enhancement: [#37] dont include aufs recipe on ubuntu 13.10 and up; don't require docker::lxc for package installs
+
+# 0.21.0
+
+- Enhancement: [#31] More helpful cmd_timeout error messages and catchable exceptions for container (`Chef::Provider::Docker::Container::CommandTimeout`) and image (`Chef::Provider::Docker::Image::CommandTimeout`) LWRPs
+
+# 0.20.0
+
+- Enhancement: Default to package install_type only on distros with known packages
+- Enhancement: Initial Oracle 6 platform support via binary install_type
+
+  - <https://blogs.oracle.com/wim/entry/oracle_linux_6_5_and>
+  - <http://www.oracle.com/technetwork/articles/servers-storage-admin/resource-controllers-linux-1506602.html>
+
+- Enhancement: Split out lxc recipe for default platform lxc handling
+
+- Enhancement: Create cgroups recipe for default platform cgroups handling
+
+# 0.19.1
+
+- Bugfix: [#30] apt-get throws exit code 100 when upgrading docker
+
+# 0.19.0
+
+- Enhancement: Add `node['docker']['version']` attribute to handle version for all install_type (recommended you switch to this)
+- Enhancement: `default['docker']['binary']['version']` attribute uses `node['docker']['version']` if set
+- Enhancement: Add version handling to package recipe
+
+# 0.18.1
+
+- Bugfix: Remove ExecStartPost from systemd service to match change in docker-io-0.7.0-13
+
+# 0.18.0
+
+- Enhancement: CentOS/RHEL 6 package support via EPEL repository
+- Enhancement: Fedora 19/20 package support now in updates (stable) repository
+- Enhancement: sysv recipe and init_type
+
+# 0.17.0
+
+- Removed: configuration recipe (see bugfix below)
+- Removed: config_dir attribute (see bugfix below)
+- Bugfix: Revert back to specifying HTTP_PROXY and "DOCKER_OPTS" natively in systemd/Upstart (mostly to fix up systemd support)
+- Bugfix: Add systemctl --system daemon-reload handling to systemd service template
+- Bugfix: Add || true to container systemd/Upstart pre-start in case already running
+- Bugfix: Locale environment already handled automatically by systemd
+- Enhancement: Switch Fedora package installation from goldmann-docker to Fedora updates-testing repository
+- Enhancement: Switch container LWRPs to named containers on Fedora since now supported
+- Enhancement: Update docker systemd service contents from docker-io-0.7.0-12.fc20
+
+  - Add: Wants/After firewalld.service
+  - Add: ExecStartPost firewall-cmd
+  - Remove: ExecStartPost iptables commands
+
+# 0.16.0
+
+- Bugfix: Remove protocol from docker systemd ListenStreams
+- Bugfix: Lengthen shell_out timeout for stop action in container LWRP to workaround Fedora being slow
+- Enhancement: Add service creation to container LWRP by default
+
+  - Please thoroughly test before putting into production!
+  - `set['docker']['container_init_type'] = false` or add `init_type false` for the LWRP to disable this behavior
+
+- Enhancement: Add configuration recipe with template
+
+- Enhancement: Add container_cmd_timeout attribute to easily set global container LWRP cmd_timeout default
+
+- Enhancement: Add image_cmd_timeout attribute to easily set global image LWRP cmd_timeout default
+
+- Enhancement: Add cookbook attribute to container LWRP
+
+- Enhancement: Add init_type attribute to container LWRP
+
+- Enhancement: Add locale support for Fedora
+
+- Enhancement: Fail Chef run if `docker run` command errors
+
+# 0.15.0
+
+- Enhancement: Fedora 19/20 package support via [Goldmann docker repo](http://goldmann.fedorapeople.org/repos/docker/)
+- Enhancement: docker.service / docker.socket systemd support
+- Enhancement: Add `node['docker']['init_type']` attribute for controlling init system
+
+# 0.14.0
+
+- Bugfix: [#27] Only use command to determine running container if provided
+- Bugfix: [#28] Upstart requires full stop and start of service instead of restart if job configuration changes while already running. Note even `initctl reload-configuration` isn't working as expected from <http://upstart.ubuntu.com/faq.html#reload>
+- Enhancement: [#26] Add ability to set package action
+
+# 0.13.0
+
+- Bugfix: Move LWRP updated_on_last_action(true) calls so only triggered when something actually gets updated
+- Enhancement: Add container LWRP wait action
+- Enhancement: Add attach and stdin args to container LWRP start action
+- Enhancement: Add link arg to container LWRP remove action
+- Enhancement: Use cmd_timeout in container LWRP stop action arguments
+
+# 0.12.0
+
+- Bugfix: Add default bind_uri (nil) to default attributes
+- Enhancement: [#24] bind_socket attribute added
+
+# 0.11.0
+
+- DEPRACATION: container LWRP Fixnum port attribute: use full String notation from Docker documentation in port attribute instead
+- DEPRACATION: container LWRP public_port attribute: use port attribute instead
+- Enhancement: Additional container LWRP attributes:
+
+  - cidfile
+  - container_name
+  - cpu_shares
+  - dns
+  - expose
+  - link
+  - lxc_conf
+  - publish_exposed_ports
+  - remove_automatically
+  - volumes_from
+
+- Enhancement: Support Array in container LWRP attributes:
+
+  - env
+  - port
+  - volume
+
+# 0.10.1
+
+- Bugfix: Set default cmd_timeout in image LWRP to 300 instead of 60 because downloading images can take awhile
+- Enhancement: Change docker_test Dockerfile FROM to already downloaded busybox image instead of ubuntu
+- Enhancement: Add vagrant-cachier to Vagrantfile
+
+Other behind the scenes changes:
+
+- Made cookbook code Rubocop compliant
+- Move licensing information to LICENSE file
+- Updated .travis.yml and Gemfile
+
+# 0.10.0
+
+- Enhancement: [#22] cmd_timeout, path (image LWRP), working_directory (container LWRP) LWRP attributes
+- Bugfix: [#25] Install Go environment only when installing from source
+
+# 0.9.1
+
+- Fix to upstart recipe to not restart service constantly (only on initial install and changes)
+
+# 0.9.0
+
+- image LWRP now supports non-stdin build and import actions (thanks [@wingrunr21]!)
+
+# 0.8.1
+
+- Fix in aufs recipe for FC048 Prefer Mixlib::ShellOut
+
+# 0.8.0
+
+Lots of community contributions this release -- thanks!
+
+- image LWRP now supports builds via Dockerfile
+- Additional privileged, public_port, and stdin parameters for container LWRP
+- Support specifying binary version for installation
+- Fix upstart configuration customization when installing via Apt packages
+- Default to Golang 1.1
+
+# 0.7.1
+
+- Use HTTPS for Apt repository
+
+# 0.7.0
+
+- Update APT repository information for Docker 0.6+
+
+# 0.6.2
+
+- Change Upstart config to start on runlevels [2345] instead of just 3
+
+# 0.6.1
+
+- Change env HTTP_PROXY to export HTTP_PROXY in Upstart configuration
+
+# 0.6.0
+
+- Add bind_uri and options attributes
+
+# 0.5.0
+
+- Add http_proxy attribute
+
+# 0.4.0
+
+- Docker now provides precise/quantal/raring distributions for their PPA
+- Tested Ubuntu 13.04 support
+
+# 0.3.0
+
+- Initial `container` LWRP
+
+# 0.2.0
+
+- Initial `image` LWRP
+
+# 0.1.0
+
+- Initial release
+
+[#22]: https://github.com/bflad/chef-docker/issues/22
+[#24]: https://github.com/bflad/chef-docker/issues/24
+[#25]: https://github.com/bflad/chef-docker/issues/25
+[#26]: https://github.com/bflad/chef-docker/issues/26
+[#27]: https://github.com/bflad/chef-docker/issues/27
+[#28]: https://github.com/bflad/chef-docker/issues/28
+[#30]: https://github.com/bflad/chef-docker/issues/30
+[#31]: https://github.com/bflad/chef-docker/issues/31
+[#35]: https://github.com/bflad/chef-docker/issues/35
+[#37]: https://github.com/bflad/chef-docker/issues/37
+[#38]: https://github.com/bflad/chef-docker/issues/38
+[#39]: https://github.com/bflad/chef-docker/issues/39
+[#42]: https://github.com/bflad/chef-docker/issues/42
+[#43]: https://github.com/bflad/chef-docker/issues/43
+[#44]: https://github.com/bflad/chef-docker/issues/44
+[#46]: https://github.com/bflad/chef-docker/issues/46
+[#47]: https://github.com/bflad/chef-docker/issues/47
+[#48]: https://github.com/bflad/chef-docker/issues/48
+[#49]: https://github.com/bflad/chef-docker/issues/49
+[#51]: https://github.com/bflad/chef-docker/issues/51
+[#52]: https://github.com/bflad/chef-docker/issues/52
+[#55]: https://github.com/bflad/chef-docker/issues/55
+[#56]: https://github.com/bflad/chef-docker/issues/56
+[#57]: https://github.com/bflad/chef-docker/issues/57
+[#58]: https://github.com/bflad/chef-docker/issues/58
+[#59]: https://github.com/bflad/chef-docker/issues/59
+[#60]: https://github.com/bflad/chef-docker/issues/60
+[#62]: https://github.com/bflad/chef-docker/issues/62
+[#63]: https://github.com/bflad/chef-docker/issues/63
+[#64]: https://github.com/bflad/chef-docker/issues/64
+[#65]: https://github.com/bflad/chef-docker/issues/65
+[#67]: https://github.com/bflad/chef-docker/issues/67
+[#68]: https://github.com/bflad/chef-docker/issues/68
+[#72]: https://github.com/bflad/chef-docker/issues/72
+[#77]: https://github.com/bflad/chef-docker/issues/77
+[#78]: https://github.com/bflad/chef-docker/issues/78
+[#80]: https://github.com/bflad/chef-docker/issues/80
+[#81]: https://github.com/bflad/chef-docker/issues/81
+[#82]: https://github.com/bflad/chef-docker/issues/82
+[#83]: https://github.com/bflad/chef-docker/issues/83
+[#84]: https://github.com/bflad/chef-docker/issues/84
+[#85]: https://github.com/bflad/chef-docker/issues/85
+[#86]: https://github.com/bflad/chef-docker/issues/86
+[#88]: https://github.com/bflad/chef-docker/issues/88
+[#89]: https://github.com/bflad/chef-docker/issues/89
+[#90]: https://github.com/bflad/chef-docker/issues/90
+[#91]: https://github.com/bflad/chef-docker/issues/91
+[#98]: https://github.com/bflad/chef-docker/issues/98
+[#101]: https://github.com/bflad/chef-docker/issues/101
+[#103]: https://github.com/bflad/chef-docker/issues/103
+[#104]: https://github.com/bflad/chef-docker/issues/104
+[#105]: https://github.com/bflad/chef-docker/issues/105
+[#106]: https://github.com/bflad/chef-docker/issues/106
+[#107]: https://github.com/bflad/chef-docker/issues/107
+[#108]: https://github.com/bflad/chef-docker/issues/108
+[#109]: https://github.com/bflad/chef-docker/issues/109
+[#110]: https://github.com/bflad/chef-docker/issues/110
+[#111]: https://github.com/bflad/chef-docker/issues/111
+[#112]: https://github.com/bflad/chef-docker/issues/112
+[#113]: https://github.com/bflad/chef-docker/issues/113
+[#114]: https://github.com/bflad/chef-docker/issues/114
+[#115]: https://github.com/bflad/chef-docker/issues/115
+[#116]: https://github.com/bflad/chef-docker/issues/116
+[#117]: https://github.com/bflad/chef-docker/issues/117
+[#118]: https://github.com/bflad/chef-docker/issues/118
+[#119]: https://github.com/bflad/chef-docker/issues/119
+[#120]: https://github.com/bflad/chef-docker/issues/120
+[#123]: https://github.com/bflad/chef-docker/issues/123
+[#124]: https://github.com/bflad/chef-docker/issues/124
+[#125]: https://github.com/bflad/chef-docker/issues/125
+[#126]: https://github.com/bflad/chef-docker/issues/126
+[#127]: https://github.com/bflad/chef-docker/issues/127
+[#128]: https://github.com/bflad/chef-docker/issues/128
+[#132]: https://github.com/bflad/chef-docker/issues/132
+[#133]: https://github.com/bflad/chef-docker/issues/133
+[#134]: https://github.com/bflad/chef-docker/issues/134
+[#137]: https://github.com/bflad/chef-docker/issues/137
+[#138]: https://github.com/bflad/chef-docker/issues/138
+[#139]: https://github.com/bflad/chef-docker/issues/139
+[#141]: https://github.com/bflad/chef-docker/issues/141
+[#142]: https://github.com/bflad/chef-docker/issues/142
+[#144]: https://github.com/bflad/chef-docker/issues/144
+[#147]: https://github.com/bflad/chef-docker/issues/147
+[#149]: https://github.com/bflad/chef-docker/issues/149
+[#150]: https://github.com/bflad/chef-docker/issues/150
+[#152]: https://github.com/bflad/chef-docker/issues/152
+[#153]: https://github.com/bflad/chef-docker/issues/153
+[#154]: https://github.com/bflad/chef-docker/issues/154
+[#156]: https://github.com/bflad/chef-docker/issues/156
+[#157]: https://github.com/bflad/chef-docker/issues/157
+[#158]: https://github.com/bflad/chef-docker/issues/158
+[#160]: https://github.com/bflad/chef-docker/issues/160
+[#161]: https://github.com/bflad/chef-docker/issues/161
+[#164]: https://github.com/bflad/chef-docker/issues/164
+[#165]: https://github.com/bflad/chef-docker/issues/165
+[#166]: https://github.com/bflad/chef-docker/issues/166
+[#168]: https://github.com/bflad/chef-docker/issues/168
+[#169]: https://github.com/bflad/chef-docker/issues/169
+[#171]: https://github.com/bflad/chef-docker/issues/171
+[#172]: https://github.com/bflad/chef-docker/issues/172
+[#173]: https://github.com/bflad/chef-docker/issues/173
+[#175]: https://github.com/bflad/chef-docker/issues/175
+[#176]: https://github.com/bflad/chef-docker/issues/176
+[#181]: https://github.com/bflad/chef-docker/issues/181
+[#185]: https://github.com/bflad/chef-docker/issues/185
+[#188]: https://github.com/bflad/chef-docker/issues/188
+[#192]: https://github.com/bflad/chef-docker/issues/192
+[#196]: https://github.com/bflad/chef-docker/issues/196
+[#200]: https://github.com/bflad/chef-docker/issues/200
+[#202]: https://github.com/bflad/chef-docker/issues/202
+[#203]: https://github.com/bflad/chef-docker/issues/203
+[#205]: https://github.com/bflad/chef-docker/issues/205
+[#206]: https://github.com/bflad/chef-docker/issues/206
+[#208]: https://github.com/bflad/chef-docker/issues/208
+[#217]: https://github.com/bflad/chef-docker/issues/217
+[#219]: https://github.com/bflad/chef-docker/issues/219
+[#220]: https://github.com/bflad/chef-docker/issues/220
+[#221]: https://github.com/bflad/chef-docker/issues/221
+[#223]: https://github.com/bflad/chef-docker/issues/223
+[#224]: https://github.com/bflad/chef-docker/issues/224
+[#232]: https://github.com/bflad/chef-docker/issues/232
+[#233]: https://github.com/bflad/chef-docker/issues/233
+[#234]: https://github.com/bflad/chef-docker/issues/234
+[#237]: https://github.com/bflad/chef-docker/issues/237
+[#238]: https://github.com/bflad/chef-docker/issues/238
+[#239]: https://github.com/bflad/chef-docker/issues/239
+[#240]: https://github.com/bflad/chef-docker/issues/240
+[#242]: https://github.com/bflad/chef-docker/issues/242
+[#244]: https://github.com/bflad/chef-docker/issues/244
+[#245]: https://github.com/bflad/chef-docker/issues/245
+[#246]: https://github.com/bflad/chef-docker/issues/246
+[#250]: https://github.com/bflad/chef-docker/issues/250
+[#258]: https://github.com/bflad/chef-docker/issues/258
+[#259]: https://github.com/bflad/chef-docker/issues/259
+[#260]: https://github.com/bflad/chef-docker/issues/260
+[#263]: https://github.com/bflad/chef-docker/issues/263
+[#264]: https://github.com/bflad/chef-docker/issues/264
+[#265]: https://github.com/bflad/chef-docker/issues/265
+[#266]: https://github.com/bflad/chef-docker/issues/266
+[#267]: https://github.com/bflad/chef-docker/issues/267
+[#268]: https://github.com/bflad/chef-docker/issues/268
+[#269]: https://github.com/bflad/chef-docker/issues/269
+[#276]: https://github.com/bflad/chef-docker/issues/276
+[#279]: https://github.com/bflad/chef-docker/issues/279
+[#280]: https://github.com/bflad/chef-docker/issues/280
+[#281]: https://github.com/bflad/chef-docker/issues/281
+[#284]: https://github.com/bflad/chef-docker/issues/284
+[#285]: https://github.com/bflad/chef-docker/issues/285
+[#287]: https://github.com/bflad/chef-docker/issues/287
+[#289]: https://github.com/bflad/chef-docker/issues/289
+[#292]: https://github.com/bflad/chef-docker/issues/292
+[#296]: https://github.com/bflad/chef-docker/issues/296
+[#297]: https://github.com/bflad/chef-docker/issues/297
+[#298]: https://github.com/bflad/chef-docker/issues/298
+[@jcrobak]: https://github.com/jcrobak
+[@wingrunr21]: https://github.com/wingrunr21
diff --git a/cookbooks/docker-2.15.13/CONTRIBUTING.md b/cookbooks/docker-2.15.13/CONTRIBUTING.md
new file mode 100644
index 0000000000000000000000000000000000000000..ef2f2b80834ef516cc8c9f03a840f69f0d52d467
--- /dev/null
+++ b/cookbooks/docker-2.15.13/CONTRIBUTING.md
@@ -0,0 +1,2 @@
+Please refer to
+https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
diff --git a/cookbooks/docker-2.15.13/MAINTAINERS.md b/cookbooks/docker-2.15.13/MAINTAINERS.md
new file mode 100644
index 0000000000000000000000000000000000000000..a7645b902b3faa9c6c98f7f7734e4aa8387bd8f3
--- /dev/null
+++ b/cookbooks/docker-2.15.13/MAINTAINERS.md
@@ -0,0 +1,20 @@
+<!-- This is a generated file. Please do not edit directly -->
+
+# Maintainers
+
+This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.
+
+Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.
+
+# Project Maintainer
+* [Sean OMeara](https://github.com/someara)
+
+# Maintainers
+* [Jennifer Davis](https://github.com/sigje)
+* [Sean OMeara](https://github.com/someara)
+* [Tim Smith](https://github.com/tas50)
+* [Thom May](https://github.com/thommay)
+* [Anthony Scalisi](https://github.com/scalp42)
+* [Chase Bolt](https://github.com/chasebolt)
+* [Brian Flad](https://github.com/bflad)
+* [Tom Duffield](https://github.com/tduffield)
diff --git a/cookbooks/docker-2.15.13/README.md b/cookbooks/docker-2.15.13/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..0f2d7cd3b2b237fbd6048bd83d506a9108ac9db1
--- /dev/null
+++ b/cookbooks/docker-2.15.13/README.md
@@ -0,0 +1,1419 @@
+# Docker Cookbook
+
+[![Build Status](https://travis-ci.org/chef-cookbooks/docker.svg?branch=master)](https://travis-ci.org/chef-cookbooks/docker)
+[![Cookbook Version](https://img.shields.io/cookbook/v/docker.svg)](https://supermarket.chef.io/cookbooks/docker)
+[![Gitter](https://badges.gitter.im/Join
+Chat.svg)](https://gitter.im/someara/chef-docker?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
+
+The Docker Cookbook is a library cookbook that provides custom
+resources for use in recipes.
+
+## Scope
+
+This cookbook is concerned with the [Docker](http://docker.io)
+container engine as distributed by Docker, Inc. It does not address
+Docker ecosystem tooling or prerequisite technology such as cgroups or
+aufs.
+
+
+## Requirements
+
+- Chef 12.5.x or higher. Chef 11 is NOT SUPPORTED, please do not open issues about it.
+- Ruby 2.1 or higher (preferably, the Chef full-stack installer)
+- Network accessible web server hosting the docker binary.
+- SELinux permissive/disabled if CentOS [Docker Issue #15498](https://github.com/docker/docker/issues/15498)
+
+## Platform Support
+
+The following platforms have been tested with Test Kitchen: You may be
+able to get it working on other platforms, with appropriate
+configuration of cgroups and storage back ends.
+
+|              | 1.7.1 | 1.8.3 | 1.9.1 | 1.10.3 | 1.11.1 | 1.12.3 | 1.13.0 |
+|--------------|:-----:|:------|:-----:|:------:|:------:|:------:|:-------|
+| amazon linux |       |       |       |        |        |        | ✔      |
+| debian-7     | ✔     | ✔     | ✔     | ✔      | ✔      | ✔      | ✔      |
+| debian-8     | ✔     | ✔     | ✔     | ✔      | ✔      | ✔      | ✔      |
+| centos-7     | ✔     | ✔     | ✔     | ✔      | ✔      | ✔      | ✔      |
+| fedora       |       |       | ✔     | ✔      | ✔      | ✔      | ✔      |
+| ubuntu-12.04 | ✔     | ✔     | ✔     | ✔      | ✔      | ✔      | ✔      |
+| ubuntu-14.04 | ✔     | ✔     | ✔     | ✔      | ✔      | ✔      | ✔      |
+| ubuntu-16.04 |       |       |       |        | ✔      | ✔      | ✔      |
+
+
+## Cookbook Dependencies
+
+- [compat_resource](https://supermarket.chef.io/cookbooks/compat_resource)
+
+## Usage
+
+- Add `depends 'docker', '~> 2.0'` to your cookbook's metadata.rb
+- Use the resources shipped in cookbook in a recipe, the same way
+  you'd use core Chef resources (file, template, directory, package,
+  etc).
+
+```ruby
+docker_service 'default' do
+  action [:create, :start]
+end
+
+docker_image 'busybox' do
+  action :pull
+end
+
+docker_container 'an-echo-server' do
+  repo 'busybox'
+  port '1234:1234'
+  command "nc -ll -p 1234 -e /bin/cat"
+end
+```
+
+## Test Cookbooks as Examples
+
+The cookbooks ran under test-kitchen make excellent usage examples.
+
+The test recipes are found at:
+
+```ruby
+test/cookbooks/docker_test/
+```
+
+## Cgroups, Execution and Storage drivers
+
+Beginning in chef-docker 1.0, support for LXC execution driver has
+been removed in favor of native. Cgroups and storage drivers are now
+loosely coupled dependencies and should be configured using other
+cookbooks if needed.
+
+Storage drivers can be selected with the `storage_driver` property on
+the `docker_service` resource like this:
+
+```ruby
+docker_service 'default' do
+   storage_driver 'zfs'
+end
+```
+
+Configuration of the backing storage driver, including kernel module loading, is out of scope for this cookbook.
+
+## Resources Overview
+
+- [docker_service](#docker_service): composite resource that uses
+  docker_installation and docker_service_manager
+- [docker_installation](#docker_installation): automatically select an
+  installation method
+- [docker_service_manager](#docker_service_manager): automatically
+  selects a service manager
+- [docker_installation_binary](#docker_installation_binary): copies a
+  pre-compiled docker binary onto disk
+- [docker_installation_script](#docker_installation_script): curl | bash
+- [docker_installation_package](#docker_installation_package): package
+  'docker-engine'
+- [docker_service_manager_execute](#docker_service_manager_execute):
+  manage docker daemon with Chef
+- [docker_service_manager_sysvinit](#docker_service_manager_sysvinit):
+  manage docker daemon with a sysvinit script
+- [docker_service_manager_upstart](#docker_service_manager_upstart):
+  manage docker daemon with upstart script
+- [docker_service_manager_systemd](#docker_service_manager_systemd):
+  manage docker daemon with systemd unit files
+- [docker_image](#docker_image): image/repository operations
+- [docker_container](#docker_container): container operations
+- [docker_tag](#docker_tag): image tagging operations
+- [docker_registry](#docker_registry): registry operations
+- [docker_network](#docker_network): network operations
+- [docker_volume](#docker_volume): volume operations
+
+## Getting Started
+
+Here's a quick example of pulling the latest image and running a
+container with exposed ports.
+
+```ruby
+# Pull latest image
+docker_image 'nginx' do
+  tag 'latest'
+  action :pull
+  notifies :redeploy, 'docker_container[my_nginx]'
+end
+
+# Run container exposing ports
+docker_container 'my_nginx' do
+  repo 'nginx'
+  tag 'latest'
+  port '80:80'
+  host_name 'www'
+  domain_name 'computers.biz'
+  env 'FOO=bar'
+  volumes [ '/some/local/files/:/etc/nginx/conf.d' ]
+end
+```
+
+You might run a private registry and multiple Docker hosts.
+
+```ruby
+# Login to private registry
+docker_registry 'https://registry.computers.biz/' do
+  username 'shipper'
+  password 'iloveshipping'
+  email 'shipper@computers.biz'
+end
+
+# Pull tagged image
+docker_image 'registry.computers.biz:443/my_project/my_container' do
+  tag 'latest'
+  action :pull
+  host 'tcp://host-1.computers.biz:2376'
+end
+
+# Run container
+docker_container 'crowsnest' do
+  repo 'registry.computers.biz:443/my_project/my_container'
+  tag 'latest'
+  host 'tcp://host-2.computers.biz:2376'
+  tls_verify true
+  tls_ca_cert "/path/to/ca.pem"
+  tls_client_cert "/path/to/cert.pem"
+  tls_client_key "/path/to/key.pem"
+  action :run
+end
+```
+
+You can manipulate Docker volumes and networks
+
+```ruby
+docker_network 'my_network' do
+  subnet '10.9.8.0/24'
+  gateway '10.9.8.1'
+end
+
+docker_volume 'my_volume' do
+  action :create
+end
+
+docker_container 'my_container' do
+  repo 'alpine'
+  tag '3.1'
+  command "nc -ll -p 1234 -e /bin/cat"
+  volumes 'my_volume:/my_data'
+  network_mode 'my_network'
+  action :run
+end
+```
+
+See full documentation for each resource and action below for more information.
+
+## Resources Details
+## docker_installation
+
+The `docker_installation` resource auto-selects one of the below
+resources with the provider resolution system.
+
+### Example
+
+```ruby
+docker_installation 'default' do
+  action :create
+end
+```
+
+## docker_installation_binary
+
+The `docker_installation_binary` resource copies the precompiled Go
+binary onto the disk. It exists to help run older Docker versions. It
+should not be used in production, especially with devicemapper.
+
+### Example
+
+```ruby
+docker_installation_binary 'default' do
+  version '1.8.2'
+  source 'https://my.computers.biz/dist/docker'
+  checksum '97a3f5924b0b831a310efa8bf0a4c91956cd6387c4a8667d27e2b2dd3da67e4d'
+  action :create
+end
+```
+
+### Properties
+
+- `version` - The desired version of docker. Used to calculate source.
+- `source` - Path to network accessible Docker binary. Ignores version
+- `checksum` - SHA-256
+
+## docker_installation_tarball
+
+The `docker_installation_tarball` resource copies the precompiled Go
+binary tarball onto the disk. It exists to help run newer Docker
+versions from 1.11.0 onwards. It should not be used in production,
+especially with devicemapper.
+
+### Example
+
+```ruby
+docker_installation_tarball 'default' do
+  version '1.11.0'
+  source 'https://my.computers.biz/dist/docker.tgz'
+  checksum '97a3f5924b0b831a310efa8bf0a4c91956cd6387c4a8667d27e2b2dd3da67e4d'
+  action :create
+end
+```
+
+### Properties
+
+- `version` - The desired version of docker. Used to calculate source.
+- `source` - Path to network accessible Docker binary tarball. Ignores
+  version
+- `checksum` - SHA-256
+
+## docker_installation_script
+
+The `docker_installation_script` resource runs the script hosted by
+Docker, Inc at <http://get.docker.com>. It configures package
+repositories and installs a dynamically compiled binary.
+
+### Example
+
+```ruby
+docker_installation_script 'default' do
+  repo 'main'
+  script_url 'https://my.computers.biz/dist/scripts/docker.sh'
+  action :create
+end
+```
+
+### Properties
+
+- `repo` - One of 'main', 'test', or 'experimental'. Used to calculate
+  script_url in its absense. Defaults to 'main'
+- `script_url` - 'URL of script to pipe into /bin/sh as root.
+
+## docker_installation_package
+
+The `docker_installation_package` resource uses the system package
+manager to install Docker. It relies on the pre-configuration of the
+system's package repositories. The `chef-yum-docker` and
+`chef-apt-docker` Supermarket cookbooks are used to do this in
+test-kitchen.
+
+**_This is the recommended production installation method._**
+
+### Example
+
+```ruby
+docker_installation_package 'default' do
+  version '1.8.3'
+  action :create
+  package_options %q|--force-yes -o Dpkg::Options::='--force-confold' -o Dpkg::Options::='--force-all'| # if Ubuntu for example
+end
+```
+
+### Properties
+
+- `version` - Used to calculate package_version string
+- `package_version` - Manually specify the package version string
+- `package_name` - Name of package to install. Defaults to
+  'docker-engine'
+- `package_options` - Manually specify additional options, like
+  apt-get directives for example
+
+## docker_service_manager
+
+The `docker_service_manager` resource auto-selects a strategy from the
+`docker_service_manager_*` group of resources based on platform and
+version. The `docker_service` family share a common set of properties.
+
+### Example
+
+```ruby
+docker_service_manager 'default' do
+  action :start
+end
+```
+
+## docker_service_manager_execute
+
+### Example
+
+```ruby
+docker_service_manager_execute 'default' do
+  action :start
+end
+```
+
+## docker_service_manager_sysvinit
+
+### Example
+
+```ruby
+docker_service_manager_sysvinit 'default' do
+  host 'unix:///var/run/docker.sock'
+  action :stop
+end
+```
+
+## docker_service_manager_upstart
+
+### Example
+
+```ruby
+docker_service_manager_upstart 'default' do
+  host ['unix:///var/run/docker.sock', 'tcp://127.0.0.1:2376']
+  action :start
+end
+```
+
+## docker_service_manager_systemd
+
+### Example
+
+```ruby
+docker_service_manager_systemd 'default' do
+  host ['unix:///var/run/docker.sock', 'tcp://127.0.0.1:2376']
+  tls_verify true
+  tls_ca_cert "/path/to/ca.pem"
+  tls_server_cert "/path/to/server.pem"
+  tls_server_key "/path/to/server-key.pem"
+  tls_client_cert "/path/to/cert.pem"
+  tls_client_key "/path/to/key.pem"
+  systemd_opts ["TasksMax=infinity","MountFlags=private"]
+  action :start
+end
+```
+
+## docker_service
+
+The `docker_service`: resource is a composite resource that uses
+`docker_installation` and `docker_service_manager` resources.
+
+- The `:create` action uses a `docker_installation`
+- The `:delete` action uses a `docker_installation`
+- The `:start` action uses a `docker_service_manager`
+- The `:stop` action uses a `docker_service_manager`
+
+The service management strategy for the host platform is dynamically
+chosen based on platform, but can be overridden.
+
+### Example
+
+```ruby
+docker_service 'tls_test:2376' do
+  host [ "tcp://#{node['ipaddress']}:2376", 'unix:///var/run/docker.sock' ]
+  tls_verify true
+  tls_ca_cert '/path/to/ca.pem'
+  tls_server_cert '/path/to/server.pem'
+  tls_server_key '/path/to/server-key.pem'
+  tls_client_cert '/path/to/client.pem'
+  tls_client_key '/path/to/client-key.pem'
+  action [:create, :start]
+end
+```
+
+WARNING - When creating multiple `docker_service` resources on the
+same machine, you will need to specify unique graph properties to
+avoid unexpected behavior and possible data corruption.
+
+### Properties
+
+The `docker_service` resource property list mostly corresponds to the
+options found in the
+[Docker Command Line Reference](https://docs.docker.com/reference/commandline/cli/)
+
+- `install_method` - Select binary, script, package, tarball, none, or auto. Defaults to  `auto`.
+- `source` - URL to the pre-compiled Docker binary used for installation. Defaults to a calculated URL based on kernel version, Docker version, and platform arch. By default, this will try to get to "<http://get.docker.io/builds/>".
+- `version` - Docker version to install
+- `checksum` - sha256 checksum of Docker binary
+- `api_cors_header` - Set CORS headers in the remote API
+- `bridge` - Attach containers to a network bridge
+- `bip` - Specify network bridge IP
+- `debug` - Enable debug mode
+- `cluster_store` - Cluster store to use
+- `cluster_advertise` - IP and port that this daemon should advertise
+  to the cluster
+- `cluster_store_opts` - Cluster store options
+- `daemon` - Enable daemon mode
+- `dns` - DNS server(s) to use
+- `dns_search` - DNS search domains to use
+- `exec_driver` - Exec driver to use
+- `fixed_cidr` - IPv4 subnet for fixed IPs
+- `fixed_cidr_v6` - IPv6 subnet for fixed IPs
+- `group` - Posix group for the unix socket
+- `graph` - Root of the Docker runtime - Effectively, the "data
+  directory"
+- `host` - Daemon socket(s) to connect to - `tcp://host:port`,
+  `unix:///path/to/socket`, `fd://*` or `fd://socketfd`
+- `icc` - Enable inter-container communication
+- `insecure_registry` - Enable insecure registry communication
+- `ip` - Default IP when binding container ports
+- `ip_forward` - Enable ip forwarding
+- `ipv4_forward` - Enable net.ipv4.ip_forward
+- `ipv6_forward` - Enable net.ipv6.ip_forward
+- `ip_masq` - Enable IP masquerading
+- `iptables` - Enable addition of iptables rules
+- `ipv6` - Enable IPv6 networking
+- `log_level` - Set the logging level
+- `labels` A string or array to set metadata on the daemon in the form ['foo:bar', 'hello:world']`
+- `log_driver` - Container's logging driver (json-file/syslog/journald/gelf/fluentd/none)
+- `labels` A string or array to set metadata on the daemon in the form ['foo:bar', 'hello:world']`
+- `log_driver` - Container's logging driver (json-file/syslog/journald/gelf/fluentd/awslogs/splunk/etwlogs/gcplogs/none)
+- `log_opts` - Container's logging driver options (driver-specific)
+- `mtu` - Set the containers network MTU
+- `package_name` - Set the package name. Defaults to `docker-engine`
+- `pidfile` - Path to use for daemon PID file
+- `registry_mirror` - Preferred Docker registry mirror
+- `storage_driver` - Storage driver to use
+- `selinux_enabled` - Enable selinux support
+- `storage_opts` - Set storage driver options
+- `tls` - Use TLS; implied by --tlsverify. Defaults to  ENV['DOCKER_TLS'] if set
+- `tls_verify` - Use TLS and verify the remote. Defaults to  ENV['DOCKER_TLS_VERIFY'] if set
+- `tls_ca_cert` - Trust certs signed only by this CA. Defaults to  ENV['DOCKER_CERT_PATH'] if set
+- `tls_server_cert` - Path to TLS certificate file for docker service
+- `tls_server_key` - Path to TLS key file for docker service
+- `tls_client_cert` - Path to TLS certificate file for docker cli. Defaults to ENV['DOCKER_CERT_PATH'] if set
+- `tls_client_key` - Path to TLS key file for docker cli. Defaults to  ENV['DOCKER_CERT_PATH'] if set
+- `default_ulimit` - Set default ulimit settings for containers
+- `http_proxy` - ENV variable set before for Docker daemon starts
+- `https_proxy` - ENV variable set before for Docker daemon starts
+- `no_proxy` - ENV variable set before for Docker daemon starts
+- `tmpdir` - ENV variable set before for Docker daemon starts
+- `logfile` - Location of Docker daemon log file
+- `userland_proxy`- Enables or disables docker-proxy
+- `disable_legacy_registry` - Do not contact legacy registries
+- `userns_remap` - Enable user namespace remapping options -
+  `default`, `uid`, `uid:gid`, `username`, `username:groupname` (see: [Docker User Namespaces](see: https://docs.docker.com/v1.10/engine/reference/commandline/daemon/#daemon-user-namespace-options))
+- `mount_flags` - Set the systemd mount propagation flag. Defaults to slave.
+
+#### Miscellaneous Options
+
+- `misc_opts` - Pass the docker daemon any other options bypassing
+  flag validation, supplied as `--flag=value`
+
+#### Systemd-specific Options
+
+- `systemd_opts` - An array of strings that will be included as
+  individual lines in the systemd service unit for Docker.  *Note*:
+  This option is only relevant for systems where systemd is the
+  default service manager or where systemd is specified explicitly as
+  the service manager.
+
+### Actions
+
+- `:create` - Lays the Docker bits out on disk
+- `:delete` - Removes the Docker bits from the disk
+- `:start` - Makes sure the service provider is set up properly and start it
+- `:stop` - Stops the service
+- `:restart` - Restarts the service
+
+### `docker_service` implementations
+
+- `docker_service_execute` - The simplest docker_service. Just starts
+  a process. Fire and forget.
+- `docker_service_sysvinit` - Uses a SystemV init script to manage the
+  service state.
+- `docker_service_upstart` - Uses an Upstart script to manage the
+  service state.
+- `docker_service_systemd` - Uses an Systemd unit file to manage the
+  service state. NOTE: This does NOT enable systemd socket activation.
+
+## docker_image
+
+The `docker_image` is responsible for managing Docker image pulls,
+builds, and deletions. It speaks directly to the
+[Docker remote API](https://docs.docker.com/reference/api/docker_remote_api_v1.20/).
+
+### Examples
+
+- default action, default properties
+
+```ruby
+docker_image 'hello-world'
+```
+
+- non-default name attribute
+
+```ruby
+docker_image "Tom's container" do
+  repo 'tduffield/testcontainerd'
+  action :pull
+end
+```
+
+- pull every time
+
+```ruby
+docker_image 'busybox' do
+  action :pull
+end
+```
+
+- specify a tag
+
+```ruby
+docker_image 'alpine' do
+  tag '3.1'
+end
+```
+
+- specify read/write timeouts
+
+```ruby
+docker_image 'alpine' do
+  read_timeout 60
+  write_timeout 60
+end
+```
+
+```ruby
+docker_image 'vbatts/slackware' do
+  action :remove
+end
+```
+
+- save
+
+```ruby
+docker_image 'save hello-world' do
+  repo 'hello-world'
+  destination '/tmp/hello-world.tar'
+  not_if { ::File.exist?('/tmp/hello-world.tar') }
+  action :save
+end
+```
+
+- build from a Dockerfile on every chef-client run
+
+```ruby
+docker_image 'image_1' do
+  tag 'v0.1.0'
+  source '/src/myproject/container1/Dockerfile'
+  action :build
+end
+```
+
+- build from a directory, only if image is missing
+
+```ruby
+docker_image 'image_2' do
+  tag 'v0.1.0'
+  source '/src/myproject/container2'
+  action :build_if_missing
+end
+```
+
+- build from a tarball NOTE: this is not an "export" tarball generated
+  from an an image save. The contents should be a Dockerfile, and
+  anything it references to COPY or ADD
+
+```ruby
+docker_image 'image_3' do
+  tag 'v0.1.0'
+  source '/tmp/image_3.tar'
+  action :build
+end
+```
+
+```ruby
+docker_image 'hello-again' do
+  tag 'v0.1.0'
+  source '/tmp/hello-world.tar'
+  action :import
+end
+```
+
+- push
+
+```ruby
+docker_image 'my.computers.biz:5043/someara/hello-again' do
+  action :push
+end
+  ```
+
+- Connect to an external docker daemon and pull an image
+
+```ruby
+docker_image 'alpine' do
+  host 'tcp://127.0.0.1:2376'
+  tag '2.7'
+end
+```
+
+### Properties
+
+The `docker_image` resource properties mostly corresponds to the
+[Docker Remote API](https://docs.docker.com/reference/api/docker_remote_api_v1.20/#2-2-images)
+as driven by the
+[Swipley docker-api Ruby gem](https://github.com/swipely/docker-api)
+
+
+A `docker_image`'s full identifier is a string in the form
+"\<repo\>:\<tag\>". There is some nuance around naming using the
+public registry vs a private one.
+
+- `repo` - aka `image_name` - The first half of a Docker image's
+  identity. This is a string in the form:
+  `registry:port/owner/image_name`. If the `registry:port` portion is
+  left off, Docker will implicitly use the Docker public
+  registry. "Official Images" omit the owner part. This means a repo
+  id can be as short as `busybox`, `alpine`, or `centos`. These names refer
+  to official images on the public registry. Names can be as long as
+  `my.computers.biz:5043/what/ever` to refer to custom images on an
+  private registry. Often you'll see something like `chef/chef` to
+  refer to private images on the public registry. - Defaults to
+  resource name.
+- `tag` - The second half of a Docker image's identity. - Defaults to
+  `latest`
+- `source` - Path to input for the `:import`, `:build` and
+  `:build_if_missing` actions. For building, this can be a Dockerfile,
+  a tarball containing a Dockerfile in its root, or a directory
+  containing a Dockerfile. For `:import`, this should be a tarball
+  containing Docker formatted image, as generated with `:save`.
+- `destination` - Path for output from the `:save` action.
+- `force` - A force boolean used in various actions - Defaults to
+  false
+- `nocache` - Used in `:build` operations. - Defaults to false
+- `noprune` - Used in `:remove` operations - Defaults to false
+- `rm` - Remove intermediate containers after a successful build
+  (default behavior) - Defaults to `true`
+- `read_timeout` - May need to increase for long image builds/pulls
+- `write_timeout` - May need to increase for long image builds/pulls
+- `host` - A string containing the host the API should communicate
+  with. Defaults to `ENV['DOCKER_HOST']` if set.
+- `tls` - Use TLS; implied by --tlsverify. Defaults to
+  ENV['DOCKER_TLS'] if set.
+- `tls_verify` - Use TLS and verify the remote. Defaults to
+  `ENV['DOCKER_TLS_VERIFY']` if set
+- `tls_ca_cert` - Trust certs signed only by this CA. Defaults to
+  `ENV['DOCKER_CERT_PATH']` if set.
+- `tls_client_cert` - Path to TLS certificate file for docker
+  cli. Defaults to `ENV['DOCKER_CERT_PATH']` if set
+- `tls_client_key` - Path to TLS key file for docker cli. Defaults to
+  `ENV['DOCKER_CERT_PATH']` if set.
+
+### Actions
+
+The following actions are available for a `docker_image`
+resource. Defaults to `pull`
+
+- `:pull` - Pulls an image from the registry
+- `:pull_if_missing` - Pulls an image from the registry, only if it missing
+- `:build` - Builds an image from a Dockerfile, directory, or tarball
+- `:build_if_missing` - Same build, but only if it is missing
+- `:save` - Exports an image to a tarball at `destination`
+- `:import` - Imports an image from a tarball at `destination`
+- `:remove` - Removes (untags) an image
+- `:push` - Pushes an image to the registry
+
+## docker_tag
+
+Docker tags work very much like hard links in a Unix filesystem. They
+are just references to an existing image. Therefore, the docker_tag
+resource has taken inspiration from the Chef `link` resource.
+
+### Examples
+
+```ruby
+docker_tag 'private repo tag for hello-again:1.0.1' do
+  target_repo 'hello-again'
+  target_tag 'v0.1.0'
+  to_repo 'localhost:5043/someara/hello-again'
+  to_tag 'latest'
+  action :tag
+end
+```
+
+### Properties
+
+- `target_repo` - The repo half of the source image identifier.
+- `target_tag` - The tag half of the source image identifier.
+- `to_repo` - The repo half of the new image identifier
+- `to_tag`- The tag half of the new image identifier
+
+### Actions
+
+- `:tag` - Tags the image
+
+## docker_container
+
+The `docker_container` is responsible for managing Docker container
+actions. It speaks directly to the
+[Docker remote API](https://docs.docker.com/reference/api/docker_remote_api_v1.20/).
+
+
+Containers are process oriented, and move through an event
+cycle. Thanks to [Glider Labs](http://gliderlabs.com/) for this
+excellent
+diagram. ![alt tag](http://gliderlabs.com/images/docker_events.png)
+
+
+### Examples
+
+- Create a container without starting it.
+
+```ruby
+docker_container 'hello-world' do
+  command '/hello'
+  action :create
+end
+```
+
+- This will exit succesfully. It will happen on every chef-client run.
+
+```ruby
+docker_container 'busybox_ls' do
+  repo 'busybox'
+  command 'ls -la /'
+  action :run
+end
+```
+
+- The :run action contains both :create and :start the container in one action. Redeploys the container on resource change. It is the default action.
+
+```ruby
+docker_container 'alpine_ls' do
+  repo 'alpine'
+  tag '3.1'
+  command 'ls -la /'
+  action :run
+end
+```
+
+- Set environment variables in a container
+
+```ruby
+docker_container 'env' do
+  repo 'debian'
+  env ['PATH=/usr/bin', 'FOO=bar']
+  command 'env'
+  action :run
+end
+```
+
+- This process remains running between chef-client runs, :run will do nothing on subsequent converges.
+
+```ruby
+docker_container 'an_echo_server' do
+  repo 'alpine'
+  tag '3.1'
+  command 'nc -ll -p 7 -e /bin/cat'
+  port '7:7'
+  action :run
+end
+```
+
+- Let docker pick the host port
+
+```ruby
+docker_container 'another_echo_server' do
+  repo 'alpine'
+  tag '3.1'
+  command 'nc -ll -p 7 -e /bin/cat'
+  port '7'
+  action :run
+end
+```
+
+- Specify the udp protocol
+
+```ruby
+docker_container 'an_udp_echo_server' do
+  repo 'alpine'
+  tag '3.1'
+  command 'nc -ul -p 7 -e /bin/cat'
+  port '5007:7/udp'
+  action :run
+end
+```
+
+- Kill a container
+
+```ruby
+docker_container 'bill' do
+  action :kill
+end
+```
+
+- Stop a container
+
+```ruby
+docker_container 'hammer_time' do
+  action :stop
+end
+```
+
+- Force-stop a container after 30 seconds
+
+```ruby
+docker_container 'hammer_time' do
+  kill_after 30
+  action :stop
+end
+```
+
+- Pause a container
+
+```ruby
+docker_container 'red_light' do
+  action :pause
+end
+```
+
+- Unpause a container
+
+```ruby
+docker_container 'green_light' do
+  action :unpause
+end
+```
+
+- Restart a container
+
+```ruby
+docker_container 'restarter' do
+  action :restart
+end
+```
+
+- Delete a container
+
+```ruby
+docker_container 'deleteme' do
+  remove_volumes true
+  action :delete
+end
+```
+
+- Redeploy a container
+
+```ruby
+docker_container 'redeployer' do
+  repo 'alpine'
+  tag '3.1'
+  command 'nc -ll -p 7777 -e /bin/cat'
+  port '7'
+  action :run
+end
+
+execute 'redeploy redeployer' do
+  notifies :redeploy, 'docker_container[redeployer]', :immediately
+  action :run
+end
+```
+
+- Bind mount local directories
+
+```ruby
+docker_container 'bind_mounter' do
+  repo 'busybox'
+  command 'ls -la /bits /more-bits'
+  volumes ['/hostbits:/bits', '/more-hostbits:/more-bits']
+  action :run_if_missing
+end
+```
+
+- Mount volumes from another container
+
+```ruby
+docker_container 'chef_container' do
+  command 'true'
+  volumes '/opt/chef'
+  action :create
+end
+
+docker_container 'ohai_debian' do
+  command '/opt/chef/embedded/bin/ohai platform'
+  repo 'debian'
+  volumes_from 'chef_container'
+end
+```
+
+- Set a container's entrypoint
+
+```ruby
+docker_container 'ohai_again_debian' do
+  repo 'debian'
+  volumes_from 'chef_container'
+  entrypoint '/opt/chef/embedded/bin/ohai'
+  command 'platform'
+  action :run_if_missing
+end
+```
+
+- Automatically remove a container after it exits
+
+```ruby
+docker_container 'sean_was_here' do
+  command "touch /opt/chef/sean_was_here-#{Time.new.strftime('%Y%m%d%H%M')}"
+  repo 'debian'
+  volumes_from 'chef_container'
+  autoremove true
+  action :run
+end
+```
+
+- Grant NET_ADMIN rights to a container
+
+```ruby
+docker_container 'cap_add_net_admin' do
+  repo 'debian'
+  command 'bash -c "ip addr add 10.9.8.7/24 brd + dev eth0 label eth0:0 ; ip addr list"'
+  cap_add 'NET_ADMIN'
+  action :run_if_missing
+end
+```
+
+- Revoke MKNOD rights to a container
+
+```ruby
+docker_container 'cap_drop_mknod' do
+  repo 'debian'
+  command 'bash -c "mknod -m 444 /dev/urandom2 c 1 9 ; ls -la /dev/urandom2"'
+  cap_drop 'MKNOD'
+  action :run_if_missing
+end
+```
+
+- Set a container's hostname and domainname
+
+```ruby
+docker_container 'fqdn' do
+  repo 'debian'
+  command 'hostname -f'
+  host_name 'computers'
+  domain_name 'biz'
+  action :run_if_missing
+end
+```
+
+- Set a container's DNS resolution
+
+```ruby
+docker_container 'dns' do
+  repo 'debian'
+  command 'cat /etc/resolv.conf'
+  host_name 'computers'
+  dns ['4.3.2.1', '1.2.3.4']
+  dns_search ['computers.biz', 'chef.io']
+  action :run_if_missing
+end
+```
+
+- Add extra hosts to a container's `/etc/hosts`
+
+```ruby
+docker_container 'extra_hosts' do
+  repo 'debian'
+  command 'cat /etc/hosts'
+  extra_hosts ['east:4.3.2.1', 'west:1.2.3.4']
+  action :run_if_missing
+end
+```
+
+- Manage container's restart_policy
+
+```ruby
+docker_container 'try_try_again' do
+  repo 'alpine'
+  tag '3.1'
+  command 'grep asdasdasd /etc/passwd'
+  restart_policy 'on-failure'
+  restart_maximum_retry_count 2
+  action :run_if_missing
+end
+
+docker_container 'reboot_survivor' do
+  repo 'alpine'
+  tag '3.1'
+  command 'nc -ll -p 123 -e /bin/cat'
+  port '123'
+  restart_policy 'always'
+  action :run_if_missing
+end
+```
+
+- Manage container links
+
+```ruby
+docker_container 'link_source' do
+  repo 'alpine'
+  tag '3.1'
+  env ['FOO=bar', 'BIZ=baz']
+  command 'nc -ll -p 321 -e /bin/cat'
+  port '321'
+  action :run_if_missing
+end
+
+docker_container 'link_target_1' do
+  repo 'alpine'
+  tag '3.1'
+  env ['ASD=asd']
+  command 'ping -c 1 hello'
+  links ['link_source:hello']
+  action :run_if_missing
+end
+
+docker_container 'link_target_2' do
+  repo 'alpine'
+  tag '3.1'
+  command 'env'
+  links ['link_source:hello']
+  action :run_if_missing
+end
+
+execute 'redeploy_link_source' do
+  command 'touch /marker_container_redeploy_link_source'
+  creates '/marker_container_redeploy_link_source'
+  notifies :redeploy, 'docker_container[link_source]', :immediately
+  notifies :redeploy, 'docker_container[link_target_1]', :immediately
+  notifies :redeploy, 'docker_container[link_target_2]', :immediately
+  action :run
+end
+```
+
+- Mutate a container between chef-client runs
+
+```ruby
+docker_tag 'mutator_from_busybox' do
+  target_repo 'busybox'
+  target_tag 'latest'
+  to_repo 'someara/mutator'
+  target_tag 'latest'
+end
+
+docker_container 'mutator' do
+  repo 'someara/mutator'
+  tag 'latest'
+  command "sh -c 'touch /mutator-`date +\"%Y-%m-%d_%H-%M-%S\"`'"
+  outfile '/mutator.tar'
+  force true
+  action :run_if_missing
+end
+
+execute 'commit mutator' do
+  command 'true'
+  notifies :commit, 'docker_container[mutator]', :immediately
+  notifies :export, 'docker_container[mutator]', :immediately
+  notifies :redeploy, 'docker_container[mutator]', :immediately
+  action :run
+end
+```
+
+- Specify read/write timeouts
+
+```ruby
+docker_container 'api_timeouts' do
+  repo 'alpine'
+  read_timeout 60
+  write_timeout 60
+end
+```
+
+- Specify a custom logging driver and its options
+
+```ruby
+docker_container 'syslogger' do
+  repo 'alpine'
+  tag '3.1'
+  command 'nc -ll -p 780 -e /bin/cat'
+  log_driver 'syslog'
+  log_opts 'tag=container-syslogger'
+end
+```
+
+- Connect to an external docker daemon and create a container
+
+```ruby
+docker_container 'external_daemon' do
+  repo 'alpine'
+  host 'tcp://1.2.3.4:2376'
+  action :create
+end
+```
+
+### Properties
+
+Most `docker_container` properties are the `snake_case` version of the `CamelCase` keys found in the [Docker Remote Api](https://docs.docker.com/reference/api/docker_remote_api_v1.20/)
+
+- `container_name` - The name of the container. Defaults to the name of the `docker_container` resource.
+- `repo` - aka `image_name`. The first half of a the complete identifier for a Docker Image.
+- `tag` - The second half of a Docker image's identity. - Defaults to `latest`.
+- `command` - The command to run when starting the container.
+- `autoremove` - Boolean - Automatically delete a container when it's command exits. Defaults to `false`.
+- `volumes` - An array of volume bindings for this container. Each volume binding is a string in one of these forms: `container_path` to create a new volume for the container. `host_path:container_path` to bind-mount a host path into the container. `host_path:container_path:ro` to make the bind-mount read-only inside the container.
+- `cap_add` - An array Linux Capabilities (`man 7 capabilities`) to add to grant the container beyond what it normally gets.
+- `cap_drop` - An array Linux Capabilities (`man 7 capabilities`) to revoke that the container normally has.
+- `cpu_shares` - An integer value containing the CPU Shares for the container.
+- `devices` - A Hash of devices to add to the container.
+- `dns` - An array of DNS servers the container will use for name resolution.
+- `dns_search` - An array of domains the container will search for name resolution.
+- `domain_name` - Set's the container's dnsdomainname as returned by the `dnsdomainname` command.
+- `entrypoint` - Set the entry point for the container as a string or an array of strings.
+- `env` - Set environment variables in the container in the form `['FOO=bar', 'BIZ=baz']`
+- `extra_hosts` - An array of hosts to add to the container's `/etc/hosts` in the form `['host_a:10.9.8.7', 'host_b:10.9.8.6']`
+- `force` - A boolean to use in container operations that support a `force` option. Defaults to `false`
+- `host` - A string containing the host the API should communicate with. Defaults to ENV['DOCKER_HOST'] if set
+- `host_name` - The hostname for the container.
+- `labels` A string, array, or hash to set metadata on the container in the form ['foo:bar', 'hello:world']`
+- `links` - An array of source container/alias pairs to link the container to in the form `[container_a:www', container_b:db']`
+- `log_driver` - Sets a custom logging driver for the container (json-file/syslog/journald/gelf/fluentd/none).
+- `log_opts` - Configures the above logging driver options (driver-specific).
+- `ip_address` - Container IPv4 address (e.g. 172.30.100.104)
+- `mac_address` - The mac address for the container to use.
+- `memory` - Memory limit in bytes.
+- `memory_swap` - Total memory limit (memory + swap); set `-1` to disable swap limit (unlimited). You must use this with memory and make the swap value larger than memory.
+- `network_disabled` - Boolean to disable networking. Defaults to `false`.
+- `network_mode` - Sets the networking mode for the container. One of `bridge`, `host`, `container`.
+- `network_aliases` - Adds network-scoped alias for the container in form `['alias-1', 'alias-2']`.
+- `open_stdin` - Boolean value, opens stdin. Defaults to `false`.
+- `outfile` - The path to write the file when using `:export` action.
+- `port` - The port configuration to use in the container. Matches the syntax used by the `docker` CLI tool.
+- `privileged` - Boolean to start the container in privileged more. Defaults to `false`
+- `publish_all_ports` - Allocates a random host port for all of a container's exposed ports.
+- `remove_volumes` - A boolean to clean up "dangling" volumes when removing the last container with a reference to it. Default to `false` to match the Docker CLI behavior.
+- `restart_policy` - One of `no`, `on-failure`, `unless-stopped`, or `always`. Use `always` if you want a service container to survive a Dockerhost reboot. Defaults to `no`.
+- `restart_maximum_retry_count` - Maximum number of restarts to try when `restart_policy` is `on-failure`. Defaults to an ever increasing delay (double the previous delay, starting at 100mS), to prevent flooding the server.
+- `running_wait_time` - Amount of seconds `docker_container` wait to determine if a process is running.`
+- `security_opts` - A list of string values to customize labels for MLS systems, such as SELinux.
+- `signal` - The signal to send when using the `:kill` action. Defaults to `SIGTERM`.
+- `sysctls` - A hash of sysctls to set on the container. Defaults to `{}`.
+- `tty` - Boolean value to allocate a pseudo-TTY. Defaults to `false`.
+- `user` - A string value specifying the user inside the container.
+- `volumes` - An Array of paths inside the container to expose. Does the same thing as the `VOLUME` directive in a Dockerfile, but works on container creation.
+- `volumes_from` - A list of volumes to inherit from another container. Specified in the form `<container name>[:<ro|rw>]`
+- `volume_driver` - Driver that this container users to mount volumes.
+- `working_dir` - A string specifying the working directory for commands to run in.
+- `read_timeout` - May need to increase for commits or exports that are slow
+- `write_timeout` - May need to increase for commits or exports that are slow
+- `kill_after` - Number of seconds to wait before killing the container. Defaults to wait indefinitely; eventually will hit read_timeout limit.
+- `timeout` - Seconds to wait for an attached container to return
+- `tls` - Use TLS; implied by --tlsverify. Defaults to ENV['DOCKER_TLS'] if set
+- `tls_verify` - Use TLS and verify the remote. Defaults to ENV['DOCKER_TLS_VERIFY'] if set
+- `tls_ca_cert` - Trust certs signed only by this CA. Defaults to ENV['DOCKER_CERT_PATH'] if set
+- `tls_client_cert` - Path to TLS certificate file for docker cli. Defaults to ENV['DOCKER_CERT_PATH'] if set
+- `tls_client_key` - Path to TLS key file for docker cli. Defaults to ENV['DOCKER_CERT_PATH'] if set
+- `userns_mode` - Modify the user namespace mode - Defaults to `nil`, example option: `host`
+- `pid_mode` - Set the PID (Process) Namespace mode for the container. `host`: use the host's PID namespace inside the container.
+- `ipc_mode` - Set the IPC mode for the container - Defaults to `nil`, example option: `host`
+- `uts_mode` - Set the UTS namespace mode for the container. The UTS namespace is for setting the hostname and the domain that is visible to running processes in that namespace. By default, all containers, including those with `--network=host`, have their own UTS namespace. The host setting will result in the container using the same UTS namespace as the host. Note that --hostname is invalid in host UTS mode.
+- `ro_rootfs` - Mount the container's root filesystem as read only. Defaults to `false`
+
+### Actions
+
+- `:create` - Creates the container but does not start it. Useful for Volume containers.
+- `:start` - Starts the container. Useful for containers that run jobs.. command that exit.
+- `:run` - The default action. Both `:create` and `:start` the container in one action. Redeploys the container on resource change.
+- `:run_if_missing` - Runs a container only once.
+- `:stop` - Stops the container.
+- `:restart` - Stops the starts the container.
+- `:kill` - Send a signal to the container process. Defaults to `SIGKILL`.
+- `:pause` - Pauses the container.
+- `:unpause` - Unpauses the container.
+- `:delete` - Deletes the container.
+- `:redeploy` - Deletes and runs the container.
+- `:reload` - Sends SIGHUP to pid 1 in the container
+
+## docker_registry
+
+The `docker_registry` resource is responsible for managing the
+connection auth information to a Docker registry.
+
+### docker_registry action :login
+
+- Log into or register with public registry:
+
+```ruby
+docker_registry 'https://index.docker.io/v1/' do
+  username 'publicme'
+  password 'hope_this_is_in_encrypted_databag'
+  email 'publicme@computers.biz'
+end
+```
+
+Log into private registry with optional port:
+
+```ruby
+docker_registry 'my local registry' do
+   serveraddress 'https://registry.computers.biz:8443/'
+   username 'privateme'
+   password 'still_hope_this_is_in_encrypted_databag'
+   email 'privateme@computers.biz'
+end
+```
+
+## docker_network
+
+The `docker_network` resource is responsible for managing Docker named
+networks. Usage of `overlay` driver requires the `docker_service` to
+be configured to use a distributed key/value store like `etcd`,
+`consul`, or `zookeeper`.
+
+### docker_network action :create
+
+```ruby
+docker_network 'my_network' do
+  subnet '192.168.88.0/24'
+  gateway '192.168.88.1'
+  action :create
+end
+
+docker_container 'echo-base' do
+  repo 'alpine'
+  tag '3.1'
+  command 'nc -ll -p 1337 -e /bin/cat'
+  port '1337'
+  network_mode 'my_network'
+  action :run
+end
+```
+
+### Properties
+
+- `driver` - The network driver to use. Defaults to `bridge`, other
+  options include `overlay`.
+- `subnet` - Specify the subnet(s) for the network. Ex:
+  `192.168.0.0/16`
+- `gateway` - Specify the gateway(s) for the network. Ex:
+  `192.168.0.1`
+- `ip_range` - Specify a range of IPs to allocate for containers. Ex:
+  `192.168.1.0/24`
+- `aux_address` - Auxillary addresses for the network. Ex:
+  `['a=192.168.1.5', 'b=192.168.1.6']`
+- `container` - Container-id/name to be connected/disconnected to/from
+  the network. Used only by `:connect` and `:disconnect` actions
+
+
+### Example
+
+```ruby
+docker_network 'network_g' do
+  driver 'overlay'
+  subnet ['192.168.0.0/16', '192.170.0.0/16']
+  gateway ['192.168.0.100', '192.170.0.100']
+  ip_range '192.168.1.0/24'
+  aux_address ['a=192.168.1.5', 'b=192.168.1.6', 'a=192.170.1.5', 'b=192.170.1.6']
+end
+```
+
+Connect to multiple networks
+
+```ruby
+docker_network 'network_h1' do
+  action :create
+end
+
+docker_network 'network_h2' do
+  action :create
+end
+
+docker_container 'echo-base-networks_h' do
+  repo 'alpine'
+  tag '3.1'
+  command 'nc -ll -p 1337 -e /bin/cat'
+  port '1337'
+  network_mode 'network_h1'
+  action :run
+end
+
+docker_network 'network_h2' do
+  container 'echo-base-networks_h'
+  action :connect
+end
+```
+
+### Actions
+
+- `:create` - create a network
+- `:delete` - delete a network
+- `:connect` - connect a container to a network
+- `:disconnect` - disconnect a container from a network
+
+## docker_volume
+
+The `docker_volume` resource is responsible for managing Docker named
+volumes.
+
+### docker_volume action :create
+
+```ruby
+docker_volume 'hello' do
+  action :create
+end
+
+docker_container 'file_writer' do
+  repo 'alpine'
+  tag '3.1'
+  volumes 'hello:/hello'
+  command 'touch /hello/sean_was_here'
+  action :run_if_missing
+end
+```
+
+### Actions
+
+- `:create` - create a volume
+- `:remove` - remove a volume
+
+## docker_execute
+
+The `docker_execute` resource allows you to execute commands inside of
+a running container.
+
+### Examples
+
+```ruby
+docker_exec 'touch_it' do
+  container 'busybox_exec'
+  command ['touch', '/tmp/onefile']
+end
+```
+
+### Properties
+
+- `host` - Daemon socket(s) to connect to - `tcp://host:port`,
+  `unix:///path/to/socket`, `fd://*` or `fd://socketfd`.
+- `command` - A command structured as an Array similar to `CMD` in a
+  Dockerfile.
+- `container` - Name of the container to execute the command in.
+- `timeout`- Seconds to wait for an attached container to
+  return. Defaults to 60 seconds.
+
+### Actions
+
+- `:run` - Runs the command
+
+## Testing and Development
+
+- Full development and testing workflow with Test Kitchen and friends:
+
+  <testing.md>
+  </testing.md>
+
+## Contributing
+
+Please see contributing information in:
+
+<contributing.md>
+</contributing.md>
+
+## Maintainers
+
+- Sean OMeara ([sean@sean.io](mailto:sean@sean.io))
+- Brian Flad ([bflad417@gmail.com](mailto:bflad417@gmail.com))
+- Tom Duffield (<http://tomduffield.com>)
+- Fletcher Nichol ([fnichol@nichol.ca](mailto:fnichol@nichol.ca))
+- Chase Bolt ([chase.bolt@gmail.com](mailto:chase.bolt@gmail.com))
+
+## License
+
+Licensed under the Apache License, Version 2.0 (the "License"); you
+may not use this file except in compliance with the License. You may
+obtain a copy of the License at
+
+
+```
+http://www.apache.org/licenses/LICENSE-2.0
+```
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+implied. See the License for the specific language governing
+permissions and limitations under the License.
diff --git a/cookbooks/docker-2.15.13/libraries/_autoload.rb b/cookbooks/docker-2.15.13/libraries/_autoload.rb
new file mode 100644
index 0000000000000000000000000000000000000000..63fdbb593f423b7b02a19aab5fe64239710a8433
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/_autoload.rb
@@ -0,0 +1,13 @@
+begin
+  gem 'docker-api', '= 1.33.4'
+rescue LoadError
+  unless defined?(ChefSpec)
+    run_context = Chef::RunContext.new(Chef::Node.new, {}, Chef::EventDispatch::Dispatcher.new)
+
+    require 'chef/resource/chef_gem'
+
+    docker = Chef::Resource::ChefGem.new('docker-api', run_context)
+    docker.version '= 1.33.4'
+    docker.run_action(:install)
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_base.rb b/cookbooks/docker-2.15.13/libraries/docker_base.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b7cd1a65022a2c0c7701df5681b325d490e81772
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_base.rb
@@ -0,0 +1,90 @@
+module DockerCookbook
+  class DockerBase < Chef::Resource
+    require_relative 'helpers_auth'
+    require_relative 'helpers_base'
+
+    include DockerHelpers::Base
+
+    #########
+    # Classes
+    #########
+
+    class UnorderedArray < Array
+      def ==(other)
+        # If I (desired env) am a subset of the current env, let == return true
+        other.is_a?(Array) && all? { |val| other.include?(val) }
+      end
+    end
+
+    class ShellCommandString < String
+      def ==(other)
+        other.is_a?(String) && Shellwords.shellwords(self) == Shellwords.shellwords(other)
+      end
+    end
+
+    class PartialHash < Hash
+      def ==(other)
+        other.is_a?(Hash) && all? { |key, val| other.key?(key) && other[key] == val }
+      end
+    end
+
+    ################
+    # Type Constants
+    #
+    # These will be used when declaring resource property types in the
+    # docker_service, docker_container, and docker_image resource.
+    #
+    ################
+
+    ArrayType = property_type(
+      is: [Array, nil],
+      coerce: proc { |v| v.nil? ? nil : Array(v) }
+    ) unless defined?(ArrayType)
+
+    Boolean = property_type(
+      is: [true, false],
+      default: false
+    ) unless defined?(Boolean)
+
+    NonEmptyArray = property_type(
+      is: [Array, nil],
+      coerce: proc { |v| Array(v).empty? ? nil : Array(v) }
+    ) unless defined?(NonEmptyArray)
+
+    ShellCommand = property_type(
+      is: [String],
+      coerce: proc { |v| coerce_shell_command(v) }
+    ) unless defined?(ShellCommand)
+
+    UnorderedArrayType = property_type(
+      is: [UnorderedArray, nil],
+      coerce: proc { |v| v.nil? ? nil : UnorderedArray.new(Array(v)) }
+    ) unless defined?(UnorderedArrayType)
+
+    PartialHashType = property_type(
+      is: [PartialHash, nil],
+      coerce: proc { |v| v.nil? ? nil : PartialHash[v] }
+    ) unless defined?(PartialHashType)
+
+    #####################
+    # Resource properties
+    #####################
+
+    property :api_retries, Integer, default: 3, desired_state: false
+    property :read_timeout, [Integer, nil], default: 60, desired_state: false
+    property :write_timeout, [Integer, nil], desired_state: false
+    property :running_wait_time, [Integer, nil], default: 20, desired_state: false
+
+    property :tls, [Boolean, nil], default: lazy { default_tls }, desired_state: false
+    property :tls_verify, [Boolean, nil], default: lazy { default_tls_verify }, desired_state: false
+    property :tls_ca_cert, [String, nil], default: lazy { default_tls_cert_path('ca') }, desired_state: false
+    property :tls_server_cert, [String, nil], desired_state: false
+    property :tls_server_key, [String, nil], desired_state: false
+    property :tls_client_cert, [String, nil], default: lazy { default_tls_cert_path('cert') }, desired_state: false
+    property :tls_client_key, [String, nil], default: lazy { default_tls_cert_path('key') }, desired_state: false
+
+    declare_action_class.class_eval do
+      include DockerHelpers::Authentication
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_container.rb b/cookbooks/docker-2.15.13/libraries/docker_container.rb
new file mode 100644
index 0000000000000000000000000000000000000000..29e9f45a7ad4ea140bc88de8ac546a4f15e1c07c
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_container.rb
@@ -0,0 +1,446 @@
+module DockerCookbook
+  class DockerContainer < DockerBase
+    require 'docker'
+    require 'shellwords'
+    require_relative 'helpers_container'
+
+    include DockerHelpers::Container
+
+    resource_name :docker_container
+
+    ###########################################################
+    # In Chef 12.5 and later, we no longer have to use separate
+    # classes for resource and providers. Instead, we have
+    # everything in a single class.
+    #
+    # For the purposes of my own sanity, I'm going to place all the
+    # "resource" related bits at the top of the files, and the
+    # providerish bits at the bottom.
+    #
+    #
+    # Methods for default values and coersion are found in
+    # helpers_container.rb
+    ###########################################################
+
+    # ~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~
+    # Begin classic Chef "resource" section
+    # ~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~
+
+    # The non-standard types Boolean, ArrayType, ShellCommand, etc
+    # are found in the DockerBase class.
+    property :container_name, String, name_property: true
+    property :repo, String, default: lazy { container_name }
+    property :tag, String, default: 'latest'
+    property :command, ShellCommand
+    property :attach_stderr, Boolean, default: false, desired_state: false
+    property :attach_stdin, Boolean, default: false, desired_state: false
+    property :attach_stdout, Boolean, default: false, desired_state: false
+    property :autoremove, Boolean, desired_state: false
+    property :cap_add, NonEmptyArray
+    property :cap_drop, NonEmptyArray
+    property :cgroup_parent, String, default: ''
+    property :cpu_shares, [Integer, nil], default: 0
+    property :cpuset_cpus, String, default: ''
+    property :detach, Boolean, default: true, desired_state: false
+    property :devices, Array, default: []
+    property :dns, Array, default: []
+    property :dns_search, Array, default: []
+    property :domain_name, String, default: ''
+    property :entrypoint, ShellCommand
+    property :env, UnorderedArrayType, default: []
+    property :extra_hosts, NonEmptyArray
+    property :exposed_ports, PartialHashType, default: {}
+    property :force, Boolean, desired_state: false
+    property :host, [String, nil], default: lazy { default_host }, desired_state: false
+    property :hostname, String
+    property :ipc_mode, String, default: ''
+    property :kernel_memory, [String, Integer], coerce: proc { |v| coerce_kernel_memory(v) }, default: 0
+    property :labels, [String, Array, Hash], default: {}, coerce: proc { |v| coerce_labels(v) }
+    property :links, UnorderedArrayType, coerce: proc { |v| coerce_links(v) }
+    property :log_driver, %w( json-file syslog journald gelf fluentd awslogs splunk etwlogs gcplogs none ), default: 'json-file', desired_state: false
+    property :log_opts, [Hash, nil], coerce: proc { |v| coerce_log_opts(v) }, desired_state: false
+    property :ip_address, String
+    property :mac_address, String
+    property :memory, [String, Integer], coerce: proc { |v| coerce_memory(v) }, default: 0
+    property :memory_swap, [String, Integer], coerce: proc { |v| coerce_memory_swap(v) }, default: 0
+    property :memory_swappiness, Integer, coerce: proc { |v| coerce_memory_swappiness(v) }, default: 0
+    property :memory_reservation, Integer, coerce: proc { |v| coerce_memory_reservation(v) }, default: 0
+    property :network_disabled, Boolean, default: false
+    property :network_mode, [String, NilClass], default: 'bridge'
+    property :network_aliases, [ArrayType], default: []
+    property :open_stdin, Boolean, default: false, desired_state: false
+    property :outfile, [String, NilClass]
+    property :port_bindings, PartialHashType, default: {}
+    property :pid_mode, String, default: ''
+    property :privileged, Boolean, default: false
+    property :publish_all_ports, Boolean, default: false
+    property :remove_volumes, Boolean
+    property :restart_maximum_retry_count, Integer, default: 0
+    property :restart_policy, String
+    property :ro_rootfs, Boolean, default: false
+    property :security_opt, [String, ArrayType]
+    property :signal, String, default: 'SIGTERM'
+    property :stdin_once, Boolean, default: false, desired_state: false
+    property :sysctls, Hash, default: {}
+    property :timeout, [Integer, nil], desired_state: false
+    property :tty, Boolean, default: false
+    property :ulimits, [Array, nil], coerce: proc { |v| coerce_ulimits(v) }
+    property :user, String, default: ''
+    property :userns_mode, String, default: ''
+    property :uts_mode, String, default: ''
+    property :volumes, PartialHashType, default: {}, coerce: proc { |v| coerce_volumes(v) }
+    property :volumes_from, ArrayType
+    property :volume_driver, String
+    property :working_dir, [String, NilClass], default: ''
+
+    # Used to store the bind property since binds is an alias to volumes
+    property :volumes_binds, Array
+
+    # Used to store the state of the Docker container
+    property :container, Docker::Container, desired_state: false
+
+    # Used by :stop action. If the container takes longer than this
+    # many seconds to stop, kill it instead. A nil value (the default) means
+    # never kill the container.
+    property :kill_after, [Integer, NilClass], default: nil, desired_state: false
+
+    alias cmd command
+    alias additional_host extra_hosts
+    alias rm autoremove
+    alias remove_automatically autoremove
+    alias host_name hostname
+    alias domainname domain_name
+    alias dnssearch dns_search
+    alias restart_maximum_retries restart_maximum_retry_count
+    alias volume volumes
+    alias binds volumes
+    alias volume_from volumes_from
+    alias destination outfile
+    alias workdir working_dir
+
+    # ~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~
+    # Begin classic Chef "provider" section
+    # ~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~
+
+    ########################################################
+    # Load Current Value
+    ########################################################
+
+    load_current_value do
+      # Grab the container and assign the container property
+      begin
+        with_retries { container Docker::Container.get(container_name, {}, connection) }
+      rescue Docker::Error::NotFoundError
+        current_value_does_not_exist!
+      end
+
+      # Go through everything in the container and set corresponding properties:
+      # c.info['Config']['ExposedPorts'] -> exposed_ports
+      (container.info['Config'].to_a + container.info['HostConfig'].to_a).each do |key, value|
+        next if value.nil? || key == 'RestartPolicy' || key == 'Binds' || key == 'ReadonlyRootfs'
+
+        # Image => image
+        # Set exposed_ports = ExposedPorts (etc.)
+        property_name = to_snake_case(key)
+        public_send(property_name, value) if respond_to?(property_name)
+      end
+
+      # load container specific labels (without engine/image ones)
+      load_container_labels
+
+      # these are a special case for us because our names differ from theirs
+      restart_policy container.info['HostConfig']['RestartPolicy']['Name']
+      restart_maximum_retry_count container.info['HostConfig']['RestartPolicy']['MaximumRetryCount']
+      volumes_binds container.info['HostConfig']['Binds']
+      ro_rootfs container.info['HostConfig']['ReadonlyRootfs']
+    end
+
+    #########
+    # Actions
+    #########
+
+    # Super handy visual reference!
+    # http://gliderlabs.com/images/docker_events.png
+
+    default_action :run
+
+    declare_action_class.class_eval do
+      def whyrun_supported?
+        true
+      end
+
+      def call_action(action)
+        send("action_#{action}")
+        load_current_resource
+      end
+
+      def state
+        current_resource ? current_resource.state : {}
+      end
+    end
+
+    # Loads container specific labels excluding those of engine or image.
+    # This insures idempotency.
+    def load_container_labels
+      image_labels = Docker::Image.get(container.info['Image'], {}, connection).info['Config']['Labels'] || {}
+      engine_labels = Docker.info(connection)['Labels'] || {}
+
+      labels = (container.info['Config']['Labels'] || {}).reject do |key, val|
+        image_labels.any? { |k, v| k == key && v == val } ||
+          engine_labels.any? { |k, v| k == key && v == val }
+      end
+
+      public_send(:labels, labels)
+    end
+
+    def validate_container_create
+      if property_is_set?(:restart_policy) &&
+         restart_policy != 'no' &&
+         restart_policy != 'always' &&
+         restart_policy != 'unless-stopped' &&
+         restart_policy != 'on-failure'
+        raise Chef::Exceptions::ValidationFailed, 'restart_policy must be either no, always, unless-stopped, or on-failure.'
+      end
+
+      if autoremove == true && (property_is_set?(:restart_policy) && restart_policy != 'no')
+        raise Chef::Exceptions::ValidationFailed, 'Conflicting options restart_policy and autoremove.'
+      end
+
+      if detach == true &&
+         (
+          attach_stderr == true ||
+          attach_stdin == true ||
+          attach_stdout == true ||
+          stdin_once == true
+         )
+        raise Chef::Exceptions::ValidationFailed, 'Conflicting options detach, attach_stderr, attach_stdin, attach_stdout, stdin_once.'
+      end
+
+      if network_mode == 'host' &&
+         (
+          !(hostname.nil? || hostname.empty?) ||
+          !(mac_address.nil? || mac_address.empty?)
+         )
+        raise Chef::Exceptions::ValidationFailed, 'Cannot specify hostname or mac_address when network_mode is host.'
+      end
+
+      if network_mode == 'container' &&
+         (
+          !(hostname.nil? || hostname.empty?) ||
+          !(dns.nil? || dns.empty?) ||
+          !(dns_search.nil? || dns_search.empty?) ||
+          !(mac_address.nil? || mac_address.empty?) ||
+          !(extra_hosts.nil? || extra_hosts.empty?) ||
+          !(exposed_ports.nil? || exposed_ports.empty?) ||
+          !(port_bindings.nil? || port_bindings.empty?) ||
+          !(publish_all_ports.nil? || publish_all_ports.empty?) ||
+          !port.nil?
+         )
+        raise Chef::Exceptions::ValidationFailed, 'Cannot specify hostname, dns, dns_search, mac_address, extra_hosts, exposed_ports, port_bindings, publish_all_ports, port when network_mode is container.'
+      end
+    end
+
+    def parsed_hostname
+      return nil if network_mode == 'host'
+      hostname
+    end
+
+    action :create do
+      validate_container_create
+
+      converge_if_changed do
+        action_delete
+
+        with_retries do
+          config = {
+            'name'            => container_name,
+            'Image'           => "#{repo}:#{tag}",
+            'Labels'          => labels,
+            'Cmd'             => to_shellwords(command),
+            'AttachStderr'    => attach_stderr,
+            'AttachStdin'     => attach_stdin,
+            'AttachStdout'    => attach_stdout,
+            'Domainname'      => domain_name,
+            'Entrypoint'      => to_shellwords(entrypoint),
+            'Env'             => env,
+            'ExposedPorts'    => exposed_ports,
+            'Hostname'        => parsed_hostname,
+            'MacAddress'      => mac_address,
+            'NetworkDisabled' => network_disabled,
+            'OpenStdin'       => open_stdin,
+            'StdinOnce'       => stdin_once,
+            'Tty'             => tty,
+            'User'            => user,
+            'Volumes'         => volumes,
+            'WorkingDir'      => working_dir,
+            'HostConfig'      => {
+              'Binds'           => volumes_binds,
+              'CapAdd'          => cap_add,
+              'CapDrop'         => cap_drop,
+              'CgroupParent'    => cgroup_parent,
+              'CpuShares'       => cpu_shares,
+              'CpusetCpus'      => cpuset_cpus,
+              'Devices'         => devices,
+              'Dns'             => dns,
+              'DnsSearch'       => dns_search,
+              'ExtraHosts'      => extra_hosts,
+              'IpcMode'         => ipc_mode,
+              'KernelMemory'    => kernel_memory,
+              'Links'           => links,
+              'LogConfig'       => log_config,
+              'Memory'          => memory,
+              'MemorySwap'      => memory_swap,
+              'MemorySwappiness' => memory_swappiness,
+              'MemoryReservation' => memory_reservation,
+              'NetworkMode'     => network_mode,
+              'Privileged'      => privileged,
+              'PidMode'         => pid_mode,
+              'PortBindings'    => port_bindings,
+              'PublishAllPorts' => publish_all_ports,
+              'RestartPolicy'   => {
+                'Name'              => restart_policy,
+                'MaximumRetryCount' => restart_maximum_retry_count,
+              },
+              'ReadonlyRootfs'  => ro_rootfs,
+              'SecurityOpt'     => security_opt,
+              'Sysctls'         => sysctls,
+              'Ulimits'         => ulimits_to_hash,
+              'UsernsMode'      => userns_mode,
+              'UTSMode'         => uts_mode,
+              'VolumesFrom'     => volumes_from,
+              'VolumeDriver'    => volume_driver,
+            },
+          }
+          net_config = {
+            'NetworkingConfig' => {
+              'EndpointsConfig' => {
+                network_mode => {
+                  'IPAMConfig' => {
+                    'IPv4Address' => ip_address,
+                  },
+                  'Aliases' => network_aliases,
+                },
+              },
+            },
+          } if network_mode
+          config.merge! net_config
+
+          Docker::Container.create(config, connection)
+        end
+      end
+    end
+
+    action :start do
+      return if state['Restarting']
+      return if state['Running']
+      converge_by "starting #{container_name}" do
+        with_retries do
+          container.start
+          timeout ? container.wait(timeout) : container.wait unless detach
+        end
+        wait_running_state(true) if detach
+      end
+    end
+
+    action :stop do
+      return unless state['Running']
+      kill_after_str = "(will kill after #{kill_after}s)" if kill_after
+      converge_by "stopping #{container_name} #{kill_after_str}" do
+        begin
+          with_retries do
+            container.stop!('timeout' => kill_after)
+            wait_running_state(false)
+          end
+        rescue Docker::Error::TimeoutError
+          raise Docker::Error::TimeoutError, "Container failed to stop, consider adding kill_after to the container #{container_name}"
+        end
+      end
+    end
+
+    action :kill do
+      return unless state['Running']
+      converge_by "killing #{container_name}" do
+        with_retries { container.kill(signal: signal) }
+      end
+    end
+
+    action :run do
+      validate_container_create
+      call_action(:create)
+      call_action(:start)
+      call_action(:delete) if autoremove
+    end
+
+    action :run_if_missing do
+      return if current_resource
+      call_action(:run)
+    end
+
+    action :pause do
+      return if state['Paused']
+      converge_by "pausing #{container_name}" do
+        with_retries { container.pause }
+      end
+    end
+
+    action :unpause do
+      return if current_resource && !state['Paused']
+      converge_by "unpausing #{container_name}" do
+        with_retries { container.unpause }
+      end
+    end
+
+    action :restart do
+      kill_after_str = " (will kill after #{kill_after}s)" if kill_after != -1
+      converge_by "restarting #{container_name} #{kill_after_str}" do
+        current_resource ? container.restart('timeout' => kill_after) : call_action(:run)
+      end
+    end
+
+    action :reload do
+      converge_by "reloading #{container_name}" do
+        with_retries { container.kill(signal: 'SIGHUP') }
+      end
+    end
+
+    action :redeploy do
+      validate_container_create
+
+      # never start containers resulting from a previous action :create #432
+      should_create = state['Running'] == false && state['StartedAt'] == '0001-01-01T00:00:00Z'
+      call_action(:delete)
+      call_action(should_create ? :create : :run)
+    end
+
+    action :delete do
+      return unless current_resource
+      call_action(:unpause)
+      call_action(:stop)
+      converge_by "deleting #{container_name}" do
+        with_retries { container.delete(force: force, v: remove_volumes) }
+      end
+    end
+
+    action :remove do
+      call_action(:delete)
+    end
+
+    action :commit do
+      converge_by "committing #{container_name}" do
+        with_retries do
+          new_image = container.commit
+          new_image.tag('repo' => repo, 'tag' => tag, 'force' => force)
+        end
+      end
+    end
+
+    action :export do
+      raise "Please set outfile property on #{container_name}" if outfile.nil?
+      converge_by "exporting #{container_name}" do
+        with_retries do
+          ::File.open(outfile, 'w') { |f| container.export { |chunk| f.write(chunk) } }
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_exec.rb b/cookbooks/docker-2.15.13/libraries/docker_exec.rb
new file mode 100644
index 0000000000000000000000000000000000000000..0491d0dc20a9a1b2b8079c85a118ec9504b40498
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_exec.rb
@@ -0,0 +1,21 @@
+module DockerCookbook
+  class DockerExec < DockerBase
+    resource_name :docker_exec
+
+    property :host, [String, nil], default: lazy { default_host }
+    property :command, Array
+    property :container, String
+    property :timeout, Numeric, default: 60
+
+    property :container_obj, Docker::Container, desired_state: false
+
+    alias cmd command
+
+    action :run do
+      converge_by "executing #{command} on #{container}" do
+        with_retries { container_obj Docker::Container.get(container, {}, connection) }
+        container_obj.exec(command, wait: timeout)
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_image.rb b/cookbooks/docker-2.15.13/libraries/docker_image.rb
new file mode 100644
index 0000000000000000000000000000000000000000..84551943f6ba54445a3d1ca6609c8057a87969b3
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_image.rb
@@ -0,0 +1,94 @@
+module DockerCookbook
+  class DockerImage < DockerBase
+    require 'docker'
+    require_relative 'helpers_image'
+
+    resource_name :docker_image
+
+    # Modify the default of read_timeout from 60 to 120
+    property :read_timeout, default: 120, desired_state: false
+
+    # https://docs.docker.com/reference/api/docker_remote_api_v1.20/
+    property :destination, [String, nil]
+    property :force, Boolean, default: false
+    property :host, [String, nil], default: lazy { default_host }, desired_state: false
+    property :nocache, Boolean, default: false
+    property :noprune, Boolean, default: false
+    property :repo, String, name_property: true
+    property :rm, Boolean, default: true
+    property :source, String
+    property :tag, String, default: 'latest'
+
+    alias image repo
+    alias image_name repo
+    alias no_cache nocache
+    alias no_prune noprune
+
+    #########
+    # Actions
+    #########
+
+    default_action :pull
+
+    declare_action_class.class_eval do
+      include DockerHelpers::Image
+      def whyrun_supported?
+        true
+      end
+    end
+
+    action :build do
+      converge_by "Build image #{image_identifier}" do
+        build_image
+      end
+    end
+
+    action :build_if_missing do
+      return if Docker::Image.exist?(image_identifier, {}, connection)
+      action_build
+    end
+
+    action :import do
+      return if Docker::Image.exist?(image_identifier, {}, connection)
+      converge_by "Import image #{image_identifier}" do
+        import_image
+      end
+    end
+
+    action :pull do
+      # We already did the work, but we need to report what we did!
+      converge_by "Pull image #{image_identifier}" do
+      end if pull_image
+    end
+
+    action :pull_if_missing do
+      return if Docker::Image.exist?(image_identifier, {}, connection)
+      action_pull
+    end
+
+    action :push do
+      converge_by "Push image #{image_identifier}" do
+        push_image
+      end
+    end
+
+    action :remove do
+      return unless Docker::Image.exist?(image_identifier, {}, connection)
+      converge_by "Remove image #{image_identifier}" do
+        remove_image
+      end
+    end
+
+    action :save do
+      converge_by "Save image #{image_identifier}" do
+        save_image
+      end
+    end
+
+    action :load do
+      converge_by "load image #{image_identifier}" do
+        load_image
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_installation_binary.rb b/cookbooks/docker-2.15.13/libraries/docker_installation_binary.rb
new file mode 100644
index 0000000000000000000000000000000000000000..041dab427a3d93b5f615d3b2ac60f668d25b77de
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_installation_binary.rb
@@ -0,0 +1,40 @@
+module DockerCookbook
+  class DockerInstallationBinary < DockerBase
+    require_relative 'helpers_installation_binary'
+
+    include DockerHelpers::InstallationBinary
+
+    #####################
+    # Resource properties
+    #####################
+    resource_name :docker_installation_binary
+
+    property :checksum, String, default: lazy { default_checksum }, desired_state: false
+    property :source, String, default: lazy { default_source }, desired_state: false
+    property :version, String, default: lazy { default_version }, desired_state: false
+
+    default_action :create
+
+    #########
+    # Actions
+    #########
+
+    action :create do
+      # Pull a precompiled binary off the network
+      remote_file docker_bin do
+        source new_resource.source
+        checksum new_resource.checksum
+        owner 'root'
+        group 'root'
+        mode '0755'
+        action :create
+      end
+    end
+
+    action :delete do
+      file docker_bin do
+        action :delete
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_installation_package.rb b/cookbooks/docker-2.15.13/libraries/docker_installation_package.rb
new file mode 100644
index 0000000000000000000000000000000000000000..6d789cd9668e940f59f7242d26fae603b552247e
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_installation_package.rb
@@ -0,0 +1,32 @@
+module DockerCookbook
+  class DockerInstallationPackage < DockerBase
+    require_relative 'helpers_installation_package'
+
+    include DockerHelpers::InstallationPackage
+
+    # Resource properties
+    resource_name :docker_installation_package
+
+    provides :docker_installation, platform: 'amazon'
+
+    property :package_name, String, default: lazy { default_package_name }, desired_state: false
+    property :package_version, String, default: lazy { version_string(version) }, desired_state: false
+    property :version, String, default: lazy { default_docker_version }, desired_state: false
+    property :package_options, String, desired_state: false
+
+    # Actions
+    action :create do
+      package package_name do
+        version package_version
+        options package_options
+        action :install
+      end
+    end
+
+    action :delete do
+      package package_name do
+        action :remove
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_installation_script.rb b/cookbooks/docker-2.15.13/libraries/docker_installation_script.rb
new file mode 100644
index 0000000000000000000000000000000000000000..305031a6b67f564f8e89a48071a50336ebc68a60
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_installation_script.rb
@@ -0,0 +1,51 @@
+module DockerCookbook
+  class DockerInstallationScript < DockerBase
+    #####################
+    # Resource properties
+    #####################
+    resource_name :docker_installation_script
+
+    provides :docker_installation, os: 'linux'
+
+    property :repo, %w(main test experimental), default: 'main', desired_state: false
+    property :script_url, String, default: lazy { default_script_url }, desired_state: false
+
+    default_action :create
+
+    ################
+    # helper methods
+    ################
+
+    def default_script_url
+      case repo
+      when 'main'
+        'https://get.docker.com/'
+      when 'test'
+        'https://test.docker.com/'
+      when 'experimental'
+        'https://experimental.docker.com/'
+      end
+    end
+
+    #########
+    # Actions
+    #########
+
+    action :create do
+      package 'curl' do
+        action :install
+      end
+
+      execute 'install docker' do
+        command "curl -sSL #{script_url} | sh"
+        creates '/usr/bin/docker'
+      end
+    end
+
+    action :delete do
+      package 'docker-engine' do
+        action :remove
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_installation_tarball.rb b/cookbooks/docker-2.15.13/libraries/docker_installation_tarball.rb
new file mode 100644
index 0000000000000000000000000000000000000000..d9b1d315d79a5744adf009b1c684f43a7959fc95
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_installation_tarball.rb
@@ -0,0 +1,47 @@
+module DockerCookbook
+  class DockerInstallationTarball < DockerBase
+    require_relative 'helpers_installation_tarball'
+
+    include DockerHelpers::InstallationTarball
+
+    #####################
+    # Resource properties
+    #####################
+    resource_name :docker_installation_tarball
+
+    property :checksum, String, default: lazy { default_checksum }, desired_state: false
+    property :source, String, default: lazy { default_source }, desired_state: false
+    property :version, String, default: lazy { default_version }, desired_state: false
+
+    default_action :create
+
+    #########
+    # Actions
+    #########
+
+    action :create do
+      # Pull a precompiled binary off the network
+      remote_file docker_tarball do
+        source new_resource.source
+        checksum new_resource.checksum
+        owner 'root'
+        group 'root'
+        mode '0755'
+        action :create
+        notifies :run, 'execute[extract tarball]', :immediately
+      end
+
+      execute 'extract tarball' do
+        action :nothing
+        command "tar -xzf #{docker_tarball} --strip-components=1 -C #{docker_bin_prefix}"
+        creates docker_bin
+      end
+    end
+
+    action :delete do
+      file docker_bin do
+        action :delete
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_network.rb b/cookbooks/docker-2.15.13/libraries/docker_network.rb
new file mode 100644
index 0000000000000000000000000000000000000000..050db8a50b45cf3a56323c31e59274b370fac60a
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_network.rb
@@ -0,0 +1,127 @@
+module DockerCookbook
+  class DockerNetwork < DockerBase
+    require 'docker'
+    require_relative 'helpers_network'
+    include DockerHelpers::Network
+
+    resource_name :docker_network
+
+    property :auxiliary_addresses, [String, Array, nil], coerce: proc { |v| coerce_auxiliary_addresses(v) }
+    property :container, String, desired_state: false
+    property :driver, String
+    property :driver_opts, PartialHashType
+    property :gateway, [String, Array, nil], coerce: proc { |v| coerce_gateway(v) }
+    property :host, [String, nil], default: lazy { default_host }, desired_state: false
+    property :id, String
+    property :ip_range, [String, Array, nil], coerce: proc { |v| coerce_ip_range(v) }
+    property :ipam_driver, String
+    property :network, Docker::Network, desired_state: false
+    property :network_name, String, name_property: true
+    property :subnet, [String, Array, nil], coerce: proc { |v| coerce_subnet(v) }
+
+    alias aux_address auxiliary_addresses
+
+    load_current_value do
+      begin
+        with_retries { network Docker::Network.get(network_name, {}, connection) }
+      rescue Docker::Error::NotFoundError
+        current_value_does_not_exist!
+      end
+
+      aux_addr_ray = []
+      gateway_ray = []
+      ip_range_ray = []
+      subnet_ray = []
+
+      network.info['IPAM']['Config'].to_a.each do |conf|
+        conf.each do |key, value|
+          case key
+          when 'AuxiliaryAddresses'
+            aux_addr_ray << value
+          when 'Gateway'
+            gateway_ray << value
+          when 'IPRange'
+            ip_range_ray << value
+          when 'Subnet'
+            subnet_ray << value
+          end
+        end
+      end
+
+      auxiliary_addresses aux_addr_ray
+      gateway gateway_ray
+      ip_range ip_range_ray
+      subnet subnet_ray
+
+      driver network.info['Driver']
+      driver_opts network.info['Options']
+    end
+
+    action :create do
+      converge_if_changed do
+        action_delete
+
+        with_retries do
+          options = {}
+          options['Driver'] = driver if driver
+          options['Options'] = driver_opts if driver_opts
+          ipam_options = consolidate_ipam(subnet, ip_range, gateway, aux_address)
+          options['IPAM'] = { 'Config' => ipam_options } unless ipam_options.empty?
+          options['IPAM']['Driver'] = ipam_driver if ipam_driver
+          Docker::Network.create(network_name, options)
+        end
+      end
+    end
+
+    action :delete do
+      return unless current_resource
+      converge_by "deleting #{network_name}" do
+        with_retries do
+          network.delete
+        end
+      end
+    end
+
+    action :remove do
+      action_delete
+    end
+
+    action :connect do
+      unless container
+        raise Chef::Exceptions::ValidationFailed, 'Container id or name is required for action :connect'
+      end
+
+      if current_resource
+        container_index = network.info['Containers'].values.index { |c| c['Name'] == container }
+        if container_index.nil?
+          converge_by("connect #{container}") do
+            with_retries do
+              network.connect(container)
+            end
+          end
+        end
+      else
+        Chef::Log.warn("Cannot connect to #{network_name}: network does not exist")
+      end
+    end
+
+    action :disconnect do
+      unless container
+        raise Chef::Exceptions::ValidationFailed, 'Container id or name is required for action :disconnect'
+      end
+
+      if current_resource
+        container_index = network.info['Containers'].values.index { |c| c['Name'] == container }
+        unless container_index.nil?
+          converge_by("disconnect #{container}") do
+            with_retries do
+              network.disconnect(container)
+            end
+          end
+        end
+      else
+        Chef::Log.warn("Cannot disconnect from #{network_name}: network does not exist")
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_registry.rb b/cookbooks/docker-2.15.13/libraries/docker_registry.rb
new file mode 100644
index 0000000000000000000000000000000000000000..58eeff6521416a13335c7740e0f9c59885246847
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_registry.rb
@@ -0,0 +1,38 @@
+module DockerCookbook
+  class DockerRegistry < DockerBase
+    require 'docker'
+    require_relative 'helpers_auth'
+
+    resource_name :docker_registry
+
+    property :email, [String, nil]
+    property :password, [String, nil]
+    property :serveraddress, [String, nil], name_property: true
+    property :username, [String, nil]
+
+    action :login do
+      tries = api_retries
+
+      registry_host = parse_registry_host(serveraddress)
+
+      (node.run_state['docker_auth'] ||= {})[registry_host] = {
+        'serveraddress' => registry_host,
+        'username' => username,
+        'password' => password,
+        'email' => email,
+      }
+
+      begin
+        Docker.connection.post(
+          '/auth', {},
+          body: node.run_state['docker_auth'][registry_host].to_json
+        )
+      rescue Docker::Error::ServerError, Docker::Error::UnauthorizedError
+        raise Docker::Error::AuthenticationError, "#{username} failed to authenticate with #{serveraddress}" if (tries -= 1) == 0
+        retry
+      end
+
+      true
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_service.rb b/cookbooks/docker-2.15.13/libraries/docker_service.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7be1ce12dc4d4ad296f751b483e7cfe655312af4
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_service.rb
@@ -0,0 +1,130 @@
+module DockerCookbook
+  require_relative 'docker_service_base'
+
+  class DockerService < DockerServiceBase
+    resource_name :docker_service
+
+    # register with the resource resolution system
+    provides :docker_service
+
+    # installation type and service_manager
+    property :install_method, %w(binary script package tarball none auto), default: 'auto', desired_state: false
+    property :service_manager, %w(execute sysvinit upstart systemd auto), default: 'auto', desired_state: false
+
+    # docker_installation_script
+    property :repo, desired_state: false
+    property :script_url, String, desired_state: false
+
+    # docker_installation_binary and tarball
+    property :checksum, String, desired_state: false
+    property :docker_bin, String, desired_state: false
+    property :source, String, desired_state: false
+
+    # docker_installation_package
+    property :package_version, String, desired_state: false
+    property :package_name, String, desired_state: false
+
+    # binary, package and tarball
+    property :version, String, desired_state: false
+    property :package_options, [String, nil], desired_state: false
+
+    ################
+    # Helper Methods
+    ################
+    def validate_install_method
+      if property_is_set?(:version) &&
+         install_method != 'binary' &&
+         install_method != 'package' &&
+         install_method != 'tarball'
+        raise Chef::Exceptions::ValidationFailed, 'Version property only supported for binary, package and tarball installation methods'
+      end
+    end
+
+    def copy_properties_to(to, *properties)
+      properties = self.class.properties.keys if properties.empty?
+      properties.each do |p|
+        # If the property is set on from, and exists on to, set the
+        # property on to
+        if to.class.properties.include?(p) && property_is_set?(p)
+          to.send(p, send(p))
+        end
+      end
+    end
+
+    action_class.class_eval do
+      def installation(&block)
+        case install_method
+        when 'auto'
+          install = docker_installation(name, &block)
+        when 'binary'
+          install = docker_installation_binary(name, &block)
+        when 'script'
+          install = docker_installation_script(name, &block)
+        when 'package'
+          install = docker_installation_package(name, &block)
+        when 'tarball'
+          install = docker_installation_tarball(name, &block)
+        when 'none'
+          Chef::Log.info('Skipping Docker installation. Assuming it was handled previously.')
+          return
+        end
+        copy_properties_to(install)
+        install
+      end
+
+      def svc_manager(&block)
+        case service_manager
+        when 'auto'
+          svc = docker_service_manager(name, &block)
+        when 'execute'
+          svc = docker_service_manager_execute(name, &block)
+        when 'sysvinit'
+          svc = docker_service_manager_sysvinit(name, &block)
+        when 'upstart'
+          svc = docker_service_manager_upstart(name, &block)
+        when 'systemd'
+          svc = docker_service_manager_systemd(name, &block)
+        end
+        copy_properties_to(svc)
+        svc
+      end
+    end
+
+    #########
+    # Actions
+    #########
+
+    action :create do
+      validate_install_method
+
+      installation do
+        action :create
+        notifies :restart, new_resource, :immediately
+      end
+    end
+
+    action :delete do
+      installation do
+        action :delete
+      end
+    end
+
+    action :start do
+      svc_manager do
+        action :start
+      end
+    end
+
+    action :stop do
+      svc_manager do
+        action :stop
+      end
+    end
+
+    action :restart do
+      svc_manager do
+        action :restart
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_service_base.rb b/cookbooks/docker-2.15.13/libraries/docker_service_base.rb
new file mode 100644
index 0000000000000000000000000000000000000000..fa2393e5ba3ec950d8f4c137ce27c965b4b06dd2
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_service_base.rb
@@ -0,0 +1,123 @@
+module DockerCookbook
+  class DockerServiceBase < DockerBase
+    ################
+    # Helper Methods
+    ################
+    require 'docker'
+    require_relative 'helpers_service'
+    include DockerHelpers::Service
+
+    #####################
+    # resource properties
+    #####################
+
+    resource_name :docker_service_base
+
+    # register with the resource resolution system
+    provides :docker_service_manager
+
+    # daemon management
+    property :instance, String, name_property: true, required: true, desired_state: false
+    property :auto_restart, Boolean, default: false
+    property :api_cors_header, [String, nil]
+    property :bridge, [String, nil]
+    property :bip, [IPV4_ADDR, IPV4_CIDR, IPV6_ADDR, IPV6_CIDR, nil]
+    property :cluster_store, [String, nil]
+    property :cluster_advertise, [String, nil]
+    property :cluster_store_opts, ArrayType
+    property :debug, [Boolean, nil]
+    property :daemon, Boolean, default: true
+    property :dns, ArrayType
+    property :dns_search, [Array, nil]
+    property :exec_driver, ['native', 'lxc', nil]
+    property :exec_opts, ArrayType
+    property :fixed_cidr, [String, nil]
+    property :fixed_cidr_v6, [String, nil]
+    property :group, [String, nil]
+    property :graph, [String, nil]
+    property :host, [String, Array], coerce: proc { |v| coerce_host(v) }
+    property :icc, [Boolean, nil]
+    property :insecure_registry, [Array, String, nil], coerce: proc { |v| coerce_insecure_registry(v) }
+    property :ip, [IPV4_ADDR, IPV6_ADDR, nil]
+    property :ip_forward, [Boolean, nil]
+    property :ipv4_forward, Boolean, default: true
+    property :ipv6_forward, Boolean, default: true
+    property :ip_masq, [Boolean, nil]
+    property :iptables, [Boolean, nil]
+    property :ipv6, [Boolean, nil]
+    property :log_level, [:debug, :info, :warn, :error, :fatal, nil]
+    property :labels, [String, Array], coerce: proc { |v| coerce_daemon_labels(v) }, desired_state: false
+    property :log_driver, %w( json-file syslog journald gelf fluentd awslogs splunk none )
+    property :log_opts, ArrayType
+    property :mount_flags, String, default: 'slave'
+    property :mtu, [String, nil]
+    property :pidfile, String, default: lazy { "/var/run/#{docker_name}.pid" }
+    property :registry_mirror, [String, nil]
+    property :storage_driver, ArrayType
+    property :selinux_enabled, [Boolean, nil]
+    property :storage_opts, ArrayType
+    property :default_ulimit, ArrayType
+    property :userland_proxy, [Boolean, nil]
+    property :disable_legacy_registry, [Boolean, nil]
+    property :userns_remap, [String, nil]
+
+    # These are options specific to systemd configuration such as
+    # LimitNOFILE or TasksMax that you may wannt to use to customize
+    # the environment in which Docker runs.
+    property :systemd_opts, ArrayType
+
+    # These are unvalidated daemon arguments passed in as a string.
+    property :misc_opts, [String, nil]
+
+    # environment variables to set before running daemon
+    property :http_proxy, [String, nil]
+    property :https_proxy, [String, nil]
+    property :no_proxy, [String, nil]
+    property :tmpdir, [String, nil]
+
+    # logging
+    property :logfile, String, default: '/var/log/docker.log'
+
+    # docker-wait-ready timeout
+    property :service_timeout, Integer, default: 20
+
+    allowed_actions :start, :stop, :restart
+
+    alias label labels
+    alias tlscacert tls_ca_cert
+    alias tlscert tls_server_cert
+    alias tlskey tls_server_key
+    alias tlsverify tls_verify
+    alias run_group group
+
+    declare_action_class.class_eval do
+      def libexec_dir
+        return '/usr/libexec/docker' if node['platform_family'] == 'rhel'
+        '/usr/lib/docker'
+      end
+
+      def create_docker_wait_ready
+        directory libexec_dir do
+          owner 'root'
+          group 'root'
+          mode '0755'
+          action :create
+        end
+
+        template "#{libexec_dir}/#{docker_name}-wait-ready" do
+          source 'default/docker-wait-ready.erb'
+          owner 'root'
+          group 'root'
+          mode '0755'
+          variables(
+            docker_cmd: docker_cmd,
+            libexec_dir: libexec_dir,
+            service_timeout: service_timeout
+          )
+          cookbook 'docker'
+          action :create
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_service_manager_execute.rb b/cookbooks/docker-2.15.13/libraries/docker_service_manager_execute.rb
new file mode 100644
index 0000000000000000000000000000000000000000..01dc20e3652e684b7734569a34e0bccc7350b8ba
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_service_manager_execute.rb
@@ -0,0 +1,56 @@
+module DockerCookbook
+  class DockerServiceManagerExecute < DockerServiceBase
+    resource_name :docker_service_manager_execute
+
+    provides :docker_service_manager, os: 'linux'
+
+    # Start the service
+    action :start do
+      # enable ipv4 forwarding
+      execute 'enable net.ipv4.conf.all.forwarding' do
+        command '/sbin/sysctl net.ipv4.conf.all.forwarding=1'
+        not_if '/sbin/sysctl -q -n net.ipv4.conf.all.forwarding | grep ^1$'
+        action :run
+      end
+
+      # enable ipv6 forwarding
+      execute 'enable net.ipv6.conf.all.forwarding' do
+        command '/sbin/sysctl net.ipv6.conf.all.forwarding=1'
+        not_if '/sbin/sysctl -q -n net.ipv6.conf.all.forwarding | grep ^1$'
+        action :run
+      end
+
+      # Go doesn't support detaching processes natively, so we have
+      # to manually fork it from the shell with &
+      # https://github.com/docker/docker/issues/2758
+      bash "start docker #{name}" do
+        code "#{docker_daemon_cmd} >> #{logfile} 2>&1 &"
+        environment 'HTTP_PROXY' => http_proxy,
+                    'HTTPS_PROXY' => https_proxy,
+                    'NO_PROXY' => no_proxy,
+                    'TMPDIR' => tmpdir
+        not_if "ps -ef | grep -v grep | grep #{Shellwords.escape(docker_daemon_cmd)}"
+        action :run
+      end
+
+      create_docker_wait_ready
+
+      execute 'docker-wait-ready' do
+        command "#{libexec_dir}/#{docker_name}-wait-ready"
+      end
+    end
+
+    action :stop do
+      execute "stop docker #{name}" do
+        command "kill `cat #{pidfile}` && while [ -e #{pidfile} ]; do sleep 1; done"
+        timeout 10
+        only_if "#{docker_cmd} ps | head -n 1 | grep ^CONTAINER"
+      end
+    end
+
+    action :restart do
+      action_stop
+      action_start
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_service_manager_systemd.rb b/cookbooks/docker-2.15.13/libraries/docker_service_manager_systemd.rb
new file mode 100644
index 0000000000000000000000000000000000000000..f26994caa2bb0cec14ad50e2fafc2a2d562977e9
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_service_manager_systemd.rb
@@ -0,0 +1,116 @@
+module DockerCookbook
+  class DockerServiceManagerSystemd < DockerServiceBase
+    resource_name :docker_service_manager_systemd
+
+    provides :docker_service_manager, platform: 'fedora'
+
+    provides :docker_service_manager, platform: %w(redhat centos scientific oracle) do |node| # ~FC005
+      node['platform_version'].to_f >= 7.0
+    end
+
+    provides :docker_service_manager, platform: 'debian' do |node|
+      node['platform_version'].to_f >= 8.0
+    end
+
+    provides :docker_service_manager, platform: 'ubuntu' do |node|
+      node['platform_version'].to_f >= 15.04
+    end
+
+    action :start do
+      create_docker_wait_ready
+
+      # stock systemd unit file
+      template "/lib/systemd/system/#{docker_name}.service" do
+        source 'systemd/docker.service.erb'
+        owner 'root'
+        group 'root'
+        mode '0644'
+        variables(
+          docker_name: docker_name,
+          docker_socket: connect_socket.sub(%r{unix://|fd://}, ''),
+          docker_mount_flags: mount_flags
+        )
+        cookbook 'docker'
+        action :create
+        not_if { docker_name == 'default' && ::File.exist?('/lib/systemd/system/docker.service') }
+      end
+
+      # stock systemd socket file
+      template "/lib/systemd/system/#{docker_name}.socket" do
+        source 'systemd/docker.socket.erb'
+        owner 'root'
+        group 'root'
+        mode '0644'
+        variables(
+          docker_name: docker_name,
+          docker_socket: connect_socket.sub(%r{unix://|fd://}, '')
+        )
+        cookbook 'docker'
+        action :create
+        not_if { docker_name == 'default' && ::File.exist?('/lib/systemd/system/docker.socket') }
+      end
+
+      template "/etc/systemd/system/#{docker_name}.service" do
+        source 'systemd/docker.service-override.erb'
+        owner 'root'
+        group 'root'
+        mode '0644'
+        variables(
+          config: new_resource,
+          docker_daemon_cmd: docker_daemon_cmd,
+          systemd_args: systemd_args,
+          docker_wait_ready: "#{libexec_dir}/#{docker_name}-wait-ready",
+          docker_mount_flags: mount_flags
+        )
+        cookbook 'docker'
+        notifies :run, 'execute[systemctl daemon-reload]', :immediately
+        action :create
+      end
+
+      # this overrides the main systemd socket
+      template "/etc/systemd/system/#{docker_name}.socket" do
+        source 'systemd/docker.socket-override.erb'
+        owner 'root'
+        group 'root'
+        mode '0644'
+        variables(
+          config: new_resource,
+          docker_name: docker_name,
+          docker_socket: connect_socket.sub(%r{unix://|fd://}, '')
+        )
+        cookbook 'docker'
+        notifies :run, 'execute[systemctl daemon-reload]', :immediately
+        action :create
+      end
+
+      # avoid 'Unit file changed on disk' warning
+      execute 'systemctl daemon-reload' do
+        command '/bin/systemctl daemon-reload'
+        action :nothing
+      end
+
+      # service management resource
+      service docker_name do
+        provider Chef::Provider::Service::Systemd
+        supports status: true
+        action [:enable, :start]
+        only_if { ::File.exist?("/lib/systemd/system/#{docker_name}.service") }
+      end
+    end
+
+    action :stop do
+      # service management resource
+      service docker_name do
+        provider Chef::Provider::Service::Systemd
+        supports status: true
+        action [:disable, :stop]
+        only_if { ::File.exist?("/lib/systemd/system/#{docker_name}.service") }
+      end
+    end
+
+    action :restart do
+      action_stop
+      action_start
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_service_manager_sysvinit_debian.rb b/cookbooks/docker-2.15.13/libraries/docker_service_manager_sysvinit_debian.rb
new file mode 100644
index 0000000000000000000000000000000000000000..12e0b0cc56334ea4fdeb598ee91684d86764b7f9
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_service_manager_sysvinit_debian.rb
@@ -0,0 +1,87 @@
+module DockerCookbook
+  class DockerServiceManagerSysvinitDebian < DockerServiceBase
+    resource_name :docker_service_manager_sysvinit_debian
+
+    provides :docker_service_manager, platform: 'debian' do |node|
+      node['platform_version'].to_f < 8.0
+    end
+
+    provides :docker_service_manager, platform: 'ubuntu' do |node|
+      node['platform_version'].to_f < 12.04
+    end
+
+    provides :docker_service_manager_sysvinit, platform: 'debian' do |node|
+      node['platform_version'].to_f < 8.0
+    end
+
+    provides :docker_service_manager_sysvinit, platform: 'ubuntu' do |node|
+      node['platform_version'].to_f < 12.04
+    end
+
+    action :start do
+      create_docker_wait_ready
+      create_init
+      create_service
+    end
+
+    action :stop do
+      create_init
+      s = create_service
+      s.action :stop
+    end
+
+    action :restart do
+      action_stop
+      action_start
+    end
+
+    action_class.class_eval do
+      def create_init
+        execute 'groupadd docker' do
+          not_if 'getent group docker'
+          action :run
+        end
+
+        link dockerd_bin_link do
+          to dockerd_bin
+          link_type :hard
+          action :create
+        end
+
+        template "/etc/init.d/#{docker_name}" do
+          source 'sysvinit/docker-debian.erb'
+          owner 'root'
+          group 'root'
+          mode '0755'
+          variables(
+            docker_name: docker_name,
+            dockerd_bin_link: dockerd_bin_link,
+            docker_daemon_arg: docker_daemon_arg,
+            docker_wait_ready: "#{libexec_dir}/#{docker_name}-wait-ready"
+          )
+          cookbook 'docker'
+          action :create
+        end
+
+        template "/etc/default/#{docker_name}" do
+          source 'default/docker.erb'
+          variables(
+            config: new_resource,
+            dockerd_bin_link: dockerd_bin_link,
+            docker_daemon_opts: docker_daemon_opts.join(' ')
+          )
+          cookbook 'docker'
+          action :create
+        end
+      end
+
+      def create_service
+        service docker_name do
+          provider Chef::Provider::Service::Init::Debian
+          supports restart: true, status: true
+          action [:enable, :start]
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_service_manager_sysvinit_rhel.rb b/cookbooks/docker-2.15.13/libraries/docker_service_manager_sysvinit_rhel.rb
new file mode 100644
index 0000000000000000000000000000000000000000..6480d0476d2b3c5e3dd2ac854cdc929511038b23
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_service_manager_sysvinit_rhel.rb
@@ -0,0 +1,81 @@
+module DockerCookbook
+  class DockerServiceManagerSysvinitRhel < DockerServiceBase
+    resource_name :docker_service_manager_sysvinit_rhel
+
+    provides :docker_service_manager, platform: 'amazon'
+    provides :docker_service_manager, platform: 'suse'
+    provides :docker_service_manager, platform: %w(redhat centos scientific oracle) do |node| # ~FC005
+      node['platform_version'].to_f <= 7.0
+    end
+
+    provides :docker_service_manager_sysvinit, platform: 'amazon'
+    provides :docker_service_manager_sysvinit, platform: 'suse'
+    provides :docker_service_manager_sysvinit, platform: %w(redhat centos scientific oracle) do |node| # ~FC005
+      node['platform_version'].to_f <= 7.0
+    end
+
+    action :start do
+      create_docker_wait_ready
+      create_init
+      create_service
+    end
+
+    action :stop do
+      create_init
+      s = create_service
+      s.action :stop
+    end
+
+    action :restart do
+      action_stop
+      action_start
+    end
+
+    action_class.class_eval do
+      def create_init
+        execute 'groupadd docker' do
+          not_if 'getent group docker'
+          action :run
+        end
+
+        link dockerd_bin_link do
+          to dockerd_bin
+          link_type :hard
+          action :create
+        end
+
+        template "/etc/init.d/#{docker_name}" do
+          source 'sysvinit/docker-rhel.erb'
+          owner 'root'
+          group 'root'
+          mode '0755'
+          variables(
+            docker_name: docker_name,
+            dockerd_bin_link: dockerd_bin_link,
+            docker_daemon_cmd: docker_daemon_cmd,
+            docker_wait_ready: "#{libexec_dir}/#{docker_name}-wait-ready"
+          )
+          cookbook 'docker'
+          action :create
+        end
+
+        template "/etc/sysconfig/#{docker_name}" do
+          source 'sysconfig/docker.erb'
+          variables(
+            config: new_resource,
+            docker_daemon_opts: docker_daemon_opts.join(' ')
+          )
+          cookbook 'docker'
+          action :create
+        end
+      end
+
+      def create_service
+        service docker_name do
+          supports restart: true, status: true
+          action [:enable, :start]
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_service_manager_upstart.rb b/cookbooks/docker-2.15.13/libraries/docker_service_manager_upstart.rb
new file mode 100644
index 0000000000000000000000000000000000000000..72754883d72eaf106fcf89e698a7bb5aa3f0bbdb
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_service_manager_upstart.rb
@@ -0,0 +1,64 @@
+module DockerCookbook
+  class DockerServiceManagerUpstart < DockerServiceBase
+    resource_name :docker_service_manager_upstart
+
+    provides :docker_service_manager, platform: 'ubuntu'
+    provides :docker_service_manager, platform: 'linuxmint'
+
+    action :start do
+      create_docker_wait_ready
+
+      link dockerd_bin_link do
+        to dockerd_bin
+        link_type :hard
+        action :create
+      end
+
+      template "/etc/init/#{docker_name}.conf" do
+        source 'upstart/docker.conf.erb'
+        owner 'root'
+        group 'root'
+        mode '0644'
+        variables(
+          docker_name: docker_name,
+          dockerd_bin_link: dockerd_bin_link,
+          docker_daemon_arg: docker_daemon_arg,
+          docker_raw_logs_arg: docker_raw_logs_arg,
+          docker_wait_ready: "#{libexec_dir}/#{docker_name}-wait-ready"
+        )
+        cookbook 'docker'
+        action :create
+      end
+
+      template "/etc/default/#{docker_name}" do
+        source 'default/docker.erb'
+        variables(
+          config: new_resource,
+          dockerd_bin_link: dockerd_bin_link,
+          docker_daemon_opts: docker_daemon_opts.join(' ')
+        )
+        cookbook 'docker'
+        action :create
+      end
+
+      service docker_name do
+        provider Chef::Provider::Service::Upstart
+        supports status: true
+        action :start
+      end
+    end
+
+    action :stop do
+      service docker_name do
+        provider Chef::Provider::Service::Upstart
+        supports status: true
+        action :stop
+      end
+    end
+
+    action :restart do
+      action_stop
+      action_start
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_tag.rb b/cookbooks/docker-2.15.13/libraries/docker_tag.rb
new file mode 100644
index 0000000000000000000000000000000000000000..e9fc47156a7fbf4e7672dce84e8b39d5b66a5813
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_tag.rb
@@ -0,0 +1,27 @@
+module DockerCookbook
+  class DockerTag < DockerBase
+    resource_name :docker_tag
+
+    property :target_repo, String, name_property: true
+    property :target_tag, String
+    property :to_repo, String
+    property :to_tag, String
+    property :force, Boolean, default: false
+
+    #########
+    # Actions
+    #########
+
+    action :tag do
+      return if force == false && Docker::Image.exist?("#{to_repo}:#{to_tag}")
+      begin
+        converge_by "update #{target_repo}:#{target_tag} to #{to_repo}:#{to_tag}" do
+          i = Docker::Image.get("#{target_repo}:#{target_tag}")
+          i.tag('repo' => to_repo, 'tag' => to_tag, 'force' => force)
+        end
+      rescue Docker::Error => e
+        raise e.message
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/docker_volume.rb b/cookbooks/docker-2.15.13/libraries/docker_volume.rb
new file mode 100644
index 0000000000000000000000000000000000000000..9bc735f3e7ec7c9206b9a522f128df3ee9f43f6e
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/docker_volume.rb
@@ -0,0 +1,33 @@
+module DockerCookbook
+  class DockerVolume < DockerBase
+    require 'docker'
+
+    resource_name :docker_volume
+
+    property :driver, String, desired_state: false
+    property :host, [String, nil], default: lazy { default_host }, desired_state: false
+    property :opts, [String, Array, nil], desired_state: false
+    property :volume, Docker::Volume, desired_state: false
+    property :volume_name, String, name_property: true
+
+    load_current_value do
+      begin
+        with_retries { volume Docker::Volume.get(volume_name, connection) }
+      rescue Docker::Error::NotFoundError
+        current_value_does_not_exist!
+      end
+    end
+
+    action :create do
+      converge_by "creating volume #{volume_name}" do
+        Docker::Volume.create(volume_name, {}, connection)
+      end if volume.nil?
+    end
+
+    action :remove do
+      converge_by "removing volume #{volume_name}" do
+        volume.remove
+      end unless volume.nil?
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/helpers_auth.rb b/cookbooks/docker-2.15.13/libraries/helpers_auth.rb
new file mode 100644
index 0000000000000000000000000000000000000000..40b3654079299504da1795a4e30c5139b303bf5f
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/helpers_auth.rb
@@ -0,0 +1,10 @@
+module DockerCookbook
+  module DockerHelpers
+    module Authentication
+      # https://github.com/docker/docker/blob/4fcb9ac40ce33c4d6e08d5669af6be5e076e2574/registry/auth.go#L231
+      def parse_registry_host(val)
+        val.sub(%r{https?://}, '').split('/').first
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/helpers_base.rb b/cookbooks/docker-2.15.13/libraries/helpers_base.rb
new file mode 100644
index 0000000000000000000000000000000000000000..43b8f30f31a5f4e05097ac7ed36b1921dac9495e
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/helpers_base.rb
@@ -0,0 +1,110 @@
+module DockerCookbook
+  module DockerHelpers
+    module Base
+      require 'shellwords'
+
+      # Misc
+      def to_snake_case(name)
+        # ExposedPorts -> _exposed_ports
+        name = name.gsub(/[A-Z]/) { |x| "_#{x.downcase}" }
+        # _exposed_ports -> exposed_ports
+        name = name[1..-1] if name.start_with?('_')
+        name
+      end
+
+      ##########
+      # coersion
+      ##########
+
+      def coerce_labels(v)
+        case v
+        when Hash, nil
+          v
+        else
+          Array(v).each_with_object({}) do |label, h|
+            parts = label.split(':')
+            h[parts[0]] = parts[1]
+          end
+        end
+      end
+
+      def coerce_shell_command(v)
+        return nil if v.nil?
+        return DockerBase::ShellCommandString.new(
+          ::Shellwords.join(v)
+        ) if v.is_a?(Array)
+        DockerBase::ShellCommandString.new(v)
+      end
+
+      ################
+      # Helper methods
+      ################
+
+      def api_version
+        @api_version ||= Docker.version(connection)['ApiVersion']
+      end
+
+      def connection
+        @connection ||= begin
+                          opts = {}
+                          opts[:read_timeout] = read_timeout if read_timeout
+                          opts[:write_timeout] = write_timeout if write_timeout
+
+                          if host =~ /^tcp:/
+                            opts[:scheme] = 'https' if tls || !tls_verify.nil?
+                            opts[:ssl_ca_file] = tls_ca_cert if tls_ca_cert
+                            opts[:client_cert] = tls_client_cert if tls_client_cert
+                            opts[:client_key] = tls_client_key if tls_client_key
+                          end
+                          Docker::Connection.new(host || Docker.url, opts)
+                        end
+      end
+
+      def with_retries(&_block)
+        tries = api_retries
+        begin
+          yield
+          # Only catch errors that can be fixed with retries.
+        rescue Docker::Error::ServerError, # 404
+               Docker::Error::UnexpectedResponseError, # 400
+               Docker::Error::TimeoutError,
+               Docker::Error::IOError
+          tries -= 1
+          retry if tries > 0
+          raise
+        end
+      end
+
+      def call_action(_action)
+        new_resource.run_action
+      end
+
+      def default_host
+        return nil unless ENV['DOCKER_HOST']
+        ENV['DOCKER_HOST']
+      end
+
+      def default_tls
+        return nil unless ENV['DOCKER_TLS']
+        ENV['DOCKER_TLS']
+      end
+
+      def default_tls_verify
+        return nil unless ENV['DOCKER_TLS_VERIFY']
+        ENV['DOCKER_TLS_VERIFY']
+      end
+
+      def default_tls_cert_path(v)
+        return nil unless ENV['DOCKER_CERT_PATH']
+        case v
+        when 'ca'
+          "#{ENV['DOCKER_CERT_PATH']}/ca.pem"
+        when 'cert'
+          "#{ENV['DOCKER_CERT_PATH']}/cert.pem"
+        when 'key'
+          "#{ENV['DOCKER_CERT_PATH']}/key.pem"
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/helpers_container.rb b/cookbooks/docker-2.15.13/libraries/helpers_container.rb
new file mode 100644
index 0000000000000000000000000000000000000000..02f046bf95ffd315d2e437b4544afe3379b98ae8
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/helpers_container.rb
@@ -0,0 +1,300 @@
+module DockerCookbook
+  module DockerHelpers
+    module Container
+      def coerce_links(v)
+        case v
+        when DockerBase::UnorderedArray, nil
+          v
+        else
+          return nil if v.empty?
+          # Parse docker input of /source:/container_name/dest into source:dest
+          DockerBase::UnorderedArray.new(Array(v)).map! do |link|
+            if link =~ %r{^/(?<source>.+):/#{name}/(?<dest>.+)}
+              link = "#{Regexp.last_match[:source]}:#{Regexp.last_match[:dest]}"
+            end
+            link
+          end
+        end
+      end
+
+      def to_bytes(v)
+        n, u = v.split(/(?=[a-z])/)
+        case u
+        when 'b', 'B', nil
+          return n.to_i
+        when 'k', 'K'
+          return n.to_i * 1024**1
+        when 'm', 'M'
+          return n.to_i * 1024**2
+        when 'g', 'G'
+          return n.to_i * 1024**3
+        when 't', 'T'
+          return n.to_i * 1024**4
+        when 'p', 'P'
+          return n.to_i * 1024**5
+        when 'e', 'E'
+          return n.to_i * 1024**6
+        when 'z', 'Z'
+          return n.to_i * 1024**7
+        when 'y', 'Y'
+          return n.to_i * 1024**8
+        end
+      end
+
+      def coerce_kernel_memory(v)
+        case v
+        when Integer, nil
+          v
+        else
+          to_bytes(v)
+        end
+      end
+
+      def coerce_memory(v)
+        case v
+        when Integer, nil
+          v
+        else
+          to_bytes(v)
+        end
+      end
+
+      def coerce_memory_swap(v)
+        case v
+        when Integer, nil
+          v
+        else
+          to_bytes(v)
+        end
+      end
+
+      def coerce_memory_swappiness(v)
+        v.to_i
+      end
+
+      def coerce_memory_reservation(v)
+        case v
+        when Integer, nil
+          v
+        else
+          to_bytes(v)
+        end
+      end
+
+      def coerce_log_opts(v)
+        case v
+        when Hash, nil
+          v
+        else
+          Array(v).each_with_object({}) do |log_opt, memo|
+            key, value = log_opt.split('=', 2)
+            memo[key] = value
+          end
+        end
+      end
+
+      def coerce_ulimits(v)
+        return v if v.nil?
+        Array(v).map do |u|
+          u = "#{u['Name']}=#{u['Soft']}:#{u['Hard']}" if u.is_a?(Hash)
+          u
+        end
+      end
+
+      def coerce_volumes(v)
+        case v
+        when DockerBase::PartialHash, nil
+          v
+        when Hash
+          DockerBase::PartialHash[v]
+        else
+          b = []
+          v = Array(v).to_a # in case v.is_A?(Chef::Node::ImmutableArray)
+          v.delete_if do |x|
+            parts = x.split(':')
+            b << x if parts.length > 1
+          end
+          b = nil if b.empty?
+          volumes_binds b
+          return DockerBase::PartialHash.new if v.empty?
+          v.each_with_object(DockerBase::PartialHash.new) { |volume, h| h[volume] = {} }
+        end
+      end
+
+      def state
+        # Always return the latest state, see #510
+        return Docker::Container.get(container_name, {}, connection).info['State']
+      rescue
+        return {}
+      end
+
+      def wait_running_state(v)
+        tries = running_wait_time
+        tries.times do
+          return if state['Running'] == v
+          sleep 1
+        end
+        return if state['Running'] == v
+
+        # Container failed to reach correct state: Throw an error
+        desired_state_str = v ? 'running' : 'not running'
+        raise Docker::Error::TimeoutError, "Container #{container_name} failed to change to #{desired_state_str} state after #{tries} seconds"
+      end
+
+      def port(v = nil)
+        return @port if v.nil?
+        exposed_ports coerce_exposed_ports(v)
+        port_bindings coerce_port_bindings(v)
+        @port = v
+        @port
+      end
+
+      def parse_port(v)
+        parts = v.split(':')
+        case parts.length
+        when 3
+          host_ip = parts[0]
+          host_port = parts[1]
+          container_port = parts[2]
+        when 2
+          host_ip = '0.0.0.0'
+          host_port = parts[0]
+          container_port = parts[1]
+        when 1
+          host_ip = ''
+          host_port = ''
+          container_port = parts[0]
+        end
+        port_range, protocol = container_port.split('/')
+        if port_range.include?('-')
+          port_range = container_port.split('-')
+          port_range.map!(&:to_i)
+          Chef::Log.fatal("FATAL: Invalid port range! #{container_port}") if port_range[0] > port_range[1]
+          port_range = (port_range[0]..port_range[1]).to_a
+        end
+        # qualify the port-binding protocol even when it is implicitly tcp #427.
+        protocol = 'tcp' if protocol.nil?
+        Array(port_range).map do |port|
+          {
+            'host_ip' => host_ip,
+            'host_port' => host_port,
+            'container_port' => "#{port}/#{protocol}",
+          }
+        end
+      end
+
+      def coerce_exposed_ports(v)
+        case v
+        when Hash, nil
+          v
+        else
+          x = Array(v).map { |a| parse_port(a) }
+          x.flatten!
+          x.each_with_object({}) do |y, h|
+            h[y['container_port']] = {}
+          end
+        end
+      end
+
+      def coerce_port_bindings(v)
+        case v
+        when Hash, nil
+          v
+        else
+          x = Array(v).map { |a| parse_port(a) }
+          x.flatten!
+          x.each_with_object({}) do |y, h|
+            h[y['container_port']] = [] unless h[y['container_port']]
+            h[y['container_port']] << {
+              'HostIp' => y['host_ip'],
+              'HostPort' => y['host_port'],
+            }
+          end
+        end
+      end
+
+      # log_driver and log_opts really handle this
+      def log_config(value = Chef::NOT_PASSED)
+        if value != Chef::NOT_PASSED
+          @log_config = value
+          log_driver value['Type']
+          log_opts value['Config']
+        end
+        return @log_config if defined?(@log_config)
+        def_logcfg = {}
+        def_logcfg['Type'] = log_driver if property_is_set?(:log_driver)
+        def_logcfg['Config'] = log_opts if property_is_set?(:log_opts)
+        def_logcfg = nil if def_logcfg.empty?
+        def_logcfg
+      end
+
+      # TODO: test image property in serverspec and kitchen, not only in rspec
+      # for full specs of image parsing, see spec/helpers_container_spec.rb
+      #
+      # If you say:    `repo 'blah'`
+      # Image will be: `blah:latest`
+      #
+      # If you say:    `repo 'blah'; tag '3.1'`
+      # Image will be: `blah:3.1`
+      #
+      # If you say:    `image 'blah'`
+      # Repo will be:  `blah`
+      # Tag will be:   `latest`
+      #
+      # If you say:    `image 'blah:3.1'`
+      # Repo will be:  `blah`
+      # Tag will be:   `3.1`
+      #
+      # If you say:    `image 'repo/blah'`
+      # Repo will be:  `repo/blah`
+      # Tag will be:   `latest`
+      #
+      # If you say:    `image 'repo/blah:3.1'`
+      # Repo will be:  `repo/blah`
+      # Tag will be:   `3.1`
+      #
+      # If you say:    `image 'repo:1337/blah'`
+      # Repo will be:  `repo:1337/blah`
+      # Tag will be:   `latest'
+      #
+      # If you say:    `image 'repo:1337/blah:3.1'`
+      # Repo will be:  `repo:1337/blah`
+      # Tag will be:   `3.1`
+      #
+      def image(image = nil)
+        if image
+          if image.include?('/')
+            # pathological case, a ':' may be present which starts the 'port'
+            # part of the image name and not a tag. example: 'host:1337/blah'
+            # fortunately, tags are only found in the 'basename' part of image
+            # so we can split on '/' and rebuild once the tag has been parsed.
+            dirname, _, basename = image.rpartition('/')
+            r, t = basename.split(':', 2)
+            r = [dirname, r].join('/')
+          else
+            # normal case, the ':' starts the tag part
+            r, t = image.split(':', 2)
+          end
+          repo r
+          tag t if t
+        end
+        "#{repo}:#{tag}"
+      end
+
+      def to_shellwords(command)
+        return nil if command.nil?
+        Shellwords.shellwords(command)
+      end
+
+      def ulimits_to_hash
+        return nil if ulimits.nil?
+        ulimits.map do |u|
+          name = u.split('=')[0]
+          soft = u.split('=')[1].split(':')[0]
+          hard = u.split('=')[1].split(':')[1]
+          { 'Name' => name, 'Soft' => soft.to_i, 'Hard' => hard.to_i }
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/helpers_image.rb b/cookbooks/docker-2.15.13/libraries/helpers_image.rb
new file mode 100644
index 0000000000000000000000000000000000000000..f08614c95fa0869385ac7a65d92f6256c3a350d1
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/helpers_image.rb
@@ -0,0 +1,104 @@
+module DockerCookbook
+  module DockerHelpers
+    module Image
+      ################
+      # Helper methods
+      ################
+
+      def build_from_directory
+        i = Docker::Image.build_from_dir(
+          source,
+          {
+            'nocache' => nocache,
+            'rm' => rm,
+          },
+          connection
+        )
+        i.tag('repo' => repo, 'tag' => tag, 'force' => force)
+      end
+
+      def build_from_dockerfile
+        i = Docker::Image.build(
+          IO.read(source),
+          {
+            'nocache' => nocache,
+            'rm' => rm,
+          },
+          connection
+        )
+        i.tag('repo' => repo, 'tag' => tag, 'force' => force)
+      end
+
+      def build_from_tar
+        i = Docker::Image.build_from_tar(
+          ::File.open(source, 'r'),
+          {
+            'nocache' => nocache,
+            'rm' => rm,
+          },
+          connection
+        )
+        i.tag('repo' => repo, 'tag' => tag, 'force' => force)
+      end
+
+      def build_image
+        if ::File.directory?(source)
+          build_from_directory
+        elsif ::File.extname(source) == '.tar'
+          build_from_tar
+        else
+          build_from_dockerfile
+        end
+      end
+
+      def image_identifier
+        "#{repo}:#{tag}"
+      end
+
+      def import_image
+        with_retries do
+          i = Docker::Image.import(source, {}, connection)
+          i.tag('repo' => repo, 'tag' => tag, 'force' => force)
+        end
+      end
+
+      def pull_image
+        with_retries do
+          registry_host = parse_registry_host(repo)
+          creds = node.run_state['docker_auth'] && node.run_state['docker_auth'][registry_host] || (node.run_state['docker_auth'] ||= {})['index.docker.io']
+
+          original_image = Docker::Image.get(image_identifier, {}, connection) if Docker::Image.exist?(image_identifier, {}, connection)
+          new_image = Docker::Image.create({ 'fromImage' => image_identifier }, creds, connection)
+
+          !(original_image && original_image.id.start_with?(new_image.id))
+        end
+      end
+
+      def push_image
+        with_retries do
+          i = Docker::Image.get(image_identifier, {}, connection)
+          i.push
+        end
+      end
+
+      def remove_image
+        with_retries do
+          i = Docker::Image.get(image_identifier, {}, connection)
+          i.remove(force: force, noprune: noprune)
+        end
+      end
+
+      def save_image
+        with_retries do
+          Docker::Image.save(repo, destination, connection)
+        end
+      end
+
+      def load_image
+        with_retries do
+          Docker::Image.load(source, {}, connection)
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/helpers_installation_binary.rb b/cookbooks/docker-2.15.13/libraries/helpers_installation_binary.rb
new file mode 100644
index 0000000000000000000000000000000000000000..625c8dcd20e5cea93cb954fb2f45bb5d8de82919
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/helpers_installation_binary.rb
@@ -0,0 +1,66 @@
+module DockerCookbook
+  module DockerHelpers
+    module InstallationBinary
+      def docker_bin
+        '/usr/bin/docker'
+      end
+
+      def docker_kernel
+        node['kernel']['name']
+      end
+
+      def docker_arch
+        node['kernel']['machine']
+      end
+
+      def default_source
+        "https://get.docker.com/builds/#{docker_kernel}/#{docker_arch}/docker-#{version}"
+      end
+
+      def default_checksum
+        case docker_kernel
+        when 'Darwin'
+          case version
+          when '1.6.0' then '9e960e925561b4ec2b81f52b6151cd129739c1f4fba91ce94bdc0333d7d98c38'
+          when '1.6.2' then 'f29b8b2185c291bd276f7cdac45a674f904e964426d5b969fda7b8ef6b8ab557'
+          when '1.7.0' then '1c8ee59249fdde401afebc9a079cb75d7674f03d2491789fb45c88020a8c5783'
+          when '1.7.1' then 'b8209b4382d0b4292c756dd055c12e5efacec2055d5900ac91efc8e81d317cf9'
+          when '1.8.1' then '0f5db35127cf14b57614ad7513296be600ddaa79182d8d118d095cb90c721e3a'
+          when '1.8.2' then 'cef593612752e5a50bd075931956075a534b293b7002892072397c3093fe11a6'
+          when '1.8.3' then 'b5a63a0e6fb393de8c3543c83433224796c7545901963ff3e3e9a41b1430c9cd'
+          when '1.9.0' then '91a8701e41a479def5371a333657c58c36478602e1f5eb1835457a3880232a2e'
+          when '1.9.1' then '8750ccc2098ec94ef7db110e0016ab02cfa47a1a76f0deb3faa50335b5ec0df9'
+          when '1.10.0' then 'f8dc0c7ef2a7efbe0e062017822066e55a40c752b9e92a636359f59ef562d79f'
+          when '1.10.1' then 'de4057057acd259ec38b5244a40d806993e2ca219e9869ace133fad0e09cedf2'
+          when '1.10.2' then '29249598587ad8f8597235bbeb11a11888fffb977b8089ea80b5ac5267ba9f2e'
+          end
+        when 'Linux'
+          case version
+          when '1.6.0' then '526fbd15dc6bcf2f24f99959d998d080136e290bbb017624a5a3821b63916ae8'
+          when '1.6.2' then 'e131b2d78d9f9e51b0e5ca8df632ac0a1d48bcba92036d0c839e371d6cf960ec'
+          when '1.7.1' then '4d535a62882f2123fb9545a5d140a6a2ccc7bfc7a3c0ec5361d33e498e4876d5'
+          when '1.8.1' then '843f90f5001e87d639df82441342e6d4c53886c65f72a5cc4765a7ba3ad4fc57'
+          when '1.8.2' then '97a3f5924b0b831a310efa8bf0a4c91956cd6387c4a8667d27e2b2dd3da67e4d'
+          when '1.8.3' then 'f024bc65c45a3778cf07213d26016075e8172de8f6e4b5702bedde06c241650f'
+          when '1.9.0' then '5d46455aac507e231fd2a558459779f1994f7151d6cb027efabfa36f568cf017'
+          when '1.9.1' then '52286a92999f003e1129422e78be3e1049f963be1888afc3c9a99d5a9af04666'
+          when '1.10.0' then 'a66b20423b7d849aa8ef448b98b41d18c45a30bf3fe952cc2ba4760600b18087'
+          when '1.10.1' then 'de4057057acd259ec38b5244a40d806993e2ca219e9869ace133fad0e09cedf2'
+          when '1.10.2' then '3fcac4f30e1c1a346c52ba33104175ae4ccbd9b9dbb947f56a0a32c9e401b768'
+          end
+        end
+      end
+
+      def default_version
+        if node['platform'] == 'amazon' ||
+           node['platform'] == 'ubuntu' && node['platform_version'].to_f < 15.04 ||
+           node['platform_family'] == 'rhel' && node['platform_version'].to_i < 7 ||
+           node['platform_family'] == 'debian' && node['platform_version'].to_i <= 7
+          '1.6.2'
+        else
+          '1.10.2'
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/helpers_installation_package.rb b/cookbooks/docker-2.15.13/libraries/helpers_installation_package.rb
new file mode 100644
index 0000000000000000000000000000000000000000..78260c20af8a06d6eeff81e97ae9d9486498aaa1
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/helpers_installation_package.rb
@@ -0,0 +1,124 @@
+module DockerCookbook
+  module DockerHelpers
+    module InstallationPackage
+      def el6?
+        return true if node['platform_family'] == 'rhel' && node['platform_version'].to_i == 6
+        false
+      end
+
+      def el7?
+        return true if node['platform_family'] == 'rhel' && node['platform_version'].to_i == 7
+        false
+      end
+
+      def fedora?
+        return true if node['platform'] == 'fedora'
+        false
+      end
+
+      def wheezy?
+        return true if node['platform'] == 'debian' && node['platform_version'].to_i == 7
+        false
+      end
+
+      def jesse?
+        return true if node['platform'] == 'debian' && node['platform_version'].to_i == 8
+        false
+      end
+
+      def precise?
+        return true if node['platform'] == 'ubuntu' && node['platform_version'] == '12.04'
+        false
+      end
+
+      def trusty?
+        return true if node['platform'] == 'ubuntu' && node['platform_version'] == '14.04'
+        return true if node['platform'] == 'linuxmint' && node['platform_version'] =~ /^17\.[0-9]$/
+        false
+      end
+
+      def vivid?
+        return true if node['platform'] == 'ubuntu' && node['platform_version'] == '15.04'
+        false
+      end
+
+      def wily?
+        return true if node['platform'] == 'ubuntu' && node['platform_version'] == '15.10'
+        false
+      end
+
+      def xenial?
+        return true if node['platform'] == 'ubuntu' && node['platform_version'] == '16.04'
+        false
+      end
+
+      def zesty?
+        return true if node['platform'] == 'ubuntu' && node['platform_version'] == '17.04'
+        false
+      end
+
+      def amazon?
+        return true if node['platform'] == 'amazon'
+        false
+      end
+
+      def debuntu?
+        return true if node['platform_family'] == 'debian'
+        return true if node['platform_family'] == 'ubuntu'
+        false
+      end
+
+      # https://github.com/chef/chef/issues/4103
+      def version_string(v)
+        ubuntu_prefix = if Gem::Version.new(v) > Gem::Version.new('1.12.3')
+                          'ubuntu-'
+                        else
+                          ''
+                        end
+
+        debian_prefix = if Gem::Version.new(v) > Gem::Version.new('1.12.3')
+                          'debian-'
+                        else
+                          ''
+                        end
+
+        edition = if Gem::Version.new(v) > Gem::Version.new('17.03.0')
+                    debuntu? ? '~ce' : '.ce'
+                  else
+                    ''
+                  end
+
+        return "#{v}#{edition}-1.el6" if el6?
+        return "#{v}#{edition}-1.el7.centos" if el7?
+        return "#{v}#{edition}-2.19.amzn1" if amazon?
+        return "#{v}#{edition}-1.fc#{node['platform_version'].to_i}" if fedora?
+        return "#{v}#{edition}-0~#{debian_prefix}wheezy" if wheezy?
+        return "#{v}#{edition}-0~#{debian_prefix}jessie" if jesse?
+        return "#{v}#{edition}-0~#{ubuntu_prefix}precise" if precise?
+        return "#{v}#{edition}-0~#{ubuntu_prefix}trusty" if trusty?
+        return "#{v}#{edition}-0~#{ubuntu_prefix}vivid" if vivid?
+        return "#{v}#{edition}-0~#{ubuntu_prefix}wily" if wily?
+        return "#{v}#{edition}-0~#{ubuntu_prefix}xenial" if xenial?
+        return "#{v}#{edition}-0~#{ubuntu_prefix}zesty" if zesty?
+        v
+      end
+
+      def default_docker_version
+        return '1.7.1' if el6?
+        return '1.9.1' if vivid?
+        return '1.12.6' if amazon?
+        return '17.04.0' if precise?
+        '17.05.0'
+      end
+
+      def default_package_name
+        return 'docker' if amazon?
+        'docker-engine'
+      end
+
+      def docker_bin
+        '/usr/bin/docker'
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/helpers_installation_tarball.rb b/cookbooks/docker-2.15.13/libraries/helpers_installation_tarball.rb
new file mode 100644
index 0000000000000000000000000000000000000000..dd3c27cde95252c884c7b3be18d5361f02d846b0
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/helpers_installation_tarball.rb
@@ -0,0 +1,50 @@
+module DockerCookbook
+  module DockerHelpers
+    module InstallationTarball
+      def docker_bin_prefix
+        '/usr/bin'
+      end
+
+      def docker_bin
+        "#{docker_bin_prefix}/docker"
+      end
+
+      def docker_tarball
+        "#{Chef::Config[:file_cache_path]}/docker-#{version}.tgz"
+      end
+
+      def docker_kernel
+        node['kernel']['name']
+      end
+
+      def docker_arch
+        node['kernel']['machine']
+      end
+
+      def default_source
+        "https://get.docker.com/builds/#{docker_kernel}/#{docker_arch}/docker-#{version}.tgz"
+      end
+
+      def default_checksum
+        case docker_kernel
+        when 'Darwin'
+          case version
+          when '1.11.0' then '25e4f5f37e2e17beb20e5a468674750350824059bdeeca09d6a941bca8fc4f73'
+          when '1.11.1' then '6d35487fbcc7e3f722f3d5f3e5c070a41d87c88e3770f52ae28460a689c40efd'
+          when '1.11.2' then 'f44da1025c355c51ae6e150fcc0672b87a738b9c8ad98e5fa6091502211da19a'
+          end
+        when 'Linux'
+          case version
+          when '1.11.0' then '87331b3b75d32d3de5d507db9a19a24dd30ff9b2eb6a5a9bdfaba954da15e16b'
+          when '1.11.1' then '893e3c6e89c0cd2c5f1e51ea41bc2dd97f5e791fcfa3cee28445df277836339d'
+          when '1.11.2' then '8c2e0c35e3cda11706f54b2d46c2521a6e9026a7b13c7d4b8ae1f3a706fc55e1'
+          end
+        end
+      end
+
+      def default_version
+        '1.11.2'
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/helpers_network.rb b/cookbooks/docker-2.15.13/libraries/helpers_network.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b42ee246baa66b841bb0bb5734cd123e191414d4
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/helpers_network.rb
@@ -0,0 +1,118 @@
+module DockerCookbook
+  module DockerHelpers
+    module Network
+      require 'ipaddr'
+
+      ###################
+      # property coersion
+      ###################
+
+      def coerce_auxiliary_addresses(v)
+        ray = []
+        Array(v).each do |e|
+          case e
+          when String, Array, nil
+            ray += Array(e)
+          when Hash
+            e.each { |key, val| ray << "#{key}=#{val}" }
+          end
+        end
+        ray.length == 1 ? ray[0] : ray
+      end
+
+      def coerce_gateway(v)
+        case v
+        when String
+          v.split('/')[0]
+        when Array
+          ray = Array(v).map { |a| a.split('/')[0] }
+          ray.length == 1 ? ray[0] : ray
+        end
+      end
+
+      def coerce_subnet(v)
+        Array(v).length == 1 ? Array(v)[0] : v
+      end
+
+      def coerce_ip_range(v)
+        Array(v).length == 1 ? Array(v)[0] : v
+      end
+
+      ######
+      # IPAM
+      ######
+
+      def consolidate_ipam(subnets, ranges, gateways, auxaddrs)
+        subnets = Array(subnets)
+        ranges = Array(ranges)
+        gateways = Array(gateways)
+        auxaddrs = Array(auxaddrs)
+        subnets = [] if subnets.empty?
+        ranges = [] if ranges.empty?
+        gateways = [] if gateways.empty?
+        auxaddrs = [] if auxaddrs.empty?
+        if subnets.size < ranges.size || subnets.size < gateways.size
+          raise 'every ip-range or gateway myust have a corresponding subnet'
+        end
+
+        data = {}
+
+        # Check overlapping subnets
+        subnets.each do |s|
+          data.each do |k, _|
+            if subnet_matches(s, k) || subnet_matches(k, s)
+              raise 'multiple overlapping subnet configuration is not supported'
+            end
+          end
+          data[s] = { 'Subnet' => s, 'AuxiliaryAddresses' => {} }
+        end
+
+        ranges.each do |r|
+          match = false
+          subnets.each do |s|
+            ok = subnet_matches(s, r)
+            next unless ok
+            if data[s].fetch('IPRange', '') != ''
+              raise 'cannot configure multiple ranges on the same subnet'
+            end
+            data[s]['IPRange'] = r
+            match = true
+          end
+          raise "no matching subnet for range #{r}" unless match
+        end
+
+        gateways.each do |g|
+          match = false
+          subnets.each do |s|
+            ok = subnet_matches(s, g)
+            next unless ok
+            unless data[s].fetch('Gateway', '').empty?
+              raise "cannot configure multiple gateways (#{g}, #{data[s]['Gateway']}) for the same subnet (#{s})"
+            end
+            data[s]['Gateway'] = g
+            match = true
+          end
+          raise "no matching subnet for gateway #{s}" unless match
+        end
+
+        auxaddrs.each do |aa|
+          key, a = aa.split('=')
+          match = false
+          subnets.each do |s|
+            # require 'pry' ; binding.pry
+            ok = subnet_matches(s, a)
+            next unless ok
+            data[s]['AuxiliaryAddresses'][key] = a
+            match = true
+          end
+          raise "no matching subnet for aux-address #{a}" unless match
+        end
+        data.values
+      end
+
+      def subnet_matches(subnet, data)
+        IPAddr.new(subnet).include?(IPAddr.new(data))
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/helpers_service.rb b/cookbooks/docker-2.15.13/libraries/helpers_service.rb
new file mode 100644
index 0000000000000000000000000000000000000000..029b6cddd99b2c107e8d70105bc7387d0cc30581
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/helpers_service.rb
@@ -0,0 +1,231 @@
+# Constants
+IPV6_ADDR ||= /(
+([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|
+([0-9a-fA-F]{1,4}:){1,7}:|
+([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|
+([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|
+([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|
+([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|
+([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|
+[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|
+:((:[0-9a-fA-F]{1,4}){1,7}|:)|
+fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|
+::(ffff(:0{1,4}){0,1}:){0,1}
+((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}
+(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|
+([0-9a-fA-F]{1,4}:){1,4}:
+((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}
+(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])
+)/
+
+IPV4_ADDR ||= /((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])/
+
+IPV6_CIDR ||= /s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*/
+
+IPV4_CIDR ||= %r{(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))}
+
+module DockerCookbook
+  module DockerHelpers
+    module Service
+      def docker_bin
+        '/usr/bin/docker'
+      end
+
+      def dockerd_bin
+        return '/usr/bin/docker' if Gem::Version.new(docker_major_version) < Gem::Version.new('1.12')
+        '/usr/bin/dockerd'
+      end
+
+      def dockerd_bin_link
+        "/usr/bin/dockerd-#{name}"
+      end
+
+      def docker_name
+        return 'docker' if name == 'default'
+        "docker-#{name}"
+      end
+
+      def installed_docker_version
+        o = shell_out("#{docker_bin} --version")
+        o.stdout.split[2].chomp(',')
+      end
+
+      def connect_host
+        return nil unless host
+        sorted = coerce_host(host).sort do |a, b|
+          c_a = 1 if a =~ /^unix:/
+          c_a = 2 if a =~ /^fd:/
+          c_a = 3 if a =~ %r{^tcp://127.0.0.1:}
+          c_a = 4 if a =~ %r{^tcp://(192\.168|10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.).*:}
+          c_a = 5 if a =~ %r{^tcp://0.0.0.0:}
+          c_a = 6 unless c_a
+          c_b = 1 if b =~ /^unix:/
+          c_b = 2 if b =~ /^fd:/
+          c_b = 3 if b =~ %r{^tcp://127.0.0.1:}
+          c_b = 4 if b =~ %r{^tcp://(192\.168|10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.).*:}
+          c_b = 5 if b =~ %r{^tcp://0.0.0.0:}
+          c_b = 6 unless c_b
+          c_a <=> c_b
+        end
+        if sorted.first =~ %r{^tcp://0.0.0.0:}
+          r = sorted.first.match(%r{(?<proto>.*)://(?<socket>[^:]+):?(?<port>\d+)?})
+          return "tcp://127.0.0.1:#{r['port']}"
+        end
+        sorted.first
+      end
+
+      def connect_socket
+        return "/var/run/#{docker_name}.sock" unless host
+        sorted = coerce_host(host).sort do |a, b|
+          c_a = 1 if a =~ /^unix:/
+          c_a = 2 if a =~ /^fd:/
+          c_a = 3 unless c_a
+          c_b = 1 if b =~ /^unix:/
+          c_b = 2 if b =~ /^fd:/
+          c_b = 3 unless c_b
+          c_a <=> c_b
+        end
+        sorted.first
+      end
+
+      def coerce_host(v)
+        v = v.split if v.is_a?(String)
+        Array(v).each_with_object([]) do |s, r|
+          if s.match(/^unix:/) || s.match(/^tcp:/) || s.match(/^fd:/)
+            r << s
+          else
+            Chef::Log.info("WARNING: docker_service host property #{s} not valid")
+          end
+        end
+      end
+
+      def coerce_daemon_labels(v)
+        Array(v).each_with_object([]) do |label, a|
+          if label =~ /:/
+            parts = label.split(':')
+            a << "#{parts[0]}=\"#{parts[1]}\""
+          elsif label =~ /=/
+            parts = label.split('=')
+            a << "#{parts[0]}=#{parts[1]}"
+          else
+            Chef::Log.info("WARNING: docker_service label #{label} not valid")
+          end
+        end
+      end
+
+      def coerce_insecure_registry(v)
+        case v
+        when Array, nil
+          v
+        else
+          Array(v)
+        end
+      end
+
+      def docker_major_version
+        ray = installed_docker_version.split('.')
+        ray.pop
+        ray.push.join('.')
+      end
+
+      def docker_daemon_arg
+        if Gem::Version.new(docker_major_version) < Gem::Version.new('1.8')
+          '-d'
+        elsif Gem::Version.new(docker_major_version) < Gem::Version.new('1.12')
+          'daemon'
+        else
+          ''
+        end
+      end
+
+      def docker_raw_logs_arg
+        if Gem::Version.new(docker_major_version) < Gem::Version.new('1.11')
+          ''
+        else
+          '--raw-logs'
+        end
+      end
+
+      def docker_daemon_cmd
+        [dockerd_bin, docker_daemon_arg, docker_daemon_opts].join(' ')
+      end
+
+      def docker_cmd
+        [docker_bin, docker_opts].join(' ')
+      end
+
+      def docker_opts
+        opts = []
+        opts << "--host=#{connect_host}" if connect_host
+        if connect_host =~ /^tcp:/
+          opts << "--tls=#{tls}" unless tls.nil?
+          opts << "--tlsverify=#{tls_verify}" unless tls_verify.nil?
+          opts << "--tlscacert=#{tls_ca_cert}" if tls_ca_cert
+          opts << "--tlscert=#{tls_client_cert}" if tls_client_cert
+          opts << "--tlskey=#{tls_client_key}" if tls_client_key
+        end
+        opts
+      end
+
+      def systemd_args
+        opts = ''
+        systemd_opts.each { |systemd_opt| opts << "#{systemd_opt}\n" } if systemd_opts
+        opts
+      end
+
+      def docker_daemon_opts
+        opts = []
+        opts << "--api-cors-header=#{api_cors_header}" if api_cors_header
+        opts << "--bridge=#{bridge}" if bridge
+        opts << "--bip=#{bip}" if bip
+        opts << '--debug' if debug
+        opts << "--cluster-advertise=#{cluster_advertise}" if cluster_advertise
+        opts << "--cluster-store=#{cluster_store}" if cluster_store
+        cluster_store_opts.each { |store_opt| opts << "--cluster-store-opt=#{store_opt}" } if cluster_store_opts
+        default_ulimit.each { |u| opts << "--default-ulimit=#{u}" } if default_ulimit
+        dns.each { |dns| opts << "--dns=#{dns}" } if dns
+        dns_search.each { |dns| opts << "--dns-search=#{dns}" } if dns_search
+        opts << "--exec-driver=#{exec_driver}" if exec_driver
+        exec_opts.each { |exec_opt| opts << "--exec-opt=#{exec_opt}" } if exec_opts
+        opts << "--fixed-cidr=#{fixed_cidr}" if fixed_cidr
+        opts << "--fixed-cidr-v6=#{fixed_cidr_v6}" if fixed_cidr_v6
+        opts << "--group=#{group}" if group
+        opts << "--graph=#{graph}" if graph
+        host.each { |h| opts << "-H #{h}" } if host
+        opts << "--icc=#{icc}" unless icc.nil?
+        insecure_registry.each { |i| opts << "--insecure-registry=#{i}" } if insecure_registry
+        opts << "--ip=#{ip}" if ip
+        opts << "--ip-forward=#{ip_forward}" unless ip_forward.nil?
+        opts << "--ip-masq=#{ip_masq}" unless ip_masq.nil?
+        opts << "--iptables=#{iptables}" unless iptables.nil?
+        opts << "--ipv6=#{ipv6}" unless ipv6.nil?
+        opts << "--log-level=#{log_level}" if log_level
+        labels.each { |l| opts << "--label=#{l}" } if labels
+        opts << "--log-driver=#{log_driver}" if log_driver
+        log_opts.each { |log_opt| opts << "--log-opt #{log_opt}" } if log_opts
+        opts << "--mtu=#{mtu}" if mtu
+        opts << "--pidfile=#{pidfile}" if pidfile
+        opts << "--registry-mirror=#{registry_mirror}" if registry_mirror
+        storage_driver.each { |s| opts << "--storage-driver=#{s}" } if storage_driver
+        opts << "--selinux-enabled=#{selinux_enabled}" unless selinux_enabled.nil?
+        storage_opts.each { |storage_opt| opts << "--storage-opt=#{storage_opt}" } if storage_opts
+        opts << "--tls=#{tls}" unless tls.nil?
+        opts << "--tlsverify=#{tls_verify}" unless tls_verify.nil?
+        opts << "--tlscacert=#{tls_ca_cert}" if tls_ca_cert
+        opts << "--tlscert=#{tls_server_cert}" if tls_server_cert
+        opts << "--tlskey=#{tls_server_key}" if tls_server_key
+        opts << "--userland-proxy=#{userland_proxy}" unless userland_proxy.nil?
+        opts << "--disable-legacy-registry=#{disable_legacy_registry}" unless disable_legacy_registry.nil?
+        opts << "--userns-remap=#{userns_remap}" if userns_remap
+        opts << misc_opts if misc_opts
+        opts
+      end
+
+      def docker_running?
+        o = shell_out("#{docker_cmd} ps | head -n 1 | grep ^CONTAINER")
+        return true if o.stdout =~ /CONTAINER/
+        false
+      end
+    end
+  end
+end
diff --git a/cookbooks/docker-2.15.13/libraries/matchers.rb b/cookbooks/docker-2.15.13/libraries/matchers.rb
new file mode 100644
index 0000000000000000000000000000000000000000..87cb23d95cba6f2ad8c68e748540a15d4a71cb80
--- /dev/null
+++ b/cookbooks/docker-2.15.13/libraries/matchers.rb
@@ -0,0 +1,339 @@
+if defined?(ChefSpec)
+  #####################
+  # docker_installation
+  #####################
+  ChefSpec.define_matcher :docker_installation
+
+  def create_docker_installation(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_installation, :create, resource_name)
+  end
+
+  def delete_docker_installation(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_installation, :delete, resource_name)
+  end
+
+  def create_docker_installation_binary(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_installation_binary, :create, resource_name)
+  end
+
+  def delete_docker_installation_binary(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_installation_binary, :delete, resource_name)
+  end
+
+  def create_docker_installation_script(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_installation_script, :create, resource_name)
+  end
+
+  def delete_docker_installation_script(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_installation_script, :delete, resource_name)
+  end
+
+  def create_docker_installation_package(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_installation_package, :create, resource_name)
+  end
+
+  def delete_docker_installation_package(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_installation_package, :delete, resource_name)
+  end
+
+  def create_docker_installation_tarball(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_installation_tarball, :create, resource_name)
+  end
+
+  def delete_docker_installation_tarball(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_installation_tarball, :delete, resource_name)
+  end
+
+  ################
+  # docker_service
+  ################
+  ChefSpec.define_matcher :docker_service
+
+  def create_docker_service(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service, :create, resource_name)
+  end
+
+  def delete_docker_service(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service, :delete, resource_name)
+  end
+
+  def start_docker_service(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service, :start, resource_name)
+  end
+
+  def stop_docker_service(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service, :stop, resource_name)
+  end
+
+  def restart_docker_service(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service, :restart, resource_name)
+  end
+
+  ########################
+  # docker_service_manager
+  ########################
+  ChefSpec.define_matcher :docker_service_manager
+
+  def create_docker_service_manager(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager, :create, resource_name)
+  end
+
+  def delete_docker_service_manager(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager, :delete, resource_name)
+  end
+
+  def start_docker_service_manager(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager, :start, resource_name)
+  end
+
+  def stop_docker_service_manager(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager, :stop, resource_name)
+  end
+
+  def restart_docker_service_manager(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager, :restart, resource_name)
+  end
+
+  def create_docker_service_manager_execute(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_execute, :create, resource_name)
+  end
+
+  def delete_docker_service_manager_execute(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_execute, :delete, resource_name)
+  end
+
+  def start_docker_service_manager_execute(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_execute, :start, resource_name)
+  end
+
+  def stop_docker_service_manager_execute(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_execute, :stop, resource_name)
+  end
+
+  def restart_docker_service_manager_execute(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_execute, :restart, resource_name)
+  end
+
+  def create_docker_service_manager_sysvinit(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_sysvinit, :create, resource_name)
+  end
+
+  def delete_docker_service_manager_sysvinit(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_sysvinit, :delete, resource_name)
+  end
+
+  def start_docker_service_manager_sysvinit(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_sysvinit, :start, resource_name)
+  end
+
+  def stop_docker_service_manager_sysvinit(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_sysvinit, :stop, resource_name)
+  end
+
+  def restart_docker_service_manager_sysvinit(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_sysvinit, :restart, resource_name)
+  end
+
+  def create_docker_service_manager_upstart(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_upstart, :create, resource_name)
+  end
+
+  def delete_docker_service_manager_upstart(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_upstart, :delete, resource_name)
+  end
+
+  def start_docker_service_manager_upstart(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_upstart, :start, resource_name)
+  end
+
+  def stop_docker_service_manager_upstart(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_upstart, :stop, resource_name)
+  end
+
+  def restart_docker_service_manager_upstart(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_upstart, :restart, resource_name)
+  end
+
+  def create_docker_service_manager_systemd(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_systemd, :create, resource_name)
+  end
+
+  def delete_docker_service_manager_systemd(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_systemd, :delete, resource_name)
+  end
+
+  def start_docker_service_manager_systemd(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_systemd, :start, resource_name)
+  end
+
+  def stop_docker_service_manager_systemd(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_systemd, :stop, resource_name)
+  end
+
+  def restart_docker_service_manager_systemd(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_service_manager_systemd, :restart, resource_name)
+  end
+
+  ##############
+  # docker_image
+  ##############
+  ChefSpec.define_matcher :docker_image
+
+  def build_docker_image(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_image, :build, resource_name)
+  end
+
+  def build_if_missing_docker_image(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_image, :build_if_missing, resource_name)
+  end
+
+  def pull_docker_image(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_image, :pull, resource_name)
+  end
+
+  def pull_if_missing_docker_image(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_image, :pull_if_missing, resource_name)
+  end
+
+  def import_docker_image(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_image, :import, resource_name)
+  end
+
+  def push_docker_image(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_image, :push, resource_name)
+  end
+
+  def remove_docker_image(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_image, :remove, resource_name)
+  end
+
+  def save_docker_image(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_image, :save, resource_name)
+  end
+
+  def load_docker_image(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_image, :load, resource_name)
+  end
+
+  ##################
+  # docker_container
+  ##################
+  ChefSpec.define_matcher :docker_container
+
+  def create_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :create, resource_name)
+  end
+
+  def start_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :start, resource_name)
+  end
+
+  def stop_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :stop, resource_name)
+  end
+
+  def kill_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :kill, resource_name)
+  end
+
+  def run_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :run, resource_name)
+  end
+
+  def run_if_missing_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :run_if_missing, resource_name)
+  end
+
+  def pause_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :pause, resource_name)
+  end
+
+  def unpause_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :unpause, resource_name)
+  end
+
+  def restart_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :restart, resource_name)
+  end
+
+  def redeploy_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :redeploy, resource_name)
+  end
+
+  def delete_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :delete, resource_name)
+  end
+
+  def remove_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :remove, resource_name)
+  end
+
+  def commit_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :commit, resource_name)
+  end
+
+  def export_docker_container(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_container, :export, resource_name)
+  end
+
+  ##############
+  # docker_tag
+  ##############
+  ChefSpec.define_matcher :docker_tag
+
+  def tag_docker_tag(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_tag, :tag, resource_name)
+  end
+
+  #################
+  # docker_registry
+  #################
+  ChefSpec.define_matcher :docker_registry
+
+  def login_docker_registry(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_registry, :login, resource_name)
+  end
+
+  ################
+  # docker_network
+  ################
+  ChefSpec.define_matcher :docker_network
+
+  def create_docker_network(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_network, :create, resource_name)
+  end
+
+  def delete_docker_network(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_network, :delete, resource_name)
+  end
+
+  def connect_docker_network(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_network, :connect, resource_name)
+  end
+
+  def disconnect_docker_network(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_network, :disconnect, resource_name)
+  end
+
+  ###############
+  # docker_volume
+  ###############
+  ChefSpec.define_matcher :docker_volume
+
+  def create_docker_volume(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_volume, :create, resource_name)
+  end
+
+  def remove_docker_volume(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_volume, :remove, resource_name)
+  end
+
+  ###############
+  # docker_exec
+  ###############
+  ChefSpec.define_matcher :docker_exec
+
+  def run_docker_exec(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:docker_exec, :run, resource_name)
+  end
+end
diff --git a/cookbooks/docker-2.15.13/metadata.json b/cookbooks/docker-2.15.13/metadata.json
new file mode 100644
index 0000000000000000000000000000000000000000..617289a1d9a59bd8f9f3879235fea0067762a1ee
--- /dev/null
+++ b/cookbooks/docker-2.15.13/metadata.json
@@ -0,0 +1 @@
+{"name":"docker","version":"2.15.13","description":"Provides docker_service, docker_image, and docker_container resources","long_description":"","maintainer":"Cookbook Engineering Team","maintainer_email":"cookbooks@chef.io","license":"Apache-2.0","platforms":{"amazon":">= 0.0.0","centos":">= 0.0.0","scientific":">= 0.0.0","oracle":">= 0.0.0","debian":">= 0.0.0","fedora":">= 0.0.0","redhat":">= 0.0.0","ubuntu":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/docker","issues_url":"https://github.com/chef-cookbooks/docker/issues","chef_version":[[">= 12.5"]],"ohai_version":[]}
\ No newline at end of file
diff --git a/cookbooks/docker-2.15.13/templates/default/default/docker-wait-ready.erb b/cookbooks/docker-2.15.13/templates/default/default/docker-wait-ready.erb
new file mode 100644
index 0000000000000000000000000000000000000000..3531221579cab302dbf40120cc8f7bac566ea732
--- /dev/null
+++ b/cookbooks/docker-2.15.13/templates/default/default/docker-wait-ready.erb
@@ -0,0 +1,10 @@
+#!/usr/bin/env bash
+i=0
+while [ $i -lt <%= @service_timeout * 2 %> ]; do
+  <%= @docker_cmd %> ps | head -n 1 | grep ^CONTAINER > /dev/null 2>&1
+  [ $? -eq 0 ] && break
+  ((i++))
+  sleep 0.5
+done
+[ $i -eq <%= @service_timeout * 2 %> ] && exit 1
+exit 0
diff --git a/cookbooks/docker-2.15.13/templates/default/default/docker.erb b/cookbooks/docker-2.15.13/templates/default/default/docker.erb
new file mode 100644
index 0000000000000000000000000000000000000000..d798cec0b5df59013aa0a1db8288134b46fb9ae0
--- /dev/null
+++ b/cookbooks/docker-2.15.13/templates/default/default/docker.erb
@@ -0,0 +1,24 @@
+# Docker Upstart and SysVinit configuration file
+
+# Customize location of Docker binary (especially for development testing).
+DOCKER="<%= @dockerd_bin_link %>"
+
+# Use DOCKER_OPTS to modify the daemon startup options.
+DOCKER_OPTS="<%= @docker_daemon_opts %>"
+
+# If you need Docker to use an HTTP proxy, it can also be specified here.
+<% if @config.http_proxy %>
+export http_proxy="<%= @config.http_proxy %>"
+<% end %>
+<% if @config.https_proxy %>
+export https_proxy="<%= @config.https_proxy %>"
+<% end %>
+
+<% if @config.no_proxy %>
+export no_proxy="<%= @config.no_proxy %>"
+<% end %>
+
+# This is also a handy place to tweak where Docker's temporary files go.
+<% if @config.tmpdir %>
+export TMPDIR="<%= @config.tmpdir  %>"
+<% end %>
diff --git a/cookbooks/docker-2.15.13/templates/default/sysconfig/docker.erb b/cookbooks/docker-2.15.13/templates/default/sysconfig/docker.erb
new file mode 100755
index 0000000000000000000000000000000000000000..b1322407db9c0b6edff67aa372337df3482126e1
--- /dev/null
+++ b/cookbooks/docker-2.15.13/templates/default/sysconfig/docker.erb
@@ -0,0 +1,19 @@
+# /etc/sysconfig/docker
+#
+# Other arguments to pass to the docker daemon process
+# These will be parsed by the sysv initscript and appended
+# to the arguments list passed to docker
+
+other_args="<%= @docker_daemon_opts %>"
+
+# If you need Docker to use an HTTP proxy, it can also be specified here.
+<% if @config.http_proxy %>
+export http_proxy="<%= @config.http_proxy %>"
+<% end %>
+<% if @config.https_proxy %>
+export https_proxy="<%= @config.https_proxy %>"
+<% end %>
+
+<% if @config.no_proxy %>
+export no_proxy="<%= @config.no_proxy %>"
+<% end %>
diff --git a/cookbooks/docker-2.15.13/templates/default/systemd/docker.service-override.erb b/cookbooks/docker-2.15.13/templates/default/systemd/docker.service-override.erb
new file mode 100644
index 0000000000000000000000000000000000000000..a04044812d80f1296356d926b1f73396e581ded6
--- /dev/null
+++ b/cookbooks/docker-2.15.13/templates/default/systemd/docker.service-override.erb
@@ -0,0 +1,45 @@
+[Unit]
+Description=Docker Application Container Engine
+Documentation=https://docs.docker.com
+After=network-online.target <%= @docker_name %>.socket firewalld.service
+Wants=network-online.target
+Requires=<%= @docker_name %>.socket
+
+[Service]
+Type=notify
+<% if @config.http_proxy %>
+Environment="HTTP_PROXY=<%= @config.http_proxy %>"
+<% end %>
+<% if @config.https_proxy %>
+Environment="HTTPS_PROXY=<%= @config.https_proxy %>"
+<% end %>
+<% if @config.no_proxy %>
+Environment="NO_PROXY=<%= @config.no_proxy %>"
+<% end %>
+<% if @config.tmpdir %>
+Environment="TMPDIR=<%= @config.tmpdir %>"
+<% end %>
+<% if @config.ipv4_forward %>
+ExecStartPre=/sbin/sysctl -w net.ipv4.ip_forward=1
+<% end %>
+<% if @config.ipv6_forward %>
+ExecStartPre=/sbin/sysctl -w net.ipv6.conf.all.forwarding=1
+<% end %>
+ExecStart=<%= @docker_daemon_cmd %>
+ExecStartPost=<%= @docker_wait_ready %>
+ExecReload=/bin/kill -s HUP $MAINPID
+MountFlags=<%= @docker_mount_flags %>
+LimitNOFILE=1048576
+LimitNPROC=infinity
+LimitCORE=infinity
+TasksMax=infinity
+TimeoutStartSec=0
+Delegate=yes
+KillMode=process
+Restart=always
+StartLimitBurst=3
+StartLimitInterval=60s
+<%= @systemd_args  %>
+
+[Install]
+WantedBy=multi-user.target
diff --git a/cookbooks/docker-2.15.13/templates/default/systemd/docker.service.erb b/cookbooks/docker-2.15.13/templates/default/systemd/docker.service.erb
new file mode 100644
index 0000000000000000000000000000000000000000..8c6e33c739082c7c1fb9fc7df10bcf474b28cb16
--- /dev/null
+++ b/cookbooks/docker-2.15.13/templates/default/systemd/docker.service.erb
@@ -0,0 +1,25 @@
+[Unit]
+Description=Docker Application Container Engine
+Documentation=https://docs.docker.com
+After=network-online.target <%= @docker_name %>.socket firewalld.service
+Wants=network-online.target
+Requires=<%= @docker_name %>.socket
+
+[Service]
+Type=notify
+ExecStart=/usr/bin/docker daemon -H fd://
+ExecReload=/bin/kill -s HUP $MAINPID
+MountFlags=<%= @docker_mount_flags %>
+LimitNOFILE=1048576
+LimitNPROC=infinity
+LimitCORE=infinity
+TasksMax=infinity
+TimeoutStartSec=0
+Delegate=yes
+KillMode=process
+Restart=on-failure
+StartLimitBurst=3
+StartLimitInterval=60s
+
+[Install]
+WantedBy=multi-user.target
diff --git a/cookbooks/docker-2.15.13/templates/default/systemd/docker.socket-override.erb b/cookbooks/docker-2.15.13/templates/default/systemd/docker.socket-override.erb
new file mode 100644
index 0000000000000000000000000000000000000000..7e6b70506f8dc8e0a60fa789c4b774bf4f88fb5b
--- /dev/null
+++ b/cookbooks/docker-2.15.13/templates/default/systemd/docker.socket-override.erb
@@ -0,0 +1,12 @@
+[Unit]
+Description=Docker Socket for the API
+PartOf=<%= @docker_name %>.service
+
+[Socket]
+ListenStream=<%= @docker_socket %>
+SocketMode=0660
+SocketUser=root
+SocketGroup=<%= @config.group %>
+
+[Install]
+WantedBy=sockets.target
diff --git a/cookbooks/docker-2.15.13/templates/default/systemd/docker.socket.erb b/cookbooks/docker-2.15.13/templates/default/systemd/docker.socket.erb
new file mode 100644
index 0000000000000000000000000000000000000000..22b452d9bb96863c0cd762beb25aee00924e72d7
--- /dev/null
+++ b/cookbooks/docker-2.15.13/templates/default/systemd/docker.socket.erb
@@ -0,0 +1,12 @@
+[Unit]
+Description=Docker Socket for the API
+PartOf=<%= @docker_name %>.service
+
+[Socket]
+ListenStream=<%= @docker_socket %>
+SocketMode=0660
+SocketUser=root
+SocketGroup=docker
+
+[Install]
+WantedBy=sockets.target
diff --git a/cookbooks/docker-2.15.13/templates/default/systemd/tmpfiles.d.conf.erb b/cookbooks/docker-2.15.13/templates/default/systemd/tmpfiles.d.conf.erb
new file mode 100644
index 0000000000000000000000000000000000000000..a77e3fd8b1881793d79c3d92f974f4a65b981da2
--- /dev/null
+++ b/cookbooks/docker-2.15.13/templates/default/systemd/tmpfiles.d.conf.erb
@@ -0,0 +1 @@
+d /var/run/docker 0755 root <%= @config.group || 'root' %> -
diff --git a/cookbooks/docker-2.15.13/templates/default/sysvinit/docker-debian.erb b/cookbooks/docker-2.15.13/templates/default/sysvinit/docker-debian.erb
new file mode 100644
index 0000000000000000000000000000000000000000..bd1ffbf5b25f78febe472ca9b95195b59bd0da32
--- /dev/null
+++ b/cookbooks/docker-2.15.13/templates/default/sysvinit/docker-debian.erb
@@ -0,0 +1,149 @@
+#!/bin/sh
+set -e
+
+### BEGIN INIT INFO
+# Provides:           <%= @docker_name %>
+# Required-Start:     $syslog $remote_fs
+# Required-Stop:      $syslog $remote_fs
+# Should-Start:       cgroupfs-mount cgroup-lite
+# Should-Stop:        cgroupfs-mount cgroup-lite
+# Default-Start:      2 3 4 5
+# Default-Stop:       0 1 6
+# Short-Description:  Create lightweight, portable, self-sufficient containers.
+# Description:
+#  Docker is an open-source project to easily create lightweight, portable,
+#  self-sufficient containers from any application. The same container that a
+#  developer builds and tests on a laptop can run at scale, in production, on
+#  VMs, bare metal, OpenStack clusters, public clouds and more.
+### END INIT INFO
+
+export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin
+
+BASE=<%= @docker_name %>
+
+# modify these in /etc/default/$BASE (/etc/default/docker)
+DOCKER=<%= @dockerd_bin_link %>
+# This is the pid file managed by docker itself
+DOCKER_PIDFILE=/var/run/$BASE.pid
+# This is the pid file created/managed by start-stop-daemon
+DOCKER_SSD_PIDFILE=/var/run/$BASE-ssd.pid
+DOCKER_LOGFILE=/var/log/$BASE.log
+DOCKER_DESC="Docker"
+
+# Get lsb functions
+. /lib/lsb/init-functions
+
+if [ -f /etc/default/$BASE ]; then
+  . /etc/default/$BASE
+fi
+
+# Check docker is present
+if [ ! -x $DOCKER ]; then
+  log_failure_msg "$DOCKER not present or not executable"
+  exit 1
+fi
+
+check_init() {
+   # see also init_is_upstart in /lib/lsb/init-functions (which isn't available in Ubuntu 12.04, or we'd use it directly)
+   if [ -x /sbin/initctl ] && /sbin/initctl version 2>/dev/null | grep -q upstart; then
+                log_failure_msg "$DOCKER_DESC is managed via upstart, try using service $BASE $1"
+                exit 1
+         fi
+}
+
+fail_unless_root() {
+  if [ "$(id -u)" != '0' ]; then
+    log_failure_msg "$DOCKER_DESC must be run as root"
+    exit 1
+  fi
+}
+
+cgroupfs_mount() {
+  # see also https://github.com/tianon/cgroupfs-mount/blob/master/cgroupfs-mount
+  if grep -v '^#' /etc/fstab | grep -q cgroup \
+    || [ ! -e /proc/cgroups ] \
+    || [ ! -d /sys/fs/cgroup ]; then
+    return
+  fi
+  if ! mountpoint -q /sys/fs/cgroup; then
+    mount -t tmpfs -o uid=0,gid=0,mode=0755 cgroup /sys/fs/cgroup
+  fi
+  (
+    cd /sys/fs/cgroup
+    for sys in $(awk '!/^#/ { if ($4 == 1) print $1 }' /proc/cgroups); do
+      mkdir -p $sys
+      if ! mountpoint -q $sys; then
+        if ! mount -n -t cgroup -o $sys cgroup $sys; then
+          rmdir $sys || true
+        fi
+      fi
+    done
+  )
+}
+
+case "$1" in
+  start)
+    check_init
+
+    fail_unless_root
+
+    cgroupfs_mount
+
+    touch "$DOCKER_LOGFILE"
+    chgrp docker "$DOCKER_LOGFILE"
+
+    ulimit -n 1048576
+    if [ "$BASH" ]; then
+      ulimit -u 1048576
+    else
+      ulimit -p 1048576
+    fi
+
+    log_begin_msg "Starting $DOCKER_DESC: $BASE"
+    start-stop-daemon --start --background \
+                      --no-close \
+                      --exec "$DOCKER" \
+                      --pidfile "$DOCKER_SSD_PIDFILE" \
+                      --make-pidfile \
+                      -- \
+                        <%= @docker_daemon_arg %> -p "$DOCKER_PID_FILE" \
+                        $DOCKER_OPTS \
+                        >> "$DOCKER_LOGFILE" 2>&1
+    <%= @docker_wait_ready %>
+    log_end_msg $?
+    ;;
+
+  stop)
+    check_init
+    fail_unless_root
+    log_begin_msg "Stopping $DOCKER_DESC: $BASE"
+    start-stop-daemon --stop --pidfile "$DOCKER_SSD_PIDFILE" --retry 10
+    log_end_msg $?
+    ;;
+
+  restart)
+    check_init
+    fail_unless_root
+    docker_pid=`cat "$DOCKER_SSD_PIDFILE" 2>/dev/null`
+    [ -n "$docker_pid" ] \
+      && ps -p $docker_pid > /dev/null 2>&1 \
+      && $0 stop
+    $0 start
+    ;;
+
+  force-reload)
+    check_init
+    fail_unless_root
+    $0 restart
+    ;;
+
+  status)
+    check_init
+    status_of_proc -p "$DOCKER_SSD_PIDFILE" "$DOCKER" "$DOCKER_DESC"
+    ;;
+
+  *)
+    echo "Usage: service docker {start|stop|restart|status}"
+    exit 1
+    ;;
+esac
diff --git a/cookbooks/docker-2.15.13/templates/default/sysvinit/docker-rhel.erb b/cookbooks/docker-2.15.13/templates/default/sysvinit/docker-rhel.erb
new file mode 100644
index 0000000000000000000000000000000000000000..98e758f0552b92b36cdbb4805217d1ae1d99f0cc
--- /dev/null
+++ b/cookbooks/docker-2.15.13/templates/default/sysvinit/docker-rhel.erb
@@ -0,0 +1,133 @@
+#!/bin/sh
+#
+#       /etc/rc.d/init.d/<%= @docker_name %>
+#
+#       Daemon for docker.com
+#
+# chkconfig:   2345 95 95
+# description: Daemon for docker.com
+
+### BEGIN INIT INFO
+# Provides:       docker
+# Required-Start: $network cgconfig
+# Required-Stop:
+# Should-Start:
+# Should-Stop:
+# Default-Start: 2 3 4 5
+# Default-Stop:  0 1 6
+# Short-Description: start and stop docker
+# Description: Daemon for docker.com
+### END INIT INFO
+
+# Source function library.
+. /etc/rc.d/init.d/functions
+
+prog="<%= @dockerd_bin_link %>"
+instance=<%= @docker_name %>
+unshare=/usr/bin/unshare
+exec="$prog"
+pidfile="/var/run/$instance.pid"
+lockfile="/var/lock/subsys/$instance"
+logfile="/var/log/$instance"
+
+[ -e /etc/sysconfig/$instance ] && . /etc/sysconfig/$instance
+
+prestart() {
+    service cgconfig status > /dev/null
+
+    if [[ $? != 0 ]]; then
+        service cgconfig start
+    fi
+
+}
+
+start() {
+    [ -x $exec ] || exit 5
+
+    check_for_cleanup
+
+    if ! [ -f $pidfile ]; then
+        prestart
+        printf "Starting $prog:\t"
+        echo "\n$(date)\n" >> $logfile
+        "$unshare" -m -- <%= @docker_daemon_cmd %> &>> $logfile &
+        <%= @docker_wait_ready %>
+        [ $? -eq 0 ] && success || failure
+        echo
+    else
+        failure
+        echo
+        printf "$pidfile still exists...\n"
+        exit 7
+    fi
+}
+
+stop() {
+    echo -n $"Stopping $prog: "
+    killproc -p $pidfile -d 300 $prog
+    retval=$?
+    echo
+    [ $retval -eq 0 ] && rm -f $lockfile
+    return $retval
+}
+
+restart() {
+    stop
+    start
+}
+
+reload() {
+    restart
+}
+
+force_reload() {
+    restart
+}
+
+rh_status() {
+    status -p $pidfile $prog
+}
+
+rh_status_q() {
+    rh_status >/dev/null 2>&1
+}
+
+
+check_for_cleanup() {
+    if [ -f ${pidfile} ]; then
+        /bin/ps -fp $(cat ${pidfile}) > /dev/null || rm ${pidfile}
+    fi
+}
+
+case "$1" in
+    start)
+        rh_status_q && exit 0
+        $1
+        ;;
+    stop)
+        rh_status_q || exit 0
+        $1
+        ;;
+    restart)
+        $1
+        ;;
+    reload)
+        rh_status_q || exit 7
+        $1
+        ;;
+    force-reload)
+        force_reload
+        ;;
+    status)
+        rh_status
+        ;;
+    condrestart|try-restart)
+        rh_status_q || exit 0
+        restart
+        ;;
+    *)
+        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
+        exit 2
+esac
+
+exit $?
diff --git a/cookbooks/docker-2.15.13/templates/default/upstart/docker.conf.erb b/cookbooks/docker-2.15.13/templates/default/upstart/docker.conf.erb
new file mode 100644
index 0000000000000000000000000000000000000000..02abe3d3945c0942812a7e89f5eea4f5eeedc046
--- /dev/null
+++ b/cookbooks/docker-2.15.13/templates/default/upstart/docker.conf.erb
@@ -0,0 +1,57 @@
+description "Docker daemon"
+
+start on (filesystem and net-device-up IFACE!=lo)
+stop on runlevel [!2345]
+limit nofile 524288 1048576
+limit nproc 524288 1048576
+
+respawn
+
+kill timeout 20
+
+pre-start script
+    # see also https://github.com/tianon/cgroupfs-mount/blob/master/cgroupfs-mount
+    if grep -v '^#' /etc/fstab | grep -q cgroup \
+        || [ ! -e /proc/cgroups ] \
+        || [ ! -d /sys/fs/cgroup ]; then
+        exit 0
+    fi
+    if ! mountpoint -q /sys/fs/cgroup; then
+        mount -t tmpfs -o uid=0,gid=0,mode=0755 cgroup /sys/fs/cgroup
+    fi
+    (
+        cd /sys/fs/cgroup
+        for sys in $(awk '!/^#/ { if ($4 == 1) print $1 }' /proc/cgroups); do
+            mkdir -p $sys
+            if ! mountpoint -q $sys; then
+                if ! mount -n -t cgroup -o $sys cgroup $sys; then
+                    rmdir $sys || true
+                fi
+            fi
+        done
+    )
+end script
+
+script
+    # modify these in /etc/default/$UPSTART_JOB (/etc/default/docker)
+    DOCKER=<%= @dockerd_bin_link %>
+    DOCKER_OPTS=
+    if [ -f /etc/default/$UPSTART_JOB ]; then
+        . /etc/default/$UPSTART_JOB
+    fi
+    exec "$DOCKER" <%= @docker_daemon_arg %> $DOCKER_OPTS <%= @docker_raw_logs_arg %>
+end script
+
+post-start script
+  DOCKER_OPTS=
+  if [ -f /etc/default/$UPSTART_JOB ]; then
+    . /etc/default/$UPSTART_JOB
+  fi
+  <%= @docker_wait_ready %>
+  if [ $? -eq 0 ]; then
+    echo "<%= @docker_socket %> is up"
+  else
+    echo "<%= @docker_socket %> failed to come start"
+    exit 1
+  fi
+end script
diff --git a/cookbooks/greeting/.delivery/build_cookbook/.kitchen.yml b/cookbooks/greeting/.delivery/build_cookbook/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..775a7d607753cf12625df4865c8da117189303de
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/.kitchen.yml
@@ -0,0 +1,21 @@
+---
+driver:
+  name: vagrant
+  synced_folders:
+    - [<%= File.join(ENV['PWD'], '..', '..')%>, '/tmp/repo-data']
+
+provisioner:
+  name: chef_zero
+  encrypted_data_bag_secret_key_path: 'secrets/fakey-mcfakerton'
+  data_bags_path: './data_bags'
+  product_name: chefdk
+
+platforms:
+  - name: ubuntu-16.04
+  - name: centos-7.3
+
+suites:
+  - name: default
+    run_list:
+      - recipe[test]
+    attributes:
diff --git a/cookbooks/greeting/.delivery/build_cookbook/Berksfile b/cookbooks/greeting/.delivery/build_cookbook/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..61dab723b78f5f07a4a04767cca81aaf363fba45
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/Berksfile
@@ -0,0 +1,7 @@
+source 'https://supermarket.chef.io'
+
+metadata
+
+group :delivery do
+  cookbook 'test', path: './test/fixtures/cookbooks/test'
+end
diff --git a/cookbooks/greeting/.delivery/build_cookbook/LICENSE b/cookbooks/greeting/.delivery/build_cookbook/LICENSE
new file mode 100644
index 0000000000000000000000000000000000000000..d31c097cd765797dae86c191c2ed6548bc4f8ea6
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/LICENSE
@@ -0,0 +1,3 @@
+Copyright 2017 The Authors
+
+All rights reserved, do not redistribute.
diff --git a/cookbooks/greeting/.delivery/build_cookbook/README.md b/cookbooks/greeting/.delivery/build_cookbook/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..297af5a63e2feab2b6617f3576a3807bc8e240d1
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/README.md
@@ -0,0 +1,146 @@
+# build_cookbook
+
+A build cookbook for running the parent project through Chef Delivery
+
+This build cookbook should be customized to suit the needs of the parent project. Using this cookbook can be done outside of Chef Delivery, too. If the parent project is a Chef cookbook, we've detected that and "wrapped" [delivery-truck](https://github.com/chef-cookbooks/delivery-truck). That means it is a dependency, and each of its pipeline phase recipes is included in the appropriate phase recipes in this cookbook. If the parent project is not a cookbook, it's left as an exercise to the reader to customize the recipes as needed for each phase in the pipeline.
+
+## .delivery/config.json
+
+In the parent directory to this build_cookbook, the `config.json` can be modified as necessary. For example, phases can be skipped, publishing information can be added, and so on. Refer to customer support or the Chef Delivery documentation for assistance on what options are available for this configuration.
+
+## Test Kitchen - Local Verify Testing
+
+This cookbook also has a `.kitchen.yml` which can be used to create local build nodes with Test Kitchen to perform the verification phases, `unit`, `syntax`, and `lint`. When running `kitchen converge`, the instances will be set up like Chef Delivery "build nodes" with the [delivery_build cookbook](https://github.com/chef-cookbooks/delivery_build). The reason for this is to make sure that the same exact kind of nodes are used by this build cookbook are run on the local workstation as would run Delivery. It will run `delivery job verify PHASE` for the parent project.
+
+Modify the `.kitchen.yml` if necessary to change the platforms or other configuration to run the verify phases. After making changes in the parent project, `cd` into this directory (`.delivery/build_cookbook`), and run:
+
+```
+kitchen test
+```
+
+## Recipes
+
+Each of the recipes in this build_cookbook are run in the named phase during the Chef Delivery pipeline. The `unit`, `syntax`, and `lint` recipes are additionally run when using Test Kitchen for local testing as noted in the above section.
+
+## Making Changes - Cookbook Example
+
+When making changes in the parent project (that which lives in `../..` from this directory), or in the recipes in this build cookbook, there is a bespoke workflow for Chef Delivery. As an example, we'll discuss a Chef Cookbook as the parent.
+
+First, create a new branch for the changes.
+
+```
+git checkout -b testing-build-cookbook
+```
+
+Next, increment the version in the metadata.rb. This should be in the _parent_, not in this, the build_cookbook. If this is not done, the verify phase will fail.
+
+```
+% git diff
+<SNIP>
+-version '0.1.0'
++version '0.1.1'
+```
+
+The change we'll use for an example is to install the `zsh` package. Write a failing ChefSpec in the cookbook project's `spec/unit/recipes/default_spec.rb`.
+
+```ruby
+require 'spec_helper'
+
+describe 'godzilla::default' do
+  context 'When all attributes are default, on Ubuntu 16.04' do
+    let(:chef_run) do
+      runner = ChefSpec::ServerRunner.new(platform: 'ubuntu', version: '16.04')
+      runner.converge(described_recipe)
+    end
+
+    it 'installs zsh' do
+      expect(chef_run).to install_package('zsh')
+    end
+  end
+end
+```
+
+Commit the local changes as work in progress. The `delivery job` expects to use a clean git repository.
+
+```
+git add ../..
+git commit -m 'WIP: Testing changes'
+```
+
+From _this_ directory (`.delivery/build_cookbook`, relative to the parent cookbook project), run
+
+```
+cd .delivery/build_cookbook
+kitchen converge
+```
+
+This will take some time at first, because the VMs need to be created, Chef installed, the Delivery CLI installed, etc. Later runs will be faster until they are destroyed. It will also fail on the first VM, as expected, because we wrote the test first. Now edit the parent cookbook project's default recipe to install `zsh`.
+
+```
+cd ../../
+$EDITOR/recipes/default.rb
+```
+
+It should look like this:
+
+```
+package 'zsh'
+```
+
+Create another commit.
+
+```
+git add .
+git commit -m 'WIP: Install zsh in default recipe'
+```
+
+Now rerun kitchen from the build_cookbook.
+
+```
+cd .delivery/build_cookbook
+kitchen converge
+```
+
+This will take awhile because it will now pass on the first VM, and then create the second VM. We should have warned you this was a good time for a coffee break.
+
+```
+Recipe: test::default
+
+- execute HOME=/home/vagrant delivery job verify unit --server localhost --ent test --org kitchen
+  * execute[HOME=/home/vagrant delivery job verify lint --server localhost --ent test --org kitchen] action run
+    - execute HOME=/home/vagrant delivery job verify lint --server localhost --ent test --org kitchen
+
+    - execute HOME=/home/vagrant delivery job verify syntax --server localhost --ent test --org kitchen
+
+Running handlers:
+Running handlers complete
+Chef Client finished, 3/32 resources updated in 54.665445968 seconds
+Finished converging <default-centos-71> (1m26.83s).
+```
+
+Victory is ours! Our verify phase passed on the build nodes.
+
+We are ready to run this through our Delivery pipeline. Simply run `delivery review` on the local system from the parent project, and it will open a browser window up to the change we just added.
+
+```
+cd ../..
+delivery review
+```
+
+## FAQ
+
+### Why don't I just run rspec and foodcritic/rubocop on my local system?
+
+An objection to the Test Kitchen approach is that it is much faster to run the unit, lint, and syntax commands for the project on the local system. That is totally true, and also totally valid. Do that for the really fast feedback loop. However, the dance we do with Test Kitchen brings a much higher degree of confidence in the changes we're making, that everything will run on the build nodes in Chef Delivery. We strongly encourage this approach before actually pushing the changes to Delivery.
+
+### Why do I have to make a commit every time?
+
+When running `delivery job`, it expects to merge the commit for the changeset against the clean master branch. If we don't save our progress by making a commit, our local changes aren't run through `delivery job` in the Test Kitchen build instances. We can always perform an interactive rebase, and modify the original changeset message in Delivery with `delivery review --edit`. The latter won't modify the git commits, only the changeset in Delivery.
+
+### What do I do next?
+
+Make changes in the cookbook project as required for organizational goals and needs. Modify the `build_cookbook` as necessary for the pipeline phases that the cookbook should go through.
+
+### What if I get stuck?
+
+Contact Chef Support, or your Chef Customer Success team and they will help you get unstuck.
diff --git a/cookbooks/greeting/.delivery/build_cookbook/chefignore b/cookbooks/greeting/.delivery/build_cookbook/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/cookbooks/greeting/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json b/cookbooks/greeting/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
new file mode 100644
index 0000000000000000000000000000000000000000..af375ea862bf1f1dd7690ebd71e5c1cedc6d70ff
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
@@ -0,0 +1 @@
+{"id": "delivery_builder_keys"}
\ No newline at end of file
diff --git a/cookbooks/greeting/.delivery/build_cookbook/metadata.rb b/cookbooks/greeting/.delivery/build_cookbook/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..d9b56212aaa865b11ac7fc206d6e986fb65d284d
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/metadata.rb
@@ -0,0 +1,8 @@
+name 'build_cookbook'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'all_rights'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+depends 'delivery-truck'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/recipes/default.rb b/cookbooks/greeting/.delivery/build_cookbook/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b2746b56b1e55c70e2c97e0af0d57ee087d94e9a
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/recipes/default.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::default'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/recipes/deploy.rb b/cookbooks/greeting/.delivery/build_cookbook/recipes/deploy.rb
new file mode 100644
index 0000000000000000000000000000000000000000..9a61010dcda0604510d6dcafc9bc6db2877f1d8c
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/recipes/deploy.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: deploy
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::deploy'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/recipes/functional.rb b/cookbooks/greeting/.delivery/build_cookbook/recipes/functional.rb
new file mode 100644
index 0000000000000000000000000000000000000000..cae646df925c8c63d1c7c000314aff74c9923636
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/recipes/functional.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: functional
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::functional'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/recipes/lint.rb b/cookbooks/greeting/.delivery/build_cookbook/recipes/lint.rb
new file mode 100644
index 0000000000000000000000000000000000000000..40aee0c5b4de883a34713d9ea8651228e7a429aa
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/recipes/lint.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: lint
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::lint'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/recipes/provision.rb b/cookbooks/greeting/.delivery/build_cookbook/recipes/provision.rb
new file mode 100644
index 0000000000000000000000000000000000000000..57d0a78cea413ac381326cfb669b4a6754d4a0a8
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/recipes/provision.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: provision
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::provision'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/recipes/publish.rb b/cookbooks/greeting/.delivery/build_cookbook/recipes/publish.rb
new file mode 100644
index 0000000000000000000000000000000000000000..ad890fd0ec92477b700e75c0a3c466522f38fc8c
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/recipes/publish.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: publish
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::publish'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/recipes/quality.rb b/cookbooks/greeting/.delivery/build_cookbook/recipes/quality.rb
new file mode 100644
index 0000000000000000000000000000000000000000..f5d4d743afebf2f8557ff6f0e652e2e1cac54b10
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/recipes/quality.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: quality
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::quality'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/recipes/security.rb b/cookbooks/greeting/.delivery/build_cookbook/recipes/security.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7d47af168dd97b5e4b696b2c0940c00ebd27395b
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/recipes/security.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: security
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::security'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/recipes/smoke.rb b/cookbooks/greeting/.delivery/build_cookbook/recipes/smoke.rb
new file mode 100644
index 0000000000000000000000000000000000000000..2203cbd2f3812d553ec660d94a5d054debaa44bf
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/recipes/smoke.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: smoke
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::smoke'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/recipes/syntax.rb b/cookbooks/greeting/.delivery/build_cookbook/recipes/syntax.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7147f96a26936d888ee82a9a5e6f8d1db266ed8d
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/recipes/syntax.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: syntax
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::syntax'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/recipes/unit.rb b/cookbooks/greeting/.delivery/build_cookbook/recipes/unit.rb
new file mode 100644
index 0000000000000000000000000000000000000000..fa6d9ba4ecf28a65db1cb545cabdd114eb790239
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/recipes/unit.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: unit
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::unit'
diff --git a/cookbooks/greeting/.delivery/build_cookbook/secrets/fakey-mcfakerton b/cookbooks/greeting/.delivery/build_cookbook/secrets/fakey-mcfakerton
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/cookbooks/greeting/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb b/cookbooks/greeting/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..17250391e21792b0418942941b4ef01d6ef41d78
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
@@ -0,0 +1,2 @@
+name 'test'
+version '0.1.0'
\ No newline at end of file
diff --git a/cookbooks/greeting/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb b/cookbooks/greeting/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..5675ce6b8dbbfca9dc4ba7c77e795185e8a3ba05
--- /dev/null
+++ b/cookbooks/greeting/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
@@ -0,0 +1,8 @@
+%w(unit lint syntax).each do |phase|
+  # TODO: This works on Linux/Unix. Not Windows.
+  execute "HOME=/home/vagrant delivery job verify #{phase} --server localhost --ent test --org kitchen" do
+    cwd '/tmp/repo-data'
+    user 'vagrant'
+    environment('GIT_DISCOVERY_ACROSS_FILESYSTEM' => '1')
+  end
+end
diff --git a/cookbooks/greeting/.delivery/config.json b/cookbooks/greeting/.delivery/config.json
new file mode 100644
index 0000000000000000000000000000000000000000..6c0e69fc01572a56024e29f4d4cb59c84d0d9d34
--- /dev/null
+++ b/cookbooks/greeting/.delivery/config.json
@@ -0,0 +1,12 @@
+{
+  "version": "2",
+  "build_cookbook": {
+    "name": "build_cookbook",
+    "path": ".delivery/build_cookbook"
+  },
+  "skip_phases": [],
+  "job_dispatch": {
+    "version": "v2"
+  },
+  "dependencies": []
+}
diff --git a/cookbooks/greeting/.delivery/project.toml b/cookbooks/greeting/.delivery/project.toml
new file mode 100644
index 0000000000000000000000000000000000000000..c453234bc9b4b151cc57be8f613ad75c614dc762
--- /dev/null
+++ b/cookbooks/greeting/.delivery/project.toml
@@ -0,0 +1,36 @@
+# Delivery Prototype for Local Phases Execution
+#
+# The purpose of this file is to prototype a new way to execute
+# phases locally on your workstation. The delivery-cli will read
+# this file and execute the command(s) that are configured for
+# each phase. You can customize them by just modifying the phase
+# key on this file.
+#
+# By default these phases are configured for Cookbook Workflow only
+#
+# As this is still a prototype we are not modifying the current
+# config.json file and it will continue working as usual.
+
+[local_phases]
+unit = "chef exec rspec spec/"
+lint = "chef exec cookstyle"
+# Foodcritic includes rules only appropriate for community cookbooks
+# uploaded to Supermarket. We turn off any rules tagged "supermarket"
+# by default. If you plan to share this cookbook you should remove
+# '-t ~supermarket' below to enable supermarket rules.
+syntax = "chef exec foodcritic . --exclude spec -f any -t ~supermarket"
+provision = "chef exec kitchen create"
+deploy = "chef exec kitchen converge"
+smoke = "chef exec kitchen verify"
+# The functional phase is optional, you can define it by uncommenting
+# the line below and running the command: `delivery local functional`
+# functional = ""
+cleanup = "chef exec kitchen destroy"
+
+# Remote project.toml file
+#
+# Specify a remote URI location for the `project.toml` file.
+# This is useful for teams that wish to centrally manage the behavior
+# of the `delivery local` command across many different projects.
+#
+# remote_file = "https://url/project.toml"
diff --git a/cookbooks/greeting/.gitignore b/cookbooks/greeting/.gitignore
new file mode 100644
index 0000000000000000000000000000000000000000..febee30092d697dc9b7c7a2f42bfd571fe9da25a
--- /dev/null
+++ b/cookbooks/greeting/.gitignore
@@ -0,0 +1,21 @@
+.vagrant
+*~
+*#
+.#*
+\#*#
+.*.sw[a-z]
+*.un~
+
+# Bundler
+Gemfile.lock
+bin/*
+.bundle/*
+
+# test kitchen
+.kitchen/
+.kitchen.local.yml
+
+# Chef
+Berksfile.lock
+.zero-knife.rb
+Policyfile.lock.json
diff --git a/cookbooks/greeting/.kitchen.yml b/cookbooks/greeting/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..ee87fa9cc314e17119d51423aba0e4c6106aef6d
--- /dev/null
+++ b/cookbooks/greeting/.kitchen.yml
@@ -0,0 +1,26 @@
+---
+driver:
+  name: vagrant
+
+provisioner:
+  name: chef_zero
+  # You may wish to disable always updating cookbooks in CI or other testing environments.
+  # For example:
+  #   always_update_cookbooks: <%= !ENV['CI'] %>
+  always_update_cookbooks: true
+
+verifier:
+  name: inspec
+
+platforms:
+  - name: ubuntu-16.04
+  - name: centos-7.3
+
+suites:
+  - name: default
+    run_list:
+      - recipe[greeting::default]
+    verifier:
+      inspec_tests:
+        - test/smoke/default
+    attributes:
diff --git a/cookbooks/greeting/Berksfile b/cookbooks/greeting/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..34fea2166bafb6b6a62488907c532a9d4692d35e
--- /dev/null
+++ b/cookbooks/greeting/Berksfile
@@ -0,0 +1,3 @@
+source 'https://supermarket.chef.io'
+
+metadata
diff --git a/cookbooks/greeting/README.md b/cookbooks/greeting/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..041c4e67e3c8a5f3ceb509eb1665ce573c9fcff4
--- /dev/null
+++ b/cookbooks/greeting/README.md
@@ -0,0 +1,4 @@
+# greeting
+
+TODO: Enter the cookbook description here.
+
diff --git a/cookbooks/greeting/chefignore b/cookbooks/greeting/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/cookbooks/greeting/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/cookbooks/greeting/metadata.rb b/cookbooks/greeting/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..9774e130ab95bdad5f84f6dafa744f7cdf9c28a3
--- /dev/null
+++ b/cookbooks/greeting/metadata.rb
@@ -0,0 +1,20 @@
+name 'greeting'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'All Rights Reserved'
+description 'Installs/Configures greeting'
+long_description 'Installs/Configures greeting'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+# The `issues_url` points to the location where issues for this cookbook are
+# tracked.  A `View Issues` link will be displayed on this cookbook's page when
+# uploaded to a Supermarket.
+#
+# issues_url 'https://github.com/<insert_org_here>/greeting/issues'
+
+# The `source_url` points to the development reposiory for this cookbook.  A
+# `View Source` link will be displayed on this cookbook's page when uploaded to
+# a Supermarket.
+#
+# source_url 'https://github.com/<insert_org_here>/greeting'
diff --git a/cookbooks/greeting/recipes/default.rb b/cookbooks/greeting/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..08b3cda2f54da3037d3b20586e80ca1c6c0d81bd
--- /dev/null
+++ b/cookbooks/greeting/recipes/default.rb
@@ -0,0 +1,12 @@
+greeting_file "Ohai" do 
+  title "Chef"
+end
+
+greeting_site 'httpd' do
+  homepage '<h1>Welcome to the Example Co. website!</h1>'
+end
+
+#greeting_site 'httpd' do
+#  action :delete
+#end
+
diff --git a/cookbooks/greeting/resources/file.rb b/cookbooks/greeting/resources/file.rb
new file mode 100644
index 0000000000000000000000000000000000000000..57ee54291a621c6908545bb4fa27208daccc9fc7
--- /dev/null
+++ b/cookbooks/greeting/resources/file.rb
@@ -0,0 +1,15 @@
+property :title, String, default: "World"
+property :path, String, default: "/tmp/greeting.txt"
+action :create do  
+  Chef::Log.info "Adding '#{new_resource.name}' greeting as #{new_resource.path}"  
+  file new_resource.path do    
+    content "#{new_resource.name}, #{new_resource.title}!"    
+    action :create  
+  end
+end
+action :remove do  
+  Chef::Log.info "Removing '#{new_resource.name}' greeting #{new_resource.path}"  
+  file new_resource.path do    
+    action :delete  
+  end
+end
diff --git a/cookbooks/greeting/resources/site.rb b/cookbooks/greeting/resources/site.rb
new file mode 100644
index 0000000000000000000000000000000000000000..8ba9d80b4e1affe2276f70883c920325d3d009f4
--- /dev/null
+++ b/cookbooks/greeting/resources/site.rb
@@ -0,0 +1,19 @@
+property :homepage, String, default: '<h1>Hello world!</h1>'
+
+action :create do
+  package 'httpd'
+
+  service 'httpd' do
+    action [:enable, :start]
+  end
+
+  file '/var/www/html/index.html' do
+    content homepage
+  end
+end
+
+action :delete do
+  package 'httpd' do
+    action :delete
+  end
+end
diff --git a/cookbooks/greeting/spec/spec_helper.rb b/cookbooks/greeting/spec/spec_helper.rb
new file mode 100644
index 0000000000000000000000000000000000000000..1dd5126bf629c317834b3c7bb35842981fc93233
--- /dev/null
+++ b/cookbooks/greeting/spec/spec_helper.rb
@@ -0,0 +1,2 @@
+require 'chefspec'
+require 'chefspec/berkshelf'
diff --git a/cookbooks/greeting/spec/unit/recipes/default_spec.rb b/cookbooks/greeting/spec/unit/recipes/default_spec.rb
new file mode 100644
index 0000000000000000000000000000000000000000..910aff06fa7a37deb725071f8b559b76e704c241
--- /dev/null
+++ b/cookbooks/greeting/spec/unit/recipes/default_spec.rb
@@ -0,0 +1,22 @@
+#
+# Cookbook:: greeting
+# Spec:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+
+require 'spec_helper'
+
+describe 'greeting::default' do
+  context 'When all attributes are default, on an Ubuntu 16.04' do
+    let(:chef_run) do
+      # for a complete list of available platforms and versions see:
+      # https://github.com/customink/fauxhai/blob/master/PLATFORMS.md
+      runner = ChefSpec::ServerRunner.new(platform: 'ubuntu', version: '16.04')
+      runner.converge(described_recipe)
+    end
+
+    it 'converges successfully' do
+      expect { chef_run }.to_not raise_error
+    end
+  end
+end
diff --git a/cookbooks/greeting/test/smoke/default/default_test.rb b/cookbooks/greeting/test/smoke/default/default_test.rb
new file mode 100644
index 0000000000000000000000000000000000000000..73f8e094e51687e5253b8bd26c3b8f9dbb7db90b
--- /dev/null
+++ b/cookbooks/greeting/test/smoke/default/default_test.rb
@@ -0,0 +1,18 @@
+# # encoding: utf-8
+
+# Inspec test for recipe greeting::default
+
+# The Inspec reference, with examples and extensive documentation, can be
+# found at http://inspec.io/docs/reference/resources/
+
+unless os.windows?
+  # This is an example test, replace with your own test.
+  describe user('root'), :skip do
+    it { should exist }
+  end
+end
+
+# This is an example test, replace it with your own test.
+describe port(80), :skip do
+  it { should_not be_listening }
+end
diff --git a/cookbooks/iptables/CHANGELOG.md b/cookbooks/iptables/CHANGELOG.md
new file mode 100644
index 0000000000000000000000000000000000000000..d977b9aea2b005bad715fff2ba4fdc7efd5a41e3
--- /dev/null
+++ b/cookbooks/iptables/CHANGELOG.md
@@ -0,0 +1,123 @@
+# iptables Cookbook CHANGELOG
+This file is used to list changes made in each version of the iptables cookbook.
+
+## 4.2.0 (2017-04-14)
+
+- [GH-69] - Clearing out iptables rule files on RHEL with the iptables::disabled recipe
+
+## 4.1.0 (2017-04-11)
+
+- specify optional table property for use with lines
+
+## 4.0.1 (2017-03-29)
+- Update metadata to require Chef 12.10+ due to use of with_run_context 
+
+## 4.0.0 (2017-02-27)
+
+- Remove EOL platforms from testing
+- Require Chef 12.5 and remove compat_resource dependency
+
+## 3.1.0 (2017-01-16)
+
+- Update readme to include new attribute
+- Check subcmd exit codes in rebuild-iptables script
+- fixed iptables disabled recipe to flush iptables after disabling the service
+
+## 3.0.1 (2016-10-10)
+- Fix rules resource so rebuild-iptables only runs once
+- Add tests for nested resources
+- Add system ruby attribute so that it can be overridden
+
+## 3.0.0 (2016-09-16)
+- Remove kitchen cloud config
+- Fix default specs to work properly on RHEL and other general spec cleanup
+- Simplify testing and fix failing tests on RHEL
+- allow using a file provider instead of a template
+- rename 'content' to 'lines' and add documentation
+- make the attributes example a bit more useful
+- using iptables-restore logic for rhel - same as debian
+- copy new config to default location in case of iptables restart
+- refactored rebuild-iptables script
+- Update supported os
+- Use compat_resource to restore Chef 12.1 - 12.4 compatibility
+
+## v2.2.0 (2016-02-17)
+- Remove the dependency on compat_resource cookbook. This fixes RHEL systems, but increases the required Chef version to 12.5 or later
+
+## v2.1.1 (2016-01-26)
+- Fixed failures on RHEL in the disabled recipe
+
+## v2.1.0 (2016-01-25)
+- Improved compatbility with Fedora
+- Added management of the iptables sysconfig files using 2 new attributes. See the readme for more information
+
+## v2.0.2 (2016-01-15)
+- Fixed rules not being rebuilt when using the disable action in the custom resource
+
+## v2.0.1 (2015-11-16)
+- Added Chefspec matchers
+
+## v2.0.0 (2015-10-21)
+- Migrated LWRP to Chef 12.5 custom resources format with backwards compatibility provided via compat_resource cookbook to 12.X family
+- Added Start / enable of iptables service in the default recipe when on RHEL based systems and the management of /etc/sysconfig/iptables so the service can start
+- Added removal of /etc/iptables.d/ to the disabled recipe to allow for reenabling later on
+- Modified the iptables service disable in the disable recipe to only run when on RHEL based systems
+- Expanded the serverspec tests and test kitchen suites to better test rules custom resource and disable recipe
+
+## v1.1.0 (2015-10-05)
+- Fixed metadata description of the default recipe
+- Added Kitchen CI config
+- Added Chefspec unit tests
+- Updated to our standard Rubocop config and resolve all warnings
+- Added Travis CI config for lint / unit testing on Ruby 2/2.1/2.2
+- Updated Contributing and Testing docs
+- Added a maintainers doc
+- Added a Gemfile with development and testing dependencies
+- Added cookbook version and Travis CI badges to the readme
+- Clarified in the readme that the minimum supported Chef release is 11.0
+- Added a Rakefile easier testing
+- Added a chefignore file to limit files that are uploaded to the Chef server
+- Update to modern notification format to resolve Foodcritic warnings
+- Added source_url and issues_url to the metadata for Supermarket
+- Removed pre-Ruby 1.9 hash rockets
+
+## v1.0.0 (2015-04-29)
+NOTE: This release includes breaking changes to the behavior of this cookbook. The iptables_rule definition was converted to a LWRP.  This changes the behavior of disabling iptables rules.  Previously a rule could be disabled by specifying `enable false`.  You must now specify `action :disable`.  Additionally the cookbook no longer installs the out of the box iptables rules.  These were rules made assumptions about the operating environment and should not have been installed out of the box. This makes this recipe a library cookbook that can be better wrapped to meet the needs or your particular environment.
+- Definition converted to a LWRP to providing why-run support and
+- The out of the box iptables rules are no longer installed.  If you need these rules you'll need to wrap the cookbook and use the LWRP to define these same rules.
+- Removed all references to the roadmap and deprecation of the cookbook.  It's not going anywhere any time soon
+- Use platform_family to better support Debian derivatives
+- Converted file / directory modes to strings to preserve the leading 0
+- Added additional RHEL derivitive distributions to the metadata
+- Expanded excluded files in the gitignore and chefignore files
+- Included the latest contributing documentation to match the current process
+
+## v0.14.1 (2015-01-01)
+- Fixing File.exists is deprecated for File.exist
+
+## v0.14.0 (2014-08-31)
+- [#14] Adds basic testing suite including Berksfile
+- [#14] Adds basic integration/post-converge tests
+- [#14] Adds default prefix and postfix rules to disalow traffic
+
+## v0.13.2 (2014-04-09)
+- [COOK-4496] Added Amazon Linux support
+
+## v0.13.0 (2014-03-19)
+- [COOK-3927] Substitute Perl version of rebuild-iptables with Ruby version
+
+## v0.12.2 (2014-03-18)
+- [COOK-4411] - Add newling to iptables.snat
+
+## v0.12.0
+- [COOK-2213] - iptables disabled recipe
+
+## v0.11.0
+- [COOK-1883] - add perl package so rebuild script works
+
+## v0.10.0
+- [COOK-641] - be able to save output on rhel-family
+- [COOK-655] - use a template from other cookbooks
+
+## v0.9.3
+- Current public release.
diff --git a/cookbooks/iptables/CONTRIBUTING.md b/cookbooks/iptables/CONTRIBUTING.md
new file mode 100644
index 0000000000000000000000000000000000000000..ef2f2b80834ef516cc8c9f03a840f69f0d52d467
--- /dev/null
+++ b/cookbooks/iptables/CONTRIBUTING.md
@@ -0,0 +1,2 @@
+Please refer to
+https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
diff --git a/cookbooks/iptables/MAINTAINERS.md b/cookbooks/iptables/MAINTAINERS.md
new file mode 100644
index 0000000000000000000000000000000000000000..645ed14161311b9665b3f9c02f9498f5d76a0b2f
--- /dev/null
+++ b/cookbooks/iptables/MAINTAINERS.md
@@ -0,0 +1,15 @@
+<!-- This is a generated file. Please do not edit directly -->
+
+# Maintainers
+
+This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.
+
+Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.
+
+# Project Maintainer
+* [Tim Smith](https://github.com/tas50)
+
+# Maintainers
+* [Jennifer Davis](https://github.com/sigje)
+* [Tim Smith](https://github.com/tas50)
+* [Thom May](https://github.com/thommay)
diff --git a/cookbooks/iptables/README.md b/cookbooks/iptables/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..d352fd31904cb5fc53b012127963997d55562981
--- /dev/null
+++ b/cookbooks/iptables/README.md
@@ -0,0 +1,135 @@
+# iptables Cookbook
+
+[![Build Status](https://travis-ci.org/chef-cookbooks/iptables.svg?branch=master)](https://travis-ci.org/chef-cookbooks/iptables) [![Cookbook Version](https://img.shields.io/cookbook/v/iptables.svg)](https://supermarket.chef.io/cookbooks/iptables)
+
+Installs iptables and provides a custom resource for adding and removing iptables rules
+
+## Requirements
+
+### Platforms
+
+- Ubuntu/Debian
+- RHEL/CentOS and derivatives
+
+### Chef
+
+- Chef 12.10+
+
+### Cookbooks
+
+- none
+
+## Recipes
+
+### default
+
+The default recipe will install iptables and provides a ruby script (installed in `/usr/sbin/rebuild-iptables`) to manage rebuilding firewall rules from files dropped off in `/etc/iptables.d`.
+
+### disabled
+
+The disabled recipe will install iptables, disable the `iptables` service (on RHEL platforms), and delete the rules directory `/etc/iptables.d`.
+
+## Attributes
+
+`default['iptables']['iptables_sysconfig']` and `default['iptables']['ip6tables_sysconfig']` are hashes that are used to template /etc/sysconfig/iptables-config and /etc/sysconfig/ip6tables-config. The keys must be upper case and any key / value pair included will be added to the config file.
+
+`default['iptables']['system_ruby']` allows users to override the system ruby path if ruby is installed into a non standard location and Chef has been installed without an embedded ruby (eg. from the Gem).
+
+## Custom Resource
+
+### rule
+
+The custom resource drops off a template in `/etc/iptables.d` after the `name` parameter. The rule will get added to the local system firewall through notifying the `rebuild-iptables` script. See **Examples** below.
+
+NOTE: In the 1.0 release of this cookbook the iptables_rule definition was converted to a custom resource. This changes the behavior of disabling iptables rules. Previously a rule could be disabled by specifying `enable false`. You must now specify `action :disable`
+
+## Usage
+
+Add `recipe[iptables]` to your runlist to ensure iptables is installed / running and to ensure that the `rebuild-iptables` script is on the system. Then create use iptables_rule to add individual rules. See **Examples**.
+
+Since certain chains can be used with multiple tables (e.g., _PREROUTING_), you might have to include the name of the table explicitly (i.e., _*nat_, _*mangle_, etc.), so that the `/usr/sbin/rebuild-iptables` script can infer how to assemble final ruleset file that is going to be loaded. Please note, that unless specified otherwise, rules will be added under the **filter** table by default.
+
+### Examples
+
+To enable port 80, e.g. in an `my_httpd` cookbook, create the following template:
+
+```text
+# Port 80 for http
+-A FWR -p tcp -m tcp --dport 80 -j ACCEPT
+```
+
+This template would be located at: `my_httpd/templates/default/http.erb`. Then within your recipe call:
+
+```ruby
+iptables_rule 'http' do
+  action :enable
+end
+```
+
+To redirect port 80 to local port 8080, e.g., in the aforementioned `my_httpd` cookbook, create the following template:
+
+```text
+*nat
+# Redirect anything on eth0 coming to port 80 to local port 8080
+-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080
+```
+
+Please note, that we explicitly add name of the table (being _*nat_ in this example above) where the rules should be added.
+
+This would most likely go in the cookbook, `my_httpd/templates/default/http_8080.erb`. Then to use it in `recipe[httpd]`:
+
+```ruby
+iptables_rule 'http_8080' do
+  action :enable
+end
+```
+
+To create a rule without using a template resource use the `lines` property (you can optionally specify `table` when using `lines`):
+
+```ruby
+iptables_rule 'http_8080' do
+  lines '-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080'
+  table :nat
+end
+```
+
+To get attribute-driven rules you can (for example) feed a hash of attributes into named iptables.d files like this:
+
+```ruby
+node.default['iptables']['http_80'] = '-A FWR -p tcp -m tcp --dport 80 -j ACCEPT'
+node.default['iptables']['http_443'] = [
+  '# an example with multiple lines',
+  '-A FWR -p tcp -m tcp --dport 443 -j ACCEPT',
+]
+
+node['iptables'].map do |rule_name, rule_body|
+  iptables_rule rule_name do
+    lines [ rule_body ].flatten.join("\n")
+  end
+end
+```
+
+## Chefspec Matchers
+
+- enable_iptables_rule(resource_name)
+- disable_iptables_rule(resource_name)
+
+## License & Authors
+
+**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))
+
+**Copyright:** 2008-2016, Chef Software, Inc.
+
+```
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+```
diff --git a/cookbooks/iptables/attributes/default.rb b/cookbooks/iptables/attributes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b98b2ae55e4b61f7ef88c6a3028975b446e0c77e
--- /dev/null
+++ b/cookbooks/iptables/attributes/default.rb
@@ -0,0 +1,41 @@
+#
+# Cookbook:: iptables
+# Attribute:: default
+#
+# Copyright:: 2016, Chef Software, Inc.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+default['iptables']['iptables_sysconfig'] = {
+  'IPTABLES_MODULES' => '',
+  'IPTABLES_MODULES_UNLOAD' => 'yes',
+  'IPTABLES_SAVE_ON_STOP' => 'no',
+  'IPTABLES_SAVE_ON_RESTART' => 'no',
+  'IPTABLES_SAVE_COUNTER' => 'no',
+  'IPTABLES_STATUS_NUMERIC' => 'yes',
+  'IPTABLES_STATUS_VERBOSE' => 'no',
+  'IPTABLES_STATUS_LINENUMBERS' => 'yes',
+}
+default['iptables']['ip6tables_sysconfig'] = {
+  'IP6TABLES_MODULES' => '',
+  'IP6TABLES_MODULES_UNLOAD' => 'yes',
+  'IP6TABLES_SAVE_ON_STOP' => 'no',
+  'IP6TABLES_SAVE_ON_RESTART' => 'no',
+  'IP6TABLES_SAVE_COUNTER' => 'no',
+  'IP6TABLES_STATUS_NUMERIC' => 'yes',
+  'IP6TABLES_STATUS_VERBOSE' => 'no',
+  'IP6TABLES_STATUS_LINENUMBERS' => 'yes',
+}
+
+default['iptables']['system_ruby'] = '/usr/bin/ruby'
diff --git a/cookbooks/iptables/libraries/matchers.rb b/cookbooks/iptables/libraries/matchers.rb
new file mode 100644
index 0000000000000000000000000000000000000000..79417d1c4a977f502266a30633c5e4c5ba67f333
--- /dev/null
+++ b/cookbooks/iptables/libraries/matchers.rb
@@ -0,0 +1,9 @@
+if defined?(ChefSpec)
+  def enable_iptables_rule(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:iptables_rule, :enable, resource_name)
+  end
+
+  def disable_iptables_rule(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:iptables_rule, :disable, resource_name)
+  end
+end
diff --git a/cookbooks/iptables/metadata.json b/cookbooks/iptables/metadata.json
new file mode 100644
index 0000000000000000000000000000000000000000..2e5dd6ab8ee8a9427310ae24749e4f7b21d68a49
--- /dev/null
+++ b/cookbooks/iptables/metadata.json
@@ -0,0 +1 @@
+{"name":"iptables","version":"4.2.0","description":"Installs the iptables daemon and provides a LWRP for managing rules","long_description":"# iptables Cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/iptables.svg?branch=master)](https://travis-ci.org/chef-cookbooks/iptables) [![Cookbook Version](https://img.shields.io/cookbook/v/iptables.svg)](https://supermarket.chef.io/cookbooks/iptables)\n\nInstalls iptables and provides a custom resource for adding and removing iptables rules\n\n## Requirements\n\n### Platforms\n\n- Ubuntu/Debian\n- RHEL/CentOS and derivatives\n\n### Chef\n\n- Chef 12.10+\n\n### Cookbooks\n\n- none\n\n## Recipes\n\n### default\n\nThe default recipe will install iptables and provides a ruby script (installed in `/usr/sbin/rebuild-iptables`) to manage rebuilding firewall rules from files dropped off in `/etc/iptables.d`.\n\n### disabled\n\nThe disabled recipe will install iptables, disable the `iptables` service (on RHEL platforms), and delete the rules directory `/etc/iptables.d`.\n\n## Attributes\n\n`default['iptables']['iptables_sysconfig']` and `default['iptables']['ip6tables_sysconfig']` are hashes that are used to template /etc/sysconfig/iptables-config and /etc/sysconfig/ip6tables-config. The keys must be upper case and any key / value pair included will be added to the config file.\n\n`default['iptables']['system_ruby']` allows users to override the system ruby path if ruby is installed into a non standard location and Chef has been installed without an embedded ruby (eg. from the Gem).\n\n## Custom Resource\n\n### rule\n\nThe custom resource drops off a template in `/etc/iptables.d` after the `name` parameter. The rule will get added to the local system firewall through notifying the `rebuild-iptables` script. See **Examples** below.\n\nNOTE: In the 1.0 release of this cookbook the iptables_rule definition was converted to a custom resource. This changes the behavior of disabling iptables rules. Previously a rule could be disabled by specifying `enable false`. You must now specify `action :disable`\n\n## Usage\n\nAdd `recipe[iptables]` to your runlist to ensure iptables is installed / running and to ensure that the `rebuild-iptables` script is on the system. Then create use iptables_rule to add individual rules. See **Examples**.\n\nSince certain chains can be used with multiple tables (e.g., _PREROUTING_), you might have to include the name of the table explicitly (i.e., _*nat_, _*mangle_, etc.), so that the `/usr/sbin/rebuild-iptables` script can infer how to assemble final ruleset file that is going to be loaded. Please note, that unless specified otherwise, rules will be added under the **filter** table by default.\n\n### Examples\n\nTo enable port 80, e.g. in an `my_httpd` cookbook, create the following template:\n\n```text\n# Port 80 for http\n-A FWR -p tcp -m tcp --dport 80 -j ACCEPT\n```\n\nThis template would be located at: `my_httpd/templates/default/http.erb`. Then within your recipe call:\n\n```ruby\niptables_rule 'http' do\n  action :enable\nend\n```\n\nTo redirect port 80 to local port 8080, e.g., in the aforementioned `my_httpd` cookbook, create the following template:\n\n```text\n*nat\n# Redirect anything on eth0 coming to port 80 to local port 8080\n-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\n```\n\nPlease note, that we explicitly add name of the table (being _*nat_ in this example above) where the rules should be added.\n\nThis would most likely go in the cookbook, `my_httpd/templates/default/http_8080.erb`. Then to use it in `recipe[httpd]`:\n\n```ruby\niptables_rule 'http_8080' do\n  action :enable\nend\n```\n\nTo create a rule without using a template resource use the `lines` property (you can optionally specify `table` when using `lines`):\n\n```ruby\niptables_rule 'http_8080' do\n  lines '-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080'\n  table :nat\nend\n```\n\nTo get attribute-driven rules you can (for example) feed a hash of attributes into named iptables.d files like this:\n\n```ruby\nnode.default['iptables']['http_80'] = '-A FWR -p tcp -m tcp --dport 80 -j ACCEPT'\nnode.default['iptables']['http_443'] = [\n  '# an example with multiple lines',\n  '-A FWR -p tcp -m tcp --dport 443 -j ACCEPT',\n]\n\nnode['iptables'].map do |rule_name, rule_body|\n  iptables_rule rule_name do\n    lines [ rule_body ].flatten.join(\"\\n\")\n  end\nend\n```\n\n## Chefspec Matchers\n\n- enable_iptables_rule(resource_name)\n- disable_iptables_rule(resource_name)\n\n## License & Authors\n\n**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))\n\n**Copyright:** 2008-2016, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache-2.0","platforms":{"redhat":">= 0.0.0","centos":">= 0.0.0","debian":">= 0.0.0","ubuntu":">= 0.0.0","amazon":">= 0.0.0","scientific":">= 0.0.0","oracle":">= 0.0.0","zlinux":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"default":"Installs iptables and sets up .d style config directory of iptables rules","disabled":"Disables iptables"},"source_url":"https://github.com/chef-cookbooks/iptables","issues_url":"https://github.com/chef-cookbooks/iptables/issues","chef_version":[[">= 12.10"]],"ohai_version":[]}
\ No newline at end of file
diff --git a/cookbooks/iptables/recipes/_package.rb b/cookbooks/iptables/recipes/_package.rb
new file mode 100644
index 0000000000000000000000000000000000000000..3a4514e23f4da1608f8eb0f578d5f688947da843
--- /dev/null
+++ b/cookbooks/iptables/recipes/_package.rb
@@ -0,0 +1,24 @@
+#
+# Cookbook:: iptables
+# Recipe:: _package
+#
+# Copyright:: 2008-2016, Chef Software, Inc.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+if platform_family?('rhel') && node['platform_version'].to_i == 7
+  package 'iptables-services'
+else
+  package 'iptables'
+end
diff --git a/cookbooks/iptables/recipes/default.rb b/cookbooks/iptables/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..aaaf3d4f69cc5a464f2cc14dcb1ec9546b17465f
--- /dev/null
+++ b/cookbooks/iptables/recipes/default.rb
@@ -0,0 +1,73 @@
+#
+# Cookbook:: iptables
+# Recipe:: default
+#
+# Copyright:: 2008-2016, Chef Software, Inc.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+system_ruby = node['iptables']['system_ruby']
+
+include_recipe 'iptables::_package'
+
+execute 'rebuild-iptables' do
+  command '/usr/sbin/rebuild-iptables'
+  action :nothing
+end
+
+directory '/etc/iptables.d' do
+  action :create
+end
+
+template '/usr/sbin/rebuild-iptables' do
+  source 'rebuild-iptables.erb'
+  mode '0755'
+  variables(
+    hashbang: ::File.exist?(system_ruby) ? system_ruby : '/opt/chef/embedded/bin/ruby'
+  )
+end
+
+# debian based systems load iptables during the interface activation
+template '/etc/network/if-pre-up.d/iptables_load' do
+  source 'iptables_load.erb'
+  mode '0755'
+  variables iptables_save_file: '/etc/iptables/general'
+  only_if { platform_family?('debian') }
+end
+
+# iptables service exists only on RHEL based systems
+if platform_family?('rhel') || platform_family?('fedora')
+  file '/etc/sysconfig/iptables' do
+    content '# Chef managed placeholder to allow iptables service to start'
+    action :create_if_missing
+  end
+
+  template '/etc/sysconfig/iptables-config' do
+    source 'iptables-config.erb'
+    mode '600'
+    variables config: node['iptables']['iptables_sysconfig']
+  end
+
+  template '/etc/sysconfig/ip6tables-config' do
+    source 'iptables-config.erb'
+    mode '600'
+    variables config: node['iptables']['ip6tables_sysconfig']
+  end
+
+  service 'iptables' do
+    action [:enable, :start]
+    supports status: true, start: true, stop: true, restart: true
+    not_if { platform_family?('fedora') }
+  end
+end
diff --git a/cookbooks/iptables/recipes/disabled.rb b/cookbooks/iptables/recipes/disabled.rb
new file mode 100644
index 0000000000000000000000000000000000000000..4f00b289118507c2b68b6523744997a6cd406147
--- /dev/null
+++ b/cookbooks/iptables/recipes/disabled.rb
@@ -0,0 +1,48 @@
+#
+# Cookbook:: iptables
+# Recipe:: default
+#
+# Copyright:: 2008-2016, Chef Software, Inc.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+include_recipe 'iptables::_package'
+
+service 'iptables' do
+  action [:disable, :stop]
+  supports status: true, start: true, stop: true, restart: true
+  only_if { node['platform_family'] == 'rhel' }
+end
+
+# Necessary so that if iptables::disable is used and then later
+# it is re-enabled without any rules changes, the templates will run the rebuilt script
+directory '/etc/iptables.d' do
+  action :delete
+  recursive true
+  notifies :run, 'execute[iptablesFlush]', :immediately
+end
+
+%w(/etc/sysconfig/iptables /etc/sysconfig/iptables.fallback).each do |f|
+  file f do
+    content '# iptables rules files cleared by chef via iptables::disabled'
+    only_if { node['platform_family'] == 'rhel' }
+    notifies :run, 'execute[iptablesFlush]', :immediately
+  end
+end
+
+# Flush and delete iptables rules
+execute 'iptablesFlush' do
+  command 'iptables -F'
+  action  :nothing
+end
diff --git a/cookbooks/iptables/resources/rule.rb b/cookbooks/iptables/resources/rule.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b603f8b01a3fcd5bec26c63a04c9bba60e361ec8
--- /dev/null
+++ b/cookbooks/iptables/resources/rule.rb
@@ -0,0 +1,70 @@
+#
+# Author:: Tim Smith <tsmith84@gmail.com>
+# Cookbook:: iptables
+# Resource:: rule
+#
+# Copyright:: 2015-2016, Tim Smith
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+property :name, kind_of: String, name_attribute: true
+property :source, kind_of: String, default: nil
+property :cookbook, kind_of: String, default: nil
+property :variables, kind_of: Hash, default: {}
+property :lines, kind_of: String, default: nil
+property :table, kind_of: Symbol, default: nil
+
+action :enable do
+  # ensure we have execute[rebuild-iptables] in the outer run_context
+  with_run_context :root do
+    find_resource(:execute, 'rebuild-iptables') do
+      command '/usr/sbin/rebuild-iptables'
+      action :nothing
+    end
+  end
+
+  if lines.nil?
+    template "/etc/iptables.d/#{new_resource.name}" do
+      source new_resource.source ? new_resource.source : "#{new_resource.name}.erb"
+      mode '0644'
+      cookbook new_resource.cookbook if new_resource.cookbook
+      variables new_resource.variables
+      backup false
+      notifies :run, 'execute[rebuild-iptables]', :delayed
+    end
+  else
+    new_resource.lines = "*#{new_resource.table}\n" + new_resource.lines if new_resource.table
+    file "/etc/iptables.d/#{new_resource.name}" do
+      content new_resource.lines
+      mode '0644'
+      backup false
+      notifies :run, 'execute[rebuild-iptables]', :delayed
+    end
+  end
+end
+
+action :disable do
+  # ensure we have execute[rebuild-iptables] in the outer run_context
+  with_run_context :root do
+    find_resource(:execute, 'rebuild-iptables') do
+      command '/usr/sbin/rebuild-iptables'
+      action :nothing
+    end
+  end
+
+  file "/etc/iptables.d/#{new_resource.name}" do
+    action :delete
+    backup false
+    notifies :run, 'execute[rebuild-iptables]', :delayed
+  end
+end
diff --git a/cookbooks/iptables/templates/default/iptables-config.erb b/cookbooks/iptables/templates/default/iptables-config.erb
new file mode 100644
index 0000000000000000000000000000000000000000..d81f84f78d7af493208d86156739a4df0f8a7b5c
--- /dev/null
+++ b/cookbooks/iptables/templates/default/iptables-config.erb
@@ -0,0 +1,4 @@
+# This file managed by Chef. Do not hand edit
+<% @config.each do |k,v| -%>
+<%= k %>="<%= v %>"
+<% end -%>
diff --git a/cookbooks/iptables/templates/default/iptables_load.erb b/cookbooks/iptables/templates/default/iptables_load.erb
new file mode 100644
index 0000000000000000000000000000000000000000..d19862f5575d8186ddc845dd83e4423788e5e29b
--- /dev/null
+++ b/cookbooks/iptables/templates/default/iptables_load.erb
@@ -0,0 +1,3 @@
+#!/bin/sh
+/sbin/iptables-restore < <%= @iptables_save_file %>
+exit 0
diff --git a/cookbooks/iptables/templates/default/rebuild-iptables.erb b/cookbooks/iptables/templates/default/rebuild-iptables.erb
new file mode 100644
index 0000000000000000000000000000000000000000..09ade2854e27b505de06bf74736d1adcdfc086a4
--- /dev/null
+++ b/cookbooks/iptables/templates/default/rebuild-iptables.erb
@@ -0,0 +1,142 @@
+#!<%= @hashbang %> -w
+
+#
+# rebuild-iptables.rb -- Construct an iptables rules file from fragments.
+#
+# Written by Phil Cohen <github@phlippers.net>
+# Copyright 2011, Phil Cohen
+#
+# Constructs an iptables rules file from the prefix, standard, and suffix
+# files in the iptables configuration area, adding any additional modules
+# specified in the command line, and prints the resulting iptables rules to
+# standard output (suitable for saving into /var/lib/iptables or some other
+# appropriate location on the system).
+
+##############################################################################
+# Modules and declarations
+##############################################################################
+
+# Path to the iptables template area.
+TEMPLATE_PATH = "/etc/iptables.d"
+
+##############################################################################
+# Installation
+##############################################################################
+
+# Read in a file, processing includes as required.
+def read_iptables(file, table = :filter)
+  file = File.join(TEMPLATE_PATH, file) unless File.dirname(file) =~ /iptables\.d/
+  rule = File.readlines(file).map{ |line| line.chomp }
+  rule.each do |line|
+    if line =~ /^\s*include\s+(\S+)$/
+      read_iptables($1, table)
+    elsif line =~ /^\s*\*([a-z]+)\s*$/
+      table = $1.to_sym
+    elsif line =~ /^\s*:([-a-zA-Z0-9_]+)(?:\s+([A-Z]+(?:\s*\[.*?\])))?$/
+      @data[table][:chains][$1] = $2 || '-'
+    elsif line !~ /^\s*COMMIT\s*$/
+      #detect new chains
+      if chain = line.match(/\-[ADRILFZN]\s+([-a-zA-Z0-9_]+)\s/)
+        @data[table][:chains][chain[1]] ||= '-'
+      end
+      @data[table][:rules].push line
+    end
+  end
+end
+
+# Write a file carefully.
+def write_iptables(file, data)
+  File.open("#{file}.new", "w") { |f| f.write(data) }
+  File.rename("#{file}.new", file)
+end
+
+# Install iptables on a Red Hat or Debian system. Takes the new iptables data.
+def install_rules(data)
+  Dir.mkdir('/etc/iptables') unless File.directory?('/etc/iptables')
+  write_iptables('/etc/iptables/general', data)
+  return false unless system('/sbin/iptables-restore < /etc/iptables/general')
+  if File.exist?('/etc/sysconfig/iptables')
+    return false unless system("cp /etc/iptables/general /etc/sysconfig/iptables")
+  end
+  true
+end
+
+##############################################################################
+# Main routine
+##############################################################################
+
+@data = {
+    :filter => {
+        :chains => {
+            'INPUT'   => 'ACCEPT [0,0]',
+            'FORWARD' => 'ACCEPT [0,0]',
+            'OUTPUT'  => 'ACCEPT [0,0]'
+        },
+        :rules => []
+    },
+    :mangle => {
+        :chains => {
+            'PREROUTING'  => 'ACCEPT [0,0]',
+            'INPUT'       => 'ACCEPT [0,0]',
+            'FORWARD'     => 'ACCEPT [0,0]',
+            'OUTPUT'      => 'ACCEPT [0,0]',
+            'POSTROUTING' => 'ACCEPT [0,0]'
+        },
+        :rules => []
+    },
+    :nat => {
+        :chains => {
+            'PREROUTING'  => 'ACCEPT [0,0]',
+            'POSTROUTING' => 'ACCEPT [0,0]',
+            'OUTPUT'      => 'ACCEPT [0,0]'
+        },
+        :rules => [],
+    },
+    :raw => {
+        :chains => {
+            'PREROUTING'  => 'ACCEPT [0,0]',
+            'OUTPUT'      => 'ACCEPT [0,0]'
+        },
+        :rules => [],
+    },
+    :security => {
+        :chains => {
+            'INPUT'   => 'ACCEPT [0,0]',
+            'FORWARD' => 'ACCEPT [0,0]',
+            'OUTPUT'  => 'ACCEPT [0,0]'
+        },
+        :rules => []
+    }
+}
+
+templates = Dir["#{TEMPLATE_PATH}/*"].sort.delete_if do |template|
+  %w[prefix suffix postfix].include?(File.basename(template))
+end
+
+templates.unshift 'prefix' if File.exist? "#{TEMPLATE_PATH}/prefix"
+templates.push 'suffix' if File.exist? "#{TEMPLATE_PATH}/suffix"
+templates.push 'postfix' if File.exist? "#{TEMPLATE_PATH}/postfix"
+
+templates.each { |template| read_iptables(template) }
+
+iptables_rules = ""
+@data.each do |table, table_data|
+  if table_data[:rules].any?
+    iptables_rules << "*#{table.to_s}\n"
+    table_data[:chains].each do |chain, rule|
+      iptables_rules << ":#{chain} #{rule}\n"
+    end
+    iptables_rules << table_data[:rules].join("\n")
+    iptables_rules << "\nCOMMIT\n"
+  end
+end
+
+system_files = %w(/etc/debian_version /etc/redhat-release /etc/system-release)
+if system_files.any? { |file| File.exist?(file) }
+  success = install_rules(iptables_rules)
+  raise "#{$0}: failed to install iptables rules" unless success
+else
+  raise "#{$0}: cannot figure out whether this is Red Hat or Debian\n";
+end
+
+exit 0
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/.kitchen.yml b/cookbooks/my_cookbook/.delivery/build_cookbook/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..775a7d607753cf12625df4865c8da117189303de
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/.kitchen.yml
@@ -0,0 +1,21 @@
+---
+driver:
+  name: vagrant
+  synced_folders:
+    - [<%= File.join(ENV['PWD'], '..', '..')%>, '/tmp/repo-data']
+
+provisioner:
+  name: chef_zero
+  encrypted_data_bag_secret_key_path: 'secrets/fakey-mcfakerton'
+  data_bags_path: './data_bags'
+  product_name: chefdk
+
+platforms:
+  - name: ubuntu-16.04
+  - name: centos-7.3
+
+suites:
+  - name: default
+    run_list:
+      - recipe[test]
+    attributes:
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/Berksfile b/cookbooks/my_cookbook/.delivery/build_cookbook/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..61dab723b78f5f07a4a04767cca81aaf363fba45
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/Berksfile
@@ -0,0 +1,7 @@
+source 'https://supermarket.chef.io'
+
+metadata
+
+group :delivery do
+  cookbook 'test', path: './test/fixtures/cookbooks/test'
+end
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/LICENSE b/cookbooks/my_cookbook/.delivery/build_cookbook/LICENSE
new file mode 100644
index 0000000000000000000000000000000000000000..d31c097cd765797dae86c191c2ed6548bc4f8ea6
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/LICENSE
@@ -0,0 +1,3 @@
+Copyright 2017 The Authors
+
+All rights reserved, do not redistribute.
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/README.md b/cookbooks/my_cookbook/.delivery/build_cookbook/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..297af5a63e2feab2b6617f3576a3807bc8e240d1
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/README.md
@@ -0,0 +1,146 @@
+# build_cookbook
+
+A build cookbook for running the parent project through Chef Delivery
+
+This build cookbook should be customized to suit the needs of the parent project. Using this cookbook can be done outside of Chef Delivery, too. If the parent project is a Chef cookbook, we've detected that and "wrapped" [delivery-truck](https://github.com/chef-cookbooks/delivery-truck). That means it is a dependency, and each of its pipeline phase recipes is included in the appropriate phase recipes in this cookbook. If the parent project is not a cookbook, it's left as an exercise to the reader to customize the recipes as needed for each phase in the pipeline.
+
+## .delivery/config.json
+
+In the parent directory to this build_cookbook, the `config.json` can be modified as necessary. For example, phases can be skipped, publishing information can be added, and so on. Refer to customer support or the Chef Delivery documentation for assistance on what options are available for this configuration.
+
+## Test Kitchen - Local Verify Testing
+
+This cookbook also has a `.kitchen.yml` which can be used to create local build nodes with Test Kitchen to perform the verification phases, `unit`, `syntax`, and `lint`. When running `kitchen converge`, the instances will be set up like Chef Delivery "build nodes" with the [delivery_build cookbook](https://github.com/chef-cookbooks/delivery_build). The reason for this is to make sure that the same exact kind of nodes are used by this build cookbook are run on the local workstation as would run Delivery. It will run `delivery job verify PHASE` for the parent project.
+
+Modify the `.kitchen.yml` if necessary to change the platforms or other configuration to run the verify phases. After making changes in the parent project, `cd` into this directory (`.delivery/build_cookbook`), and run:
+
+```
+kitchen test
+```
+
+## Recipes
+
+Each of the recipes in this build_cookbook are run in the named phase during the Chef Delivery pipeline. The `unit`, `syntax`, and `lint` recipes are additionally run when using Test Kitchen for local testing as noted in the above section.
+
+## Making Changes - Cookbook Example
+
+When making changes in the parent project (that which lives in `../..` from this directory), or in the recipes in this build cookbook, there is a bespoke workflow for Chef Delivery. As an example, we'll discuss a Chef Cookbook as the parent.
+
+First, create a new branch for the changes.
+
+```
+git checkout -b testing-build-cookbook
+```
+
+Next, increment the version in the metadata.rb. This should be in the _parent_, not in this, the build_cookbook. If this is not done, the verify phase will fail.
+
+```
+% git diff
+<SNIP>
+-version '0.1.0'
++version '0.1.1'
+```
+
+The change we'll use for an example is to install the `zsh` package. Write a failing ChefSpec in the cookbook project's `spec/unit/recipes/default_spec.rb`.
+
+```ruby
+require 'spec_helper'
+
+describe 'godzilla::default' do
+  context 'When all attributes are default, on Ubuntu 16.04' do
+    let(:chef_run) do
+      runner = ChefSpec::ServerRunner.new(platform: 'ubuntu', version: '16.04')
+      runner.converge(described_recipe)
+    end
+
+    it 'installs zsh' do
+      expect(chef_run).to install_package('zsh')
+    end
+  end
+end
+```
+
+Commit the local changes as work in progress. The `delivery job` expects to use a clean git repository.
+
+```
+git add ../..
+git commit -m 'WIP: Testing changes'
+```
+
+From _this_ directory (`.delivery/build_cookbook`, relative to the parent cookbook project), run
+
+```
+cd .delivery/build_cookbook
+kitchen converge
+```
+
+This will take some time at first, because the VMs need to be created, Chef installed, the Delivery CLI installed, etc. Later runs will be faster until they are destroyed. It will also fail on the first VM, as expected, because we wrote the test first. Now edit the parent cookbook project's default recipe to install `zsh`.
+
+```
+cd ../../
+$EDITOR/recipes/default.rb
+```
+
+It should look like this:
+
+```
+package 'zsh'
+```
+
+Create another commit.
+
+```
+git add .
+git commit -m 'WIP: Install zsh in default recipe'
+```
+
+Now rerun kitchen from the build_cookbook.
+
+```
+cd .delivery/build_cookbook
+kitchen converge
+```
+
+This will take awhile because it will now pass on the first VM, and then create the second VM. We should have warned you this was a good time for a coffee break.
+
+```
+Recipe: test::default
+
+- execute HOME=/home/vagrant delivery job verify unit --server localhost --ent test --org kitchen
+  * execute[HOME=/home/vagrant delivery job verify lint --server localhost --ent test --org kitchen] action run
+    - execute HOME=/home/vagrant delivery job verify lint --server localhost --ent test --org kitchen
+
+    - execute HOME=/home/vagrant delivery job verify syntax --server localhost --ent test --org kitchen
+
+Running handlers:
+Running handlers complete
+Chef Client finished, 3/32 resources updated in 54.665445968 seconds
+Finished converging <default-centos-71> (1m26.83s).
+```
+
+Victory is ours! Our verify phase passed on the build nodes.
+
+We are ready to run this through our Delivery pipeline. Simply run `delivery review` on the local system from the parent project, and it will open a browser window up to the change we just added.
+
+```
+cd ../..
+delivery review
+```
+
+## FAQ
+
+### Why don't I just run rspec and foodcritic/rubocop on my local system?
+
+An objection to the Test Kitchen approach is that it is much faster to run the unit, lint, and syntax commands for the project on the local system. That is totally true, and also totally valid. Do that for the really fast feedback loop. However, the dance we do with Test Kitchen brings a much higher degree of confidence in the changes we're making, that everything will run on the build nodes in Chef Delivery. We strongly encourage this approach before actually pushing the changes to Delivery.
+
+### Why do I have to make a commit every time?
+
+When running `delivery job`, it expects to merge the commit for the changeset against the clean master branch. If we don't save our progress by making a commit, our local changes aren't run through `delivery job` in the Test Kitchen build instances. We can always perform an interactive rebase, and modify the original changeset message in Delivery with `delivery review --edit`. The latter won't modify the git commits, only the changeset in Delivery.
+
+### What do I do next?
+
+Make changes in the cookbook project as required for organizational goals and needs. Modify the `build_cookbook` as necessary for the pipeline phases that the cookbook should go through.
+
+### What if I get stuck?
+
+Contact Chef Support, or your Chef Customer Success team and they will help you get unstuck.
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/chefignore b/cookbooks/my_cookbook/.delivery/build_cookbook/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json b/cookbooks/my_cookbook/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
new file mode 100644
index 0000000000000000000000000000000000000000..af375ea862bf1f1dd7690ebd71e5c1cedc6d70ff
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
@@ -0,0 +1 @@
+{"id": "delivery_builder_keys"}
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/metadata.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..d9b56212aaa865b11ac7fc206d6e986fb65d284d
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/metadata.rb
@@ -0,0 +1,8 @@
+name 'build_cookbook'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'all_rights'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+depends 'delivery-truck'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/default.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b2746b56b1e55c70e2c97e0af0d57ee087d94e9a
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/default.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::default'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/deploy.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/deploy.rb
new file mode 100644
index 0000000000000000000000000000000000000000..9a61010dcda0604510d6dcafc9bc6db2877f1d8c
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/deploy.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: deploy
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::deploy'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/functional.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/functional.rb
new file mode 100644
index 0000000000000000000000000000000000000000..cae646df925c8c63d1c7c000314aff74c9923636
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/functional.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: functional
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::functional'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/lint.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/lint.rb
new file mode 100644
index 0000000000000000000000000000000000000000..40aee0c5b4de883a34713d9ea8651228e7a429aa
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/lint.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: lint
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::lint'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/provision.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/provision.rb
new file mode 100644
index 0000000000000000000000000000000000000000..57d0a78cea413ac381326cfb669b4a6754d4a0a8
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/provision.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: provision
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::provision'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/publish.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/publish.rb
new file mode 100644
index 0000000000000000000000000000000000000000..ad890fd0ec92477b700e75c0a3c466522f38fc8c
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/publish.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: publish
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::publish'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/quality.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/quality.rb
new file mode 100644
index 0000000000000000000000000000000000000000..f5d4d743afebf2f8557ff6f0e652e2e1cac54b10
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/quality.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: quality
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::quality'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/security.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/security.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7d47af168dd97b5e4b696b2c0940c00ebd27395b
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/security.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: security
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::security'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/smoke.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/smoke.rb
new file mode 100644
index 0000000000000000000000000000000000000000..2203cbd2f3812d553ec660d94a5d054debaa44bf
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/smoke.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: smoke
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::smoke'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/syntax.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/syntax.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7147f96a26936d888ee82a9a5e6f8d1db266ed8d
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/syntax.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: syntax
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::syntax'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/unit.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/unit.rb
new file mode 100644
index 0000000000000000000000000000000000000000..fa6d9ba4ecf28a65db1cb545cabdd114eb790239
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/recipes/unit.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: unit
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::unit'
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/secrets/fakey-mcfakerton b/cookbooks/my_cookbook/.delivery/build_cookbook/secrets/fakey-mcfakerton
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..17250391e21792b0418942941b4ef01d6ef41d78
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
@@ -0,0 +1,2 @@
+name 'test'
+version '0.1.0'
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb b/cookbooks/my_cookbook/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..5675ce6b8dbbfca9dc4ba7c77e795185e8a3ba05
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
@@ -0,0 +1,8 @@
+%w(unit lint syntax).each do |phase|
+  # TODO: This works on Linux/Unix. Not Windows.
+  execute "HOME=/home/vagrant delivery job verify #{phase} --server localhost --ent test --org kitchen" do
+    cwd '/tmp/repo-data'
+    user 'vagrant'
+    environment('GIT_DISCOVERY_ACROSS_FILESYSTEM' => '1')
+  end
+end
diff --git a/cookbooks/my_cookbook/.delivery/config.json b/cookbooks/my_cookbook/.delivery/config.json
new file mode 100644
index 0000000000000000000000000000000000000000..6c0e69fc01572a56024e29f4d4cb59c84d0d9d34
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/config.json
@@ -0,0 +1,12 @@
+{
+  "version": "2",
+  "build_cookbook": {
+    "name": "build_cookbook",
+    "path": ".delivery/build_cookbook"
+  },
+  "skip_phases": [],
+  "job_dispatch": {
+    "version": "v2"
+  },
+  "dependencies": []
+}
diff --git a/cookbooks/my_cookbook/.delivery/project.toml b/cookbooks/my_cookbook/.delivery/project.toml
new file mode 100644
index 0000000000000000000000000000000000000000..c453234bc9b4b151cc57be8f613ad75c614dc762
--- /dev/null
+++ b/cookbooks/my_cookbook/.delivery/project.toml
@@ -0,0 +1,36 @@
+# Delivery Prototype for Local Phases Execution
+#
+# The purpose of this file is to prototype a new way to execute
+# phases locally on your workstation. The delivery-cli will read
+# this file and execute the command(s) that are configured for
+# each phase. You can customize them by just modifying the phase
+# key on this file.
+#
+# By default these phases are configured for Cookbook Workflow only
+#
+# As this is still a prototype we are not modifying the current
+# config.json file and it will continue working as usual.
+
+[local_phases]
+unit = "chef exec rspec spec/"
+lint = "chef exec cookstyle"
+# Foodcritic includes rules only appropriate for community cookbooks
+# uploaded to Supermarket. We turn off any rules tagged "supermarket"
+# by default. If you plan to share this cookbook you should remove
+# '-t ~supermarket' below to enable supermarket rules.
+syntax = "chef exec foodcritic . --exclude spec -f any -t ~supermarket"
+provision = "chef exec kitchen create"
+deploy = "chef exec kitchen converge"
+smoke = "chef exec kitchen verify"
+# The functional phase is optional, you can define it by uncommenting
+# the line below and running the command: `delivery local functional`
+# functional = ""
+cleanup = "chef exec kitchen destroy"
+
+# Remote project.toml file
+#
+# Specify a remote URI location for the `project.toml` file.
+# This is useful for teams that wish to centrally manage the behavior
+# of the `delivery local` command across many different projects.
+#
+# remote_file = "https://url/project.toml"
diff --git a/cookbooks/my_cookbook/.kitchen.yml b/cookbooks/my_cookbook/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..2734b254fe79489f488e71778c2ecfbc89d51902
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen.yml
@@ -0,0 +1,27 @@
+---
+driver:
+  name: vagrant
+
+provisioner:
+  name: chef_zero
+  always_update_cookbooks: true
+
+verifier:
+  name: inspec
+
+platforms:
+  - name: centos-7.3
+suites:
+  - name: default
+    run_list:
+      - recipe[my_cookbook::default]
+  - name: with_role
+    run_list:
+      - role[my_cookbook_role]
+  - name: with_calc_role
+    run_list:
+      - role[calculator_role]
+    verifier:
+      inspec_tests:
+        - test/smoke/default
+    attributes:
diff --git a/cookbooks/my_cookbook/.kitchen/default-centos-73.yml b/cookbooks/my_cookbook/.kitchen/default-centos-73.yml
new file mode 100644
index 0000000000000000000000000000000000000000..779808068875e01c450c45465e7b38826c4cf4e1
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/default-centos-73.yml
@@ -0,0 +1,7 @@
+---
+hostname: 127.0.0.1
+port: '2200'
+username: vagrant
+ssh_key: "/home/ravi/chef-repo/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/private_key"
+last_action: converge
+last_error: 
diff --git a/cookbooks/my_cookbook/.kitchen/default-ubuntu-1604.yml b/cookbooks/my_cookbook/.kitchen/default-ubuntu-1604.yml
new file mode 100644
index 0000000000000000000000000000000000000000..a827e6ea322c55df4fa6db7f522f25442b595449
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/default-ubuntu-1604.yml
@@ -0,0 +1,7 @@
+---
+hostname: 127.0.0.1
+port: '2222'
+username: vagrant
+ssh_key: "/home/ravi/ravindra-chef/chef-repo/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/private_key"
+last_action: verify
+last_error: 
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/action_set_name b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/action_set_name
new file mode 100644
index 0000000000000000000000000000000000000000..0de96597022d0aadc1f8df7e966ce2fbe24f2324
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/action_set_name
@@ -0,0 +1 @@
+1498896505
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/creator_uid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/creator_uid
new file mode 100644
index 0000000000000000000000000000000000000000..c227083464fb9af8955c90d2924774ee50abb547
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/creator_uid
@@ -0,0 +1 @@
+0
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/id b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/id
new file mode 100644
index 0000000000000000000000000000000000000000..df63b6b61025acc14bcec3a173eae851ce34d8a1
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/id
@@ -0,0 +1 @@
+e594f032-90b0-4951-9765-b2df53df8f38
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/index_uuid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/index_uuid
new file mode 100644
index 0000000000000000000000000000000000000000..7f30bff85633d89411415d49395095ec9e830602
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/index_uuid
@@ -0,0 +1 @@
+e9d9241f0e124a7db4781a87fed13077
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/private_key b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/private_key
new file mode 100644
index 0000000000000000000000000000000000000000..a44132fe6f6ed6148eeaa9b031f5c380e5f3de0f
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/private_key
@@ -0,0 +1,27 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIEpQIBAAKCAQEAthzKTzXDLbNZzDpUqs5ZesuHngrEbYubjpV1S8pj3mk9okS0
+7bUUDq/N4qyldsbk8Uva6AlVzyBC/sxERzxeSWjCwlh5RX+bq0/CEErPwHra2czi
+1Ha9ZyJooqa7sQVOShYm9bFh2BSOfJ6nCvomPKJ0fuuER0fXkh58qSY903BwPd4u
+YYRMF1mfa4WX0TXkzE/g+MZ2qW420q1vk7YB7MN4/NtS7FOEfCjQv2rEyy/6jIW1
+2JjA5IcKpO+9ZsbgxoNZKkDGYDzkWGK2ihsZbm2YZZ2KVYMJ1y2lVk+INFO3JU5d
+cV607ZhfVg6bqd+qVK+/LBwAzZBgSijpL2QIjwIDAQABAoIBAA5taXmtALF2K/8J
+//soLd6UkUHsCHPFQ6WgIZLHjfHo1IEugEb0uYoQU3dJxjIKv8h+AfGwC6RFIgmd
+lSsvlSirrAJJkBH5chO4Vd+EjcDp+ryWhsHeRlMNXszD+MqlaPZlmuCMFPxRZJhq
+2UD9YFodZK1Ja0laX7GryKR96xf9BiyP2Svx9S6D81IkGZRBgvM9vupK/8WiAuE9
+gJbGl6G/X5JnQdHLVfq1SnCyDEi/Bf8kRW33rc+F9DJMpTd7E6SZW1Kk39RtLSjf
+vOdUNuN5qHM7/Uhb3AgknjACvfCeJ/nmEm/hS1suuU62pq7GYTQtGAwTEuLzO+rT
+Z92tjsECgYEA3wxRFzX1DERSLW0+Ao4/+VUT9kFOaQj/Jt7EvzbVkIEDXgypc5yY
+Q+eRzrj9iQZDjFHrIK6kPyaML8nlsbqACJvkH0gjGL/e0KizlA4VVxjShlzob0tn
+N92S1tdtGin/6khMgc2+CQj+Gq4RkN4a4CchemAZJkwG3o/kmz9ysn0CgYEA0QRJ
+Wzk2DCCuNVd0XgVGCGvCtqWfyoncsemiYtbNlnuT3IbvAGTHGNZNYsPv8kNhQCsb
+vOSsh7K/5eNH/6LLnvyecOjP2Vi5gwSk/Q60Mfraxz29XRfbs8ya45FgwX+sIOEM
+S17PDq4QxvO5uBZ3FWR3+Jwg4hkZibZbDMyRqPsCgYEAiL+QZ96Y4nBwwZEcV4zH
+BCJ5Hp1jaVoutLIXhfQkc3fljJ/OtCbp45fx+P/J0VyZxUnkEiGAaYdEo3fw70oc
+fSq2bcdYXTAld2A22SrZQpDhYadMig98tO+Pu1BQf54IXKb+4QY24Gs2/zyBYIQL
+jinviIuqX6R1AbbOva/krjECgYEAtH0PG0b79N0DkexDAC1tnDfxm+bJZQxHFxq4
+rsDuJtPviq66E4zyn+/uQysPOBQXFmIjQan1kfg43Tq2IXlie5eI+dcQJI8JIqoQ
+DrVzxPTplsMpkgnYHhrAZWJUOsMU0A+Fnk/wXKzSr/omlWBQ1Jg9QOERRCyIcPKX
+DSZZYaECgYEA3oDR/NBE/fpa37sxDoGSFb46XFrvYFrMmriLARh4umG8hqMeFzOW
+X4TzYZm5ps0ov6kz3vF2w/ggtBgqJMBMbfTY6TSlyqakqs7kuDkW8WpNlLca+GxJ
+eB14ZxASf1AUg67v126qO9XLhL9utVDXoW64UtWVs1kG8PSdTv8JkbQ=
+-----END RSA PRIVATE KEY-----
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/synced_folders b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/synced_folders
new file mode 100644
index 0000000000000000000000000000000000000000..7c4d69cf0d86a8da5d43d52ab9f21719d9b01caf
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/.vagrant/machines/default/virtualbox/synced_folders
@@ -0,0 +1 @@
+{"virtualbox":{"/tmp/omnibus/cache":{"create":true,"guestpath":"/tmp/omnibus/cache","hostpath":"/root/.kitchen/cache","disabled":false,"__vagrantfile":true}}}
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/Vagrantfile b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/Vagrantfile
new file mode 100644
index 0000000000000000000000000000000000000000..c93e99f286ce11edb89f26a2adc3b249270da779
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-centos-73/Vagrantfile
@@ -0,0 +1,9 @@
+Vagrant.configure("2") do |c|
+  c.berkshelf.enabled = false if Vagrant.has_plugin?("vagrant-berkshelf")
+  c.vm.box = "bento/centos-7.3"
+  c.vm.hostname = "default-centos-73.vagrantup.com"
+  c.vm.synced_folder ".", "/vagrant", disabled: true
+  c.vm.synced_folder "/root/.kitchen/cache", "/tmp/omnibus/cache", create: true
+  c.vm.provider :virtualbox do |p|
+  end
+end
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/action_set_name b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/action_set_name
new file mode 100644
index 0000000000000000000000000000000000000000..bd63d24c35b9913135f1252b42ed1f021d45b123
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/action_set_name
@@ -0,0 +1 @@
+1497975255
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/creator_uid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/creator_uid
new file mode 100644
index 0000000000000000000000000000000000000000..c227083464fb9af8955c90d2924774ee50abb547
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/creator_uid
@@ -0,0 +1 @@
+0
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/id b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/id
new file mode 100644
index 0000000000000000000000000000000000000000..367795f36fee9c1fb7a04b8b7d23859e238a26d6
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/id
@@ -0,0 +1 @@
+b510b6e7-885a-4908-b843-b6d490614022
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/index_uuid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/index_uuid
new file mode 100644
index 0000000000000000000000000000000000000000..45965173032196048936bfd8dff5066157f0cd44
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/index_uuid
@@ -0,0 +1 @@
+2f3a83ec65f24005a193a179f09638f0
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/private_key b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/private_key
new file mode 100644
index 0000000000000000000000000000000000000000..0edc05fc2d98726798baaa05b2b7358000844d38
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/private_key
@@ -0,0 +1,27 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIEowIBAAKCAQEAy3b+0YZvMhtHtq2cphpResQmSwAB1V6sJzLZ+kZ/oPOtiu3N
+E6YNWbY67F5nwGxDCmAdRkoK/o9hPjkdEDjHzCMJ6ZlGLetg+a0M+RA/CKX7FDKk
+M3PQNZPwUIcLk3z8frty+VUsJrcfR/q7E9bMsbAM4Fv5Mtxtk7d3gfUs0y7qwyM6
+R1gK31X8pUAaCrmWwiLNkiSfcr1MyDnXovQU/SXSq9HAf3ecbLSoLHoNdbSs4AAT
+kN8SI9E3lFwQtucKuTBIyGLOzNOFK0VEgk1PU9nUo6Zgh5mRX7/1btP6fJ2jTCLu
+9TQbTxl54XANyY+r05PG4XUkUz0iQkejrkPx0QIDAQABAoIBADghe+sRy1tna0Fa
+Y/zvBct4kZffSKI0nAm0Xa5OBKfCkf3h3NGu3cACJf9PjA/pzhTuryTVCHNx2sHv
+v7TZ9US75eAsCNBiPz6iHxIXCUy5far0zZfkO2yMg5+zod3ufTn5PJ7MgIGtw1N4
+OGQgvhfHGcZLmVQOu6wk0TNpEBSyPkarR9cEH9cxC/faphs4mrhPeUkO7HsbwxTB
+cbftL2/w6WlvHvu/i4eJVJIP3BWzctAoUwkAriRYqwLVywCZKOvC1Dh3wCOxjO/F
+b5i70AwiHupgl4P/uRAU977kMl6RGgf8TQTAdIlgqX+5faI4GrjBiYxLhHwsCld8
+uNK0NgECgYEA+/2LF6hz71UY/LBWB0PQFyMQeYB1S8rR3HBGGqrJYGRbdEFM2vJ4
+JL213jfJSACua3/R7Mw2d4PYesrYrGb0Jt56aj+P7N9yEvvVou7zFbVN72dxhr/C
+9HkltDseFTkPCwEgMGmFr1wSCZ5xRRDy68T780a6Z4WSxnO/Y0RA7W0CgYEAzrPJ
+xUAGOCbFVl9MbKI6vtDEmX+r2aF1qL8xuIhEbYBRfGaMBu0TTP398BTMNb8cyij4
+pAfkFcvTXbNM0wENCPBK8EWYiaNGelKEe4qVAN6hCNpYKl3wByemYKM63J2smqgI
+VlF+fQceR3o7FVr3abrSslUbdnbjz0vwr6hay3UCgYB0GKImqjOPxpMWiF96RWHv
+5vXGJMrlunHpr8h8rMbOpC4GZ7dzAFceBlFuKiGQDNBPMrqS8Jr/gT0RhbdB5sUB
+y2p23QYASgoSePg6cwCHtdpMPEpvnJXDcLVQThRUDs/BcClWZKd03WRqDhd9jIt+
+2GiD8sgavc2bpOQ+ZcnMGQKBgHFE0leV6xKQJGldVZreF4UDEAjxjnF26evrwcpW
+WfELdRvPcgJFneL9+E68ht8Y+CTL6NyyOkm7ZPseywWBuOviCZ669IjQAUn8t/6f
+BWHxnZslU1T8HxE8qA6ixBmrCa/CTrdGdyL6aJxQndno/FVi/ByfSKpVIicxfRY1
+EnQVAoGBAL8gT7caMncv6gcROwgvLQbRat8czUp+7BM3vx/SXexBeQeSw6tNqvT3
+mEUJhfGb3FRoSBbVmcqJZl2kEfDtxvscONGrQABfWx7Rq7qDMPAmQuOqmeWlIttf
+EioXuyH6WYfPaOMvR+L3WKy6OUOJSWVn3+NbIJcGVWg27iqcdodB
+-----END RSA PRIVATE KEY-----
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/synced_folders b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/synced_folders
new file mode 100644
index 0000000000000000000000000000000000000000..7c4d69cf0d86a8da5d43d52ab9f21719d9b01caf
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/.vagrant/machines/default/virtualbox/synced_folders
@@ -0,0 +1 @@
+{"virtualbox":{"/tmp/omnibus/cache":{"create":true,"guestpath":"/tmp/omnibus/cache","hostpath":"/root/.kitchen/cache","disabled":false,"__vagrantfile":true}}}
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/Vagrantfile b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/Vagrantfile
new file mode 100644
index 0000000000000000000000000000000000000000..5bb183bceb5d21ffb652ac67b98bc9b739591bcc
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-default-ubuntu-1604/Vagrantfile
@@ -0,0 +1,9 @@
+Vagrant.configure("2") do |c|
+  c.berkshelf.enabled = false if Vagrant.has_plugin?("vagrant-berkshelf")
+  c.vm.box = "bento/ubuntu-16.04"
+  c.vm.hostname = "default-ubuntu-1604.vagrantup.com"
+  c.vm.synced_folder ".", "/vagrant", disabled: true
+  c.vm.synced_folder "/root/.kitchen/cache", "/tmp/omnibus/cache", create: true
+  c.vm.provider :virtualbox do |p|
+  end
+end
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/action_set_name b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/action_set_name
new file mode 100644
index 0000000000000000000000000000000000000000..7fc156f5b2eac0b660109dcbb649398589e7a4b1
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/action_set_name
@@ -0,0 +1 @@
+1498730429
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/creator_uid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/creator_uid
new file mode 100644
index 0000000000000000000000000000000000000000..c227083464fb9af8955c90d2924774ee50abb547
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/creator_uid
@@ -0,0 +1 @@
+0
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/id b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/id
new file mode 100644
index 0000000000000000000000000000000000000000..03648c8454d9fc42d11b69523aa31314ca3ee72f
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/id
@@ -0,0 +1 @@
+482d5021-daf1-4af8-a5cc-4d45e7e720f4
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/index_uuid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/index_uuid
new file mode 100644
index 0000000000000000000000000000000000000000..06d76e2ef1c0c7914302aa0c80455d605ce091e9
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/index_uuid
@@ -0,0 +1 @@
+b182498b1c0f4ea0964cda3e320282d1
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/private_key b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/private_key
new file mode 100644
index 0000000000000000000000000000000000000000..c009319c4ecd8527b9b546e3b491d5ed1616d9f8
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/private_key
@@ -0,0 +1,27 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIEpgIBAAKCAQEA/tidyBxUAphx+M2bY2puaq3XUcgkOubHxwGSPO4DADgRyHwS
+ZBaAlqVt4BajGJXsPTO/Zsb9T+Ti65X/mHbIQ2yAVr2LXJkXNlJUWreMTeo5fQps
+vbqsdrxg5eA4cyBv0+T0pO12aTIFZ7yhka6m5hr3CpnpDm58uSlY0B9C9e/OIB9g
+E9LxVcNzL8w1Icr9Dqrn3UwrU0t65C24X7G8fQU4ItcF6gyh8hW2hNGBx1W8+Cyz
+Pn9ZTQwVEY3+x1vd6EOAtoUfXbw9Z0bIt58mefDaLj7mlwVbus+lggp7GQUZAheo
+L8UtUJOk/EmOat2dwJseS+6FsPgZfYmVN68YLQIDAQABAoIBAQDwKbFfwRqGq6VU
+hGb4pHdT/2nYP1WtUIlaiKeI1gBr92sC1bH7Mp2R2mqWcJ7Y74iHELpCoCpeXWRg
+AaayxtXpfFnh5JRt+jO+1I18RFdrodz1cpqRnlcjOlnSqKBqFlpshOrsdoBNmH8x
+iLl2cfIFDcpb6jmQiRzu3gE9eQiAfNEHbDjYqMjY2++YqR1EnEgp4Fc4Lo0aBCIV
+w1CT2KM9WwMLHTtM6dgew2pW5Oql5jgZOcSr36wIC7SjaC4ejruGjzO9I5fpTQ9F
+yssmzumyu7hyf/NTQMf0TTvoPcSb2/lsmRHYOk0lk1w1Y6PJqdAbbPTkUgpd1MVn
+ayB+FRG9AoGBAP+SWzhqGqbZL/dcUlaVg1GdFXzd0LRkb6MurO/w9MHfoJuyIYbs
+hj9MdvvLiB6h1RO+Q7uU0rVT8rT/4LTYF+QazA3mqyN0CblODgLCgs1LNItmEu1V
+cuRwCWj2o43Qa9GRZfXYdWeejBzS0P4Ft0sSxt4Deb3N5oupYTSnZ5cbAoGBAP9F
+8uBaSmNXci04xeSs6U4p6QKO4T+Px4+HOOxyqaJDkdCfDI5fMocJof234nTFl3vF
+KpZn3vP7MHXL9nVgHCNDkT7sWvjv7FplbGIOWoRsvkJhDxAcYwV2InD/Z9oSsMJm
+StDOP3j2qACyH9GR6+7jC/AhO3LFDMHcOuGChhpXAoGBAJVzTIys33D6SKZqAmxH
+ekdbiJlATS9wHChcvxyA12AYGZ9yh1CTN94EJQARgUQIdsXY2Vr0KFOJB8D4cLrQ
+Mwhc8z6dyS4uSRFnp6HNhRfwBoYN5ruK4Gjda2NJ91KSsroWQH2HWwCBIoYocbZa
+OVlZXZmuhp6LrWm2XvWff2BJAoGBAIF9HgKoSmuyA/zke53QCFjZ8ZSWnbP8XyJz
+WXC3iU0CMYk95MSjjaHqRP3KtVi+kmT6UuwQrIves2pNmCtaIWvR7m+YvVzhd2cz
+Y5Mp7MiX0LsjONzXSXOPxVDEfg2kxX0XHoRk2tWlaPtRX8qS1rdK/NdGRD2nrxz3
+dfbGmvfpAoGBALFg8Xp2P88bMkz8oVOExotHvGwsO1sWbwPusjjpxAs0kOFkfrFo
+N+0rGVPlY7aphzi2KwkRiDAAMvIWiuVKw9rvCfhrp6SXbdXZ8Z9FFZz61pv+OfPV
+uWaUCtkj6K3TZ4+SCuV6fAb4ZXhj2ckGhJHD7xOLeLqJ4TyacGoQOTP4
+-----END RSA PRIVATE KEY-----
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/synced_folders b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/synced_folders
new file mode 100644
index 0000000000000000000000000000000000000000..7c4d69cf0d86a8da5d43d52ab9f21719d9b01caf
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/synced_folders
@@ -0,0 +1 @@
+{"virtualbox":{"/tmp/omnibus/cache":{"create":true,"guestpath":"/tmp/omnibus/cache","hostpath":"/root/.kitchen/cache","disabled":false,"__vagrantfile":true}}}
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/Vagrantfile b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/Vagrantfile
new file mode 100644
index 0000000000000000000000000000000000000000..b1c7b2bcaa61d25e80d8a5c2ba9c71576b0c2fc5
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/Vagrantfile
@@ -0,0 +1,9 @@
+Vagrant.configure("2") do |c|
+  c.berkshelf.enabled = false if Vagrant.has_plugin?("vagrant-berkshelf")
+  c.vm.box = "bento/centos-7.3"
+  c.vm.hostname = "server-centos-73.vagrantup.com"
+  c.vm.synced_folder ".", "/vagrant", disabled: true
+  c.vm.synced_folder "/root/.kitchen/cache", "/tmp/omnibus/cache", create: true
+  c.vm.provider :virtualbox do |p|
+  end
+end
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/action_set_name b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/action_set_name
new file mode 100644
index 0000000000000000000000000000000000000000..da9a1e14eed5f9b3d6de2ef4b00ee76891aa0b61
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/action_set_name
@@ -0,0 +1 @@
+1497975563
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/creator_uid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/creator_uid
new file mode 100644
index 0000000000000000000000000000000000000000..c227083464fb9af8955c90d2924774ee50abb547
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/creator_uid
@@ -0,0 +1 @@
+0
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/id b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/id
new file mode 100644
index 0000000000000000000000000000000000000000..dd4f69683549092295b1b574a75d6f9b31977a49
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/id
@@ -0,0 +1 @@
+3f377474-4710-4019-b3f3-f3359db91309
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/index_uuid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/index_uuid
new file mode 100644
index 0000000000000000000000000000000000000000..d588fccc48f03cf43e1f8880da6eb11fd27ccfed
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/index_uuid
@@ -0,0 +1 @@
+16deb92664ca4359bc0eefdc886b9950
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/private_key b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/private_key
new file mode 100644
index 0000000000000000000000000000000000000000..1a470d446cf7f1f31fe0c5e0dcd3eb6ceb5d1cc8
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/private_key
@@ -0,0 +1,27 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIEpAIBAAKCAQEAwAINlIpoJsw4ie0XVjduXbBii/DmHoQAK39qyqVLeYwUV3ks
+E2c1SaZhK1Mr6iFOTyiN99Z3d/RU4J7XyKrMjjL687WPL3cSH7Vd/iKsPE1STEq+
+s30TzpIH1xu+Rg9BmtnllEyaA67iEh0Jfkf22rKYYCcdY6jBP8BS4ciNhuWsQSLC
+rUNB/AYe/dE6qiE8EQ4GJVwMsknI7qj/bP6eKGvOflOnww0b30B2pwlVUYsImv4m
+MW0LTRUJkBMGdfUg94mHCYtbTCofE+yC1odEnrIUJf76P/kpSMceEtyjZycauHyz
+wfESKjRk0KSJbY+W5sQn3nu5oG0I9T0XAErYbQIDAQABAoIBAQCrGGk/hwH+KJbt
+GO9lrWlUZRu7dcOpR5jbKeRghWC3A8MQm3JSK/LJGVCXCbslG96rHQk84sh8hKWp
+rwG7168Fu5nx10SrWCA3TyddkUoHRiNixmwehwNCXNBNt3Qa+/dK5IX2WzgWthzP
+ZT6TX88x3Fl5vQEsUDE7/MYeWdb7b1xvC+yVVp9j8DaE0kzVzEfp9DlkrjVRlTTk
+Aq9b+hZFM4ExA22+mUopToEtfmz10cS4Cy1dDRKSaTWviirLOmcdZYWBMO4TIeAl
+/eoJsjMGHphz/347ld7jJrYw8HG6l8Rc7mno2/gXSXJbiHnnKXm8wRzhQ6ypA1yB
+/hf8NUzBAoGBAOVuTFFnyK7yuado0N/vB45qRuobRvAoG/azaaS8mdqUMbO7IjuX
+GbyIqscdCjiG3hlScpysdC52Hs2XrTXmh2mGgZaL2B04k3Nrop2xlwJ7fAkEdS0d
+SUMn5m+TwrgpGPXPDT5ANsJKV9OXuGQovpfi9OrO440eSuGEUhqMbFP9AoGBANY+
+UYg/0HJU+aQDsYHoMJxCs//uko/5mHf4re8rLoPwxDswuoj1er17pBwxHrrKQGJ9
+lUjcGo+y31DxVhkPO4636n/VMzVckCw5w4Ta45qg7TzO47IOs596LbEdc/S03f6Y
+hw+rVnmTKuHrujJOrYvOuW54u8hQG3U9hYJqTGkxAoGBAM9xQx/3rsRAQwzTAMj4
+3uQtw6C4uRM7sM0Gu2ZwAMxZYfcYJIOsw2BsUb1mzG7/wqEyot52LzYzJvbNRZeO
+sLEBJPpxxx3koa2ijI34nIlqDWQ525jG+g72bKxF9bF9t0vJwjee5+QURATVEau+
+C1ZZpwkHt0dJNHtjoLjQbsIhAoGAOW/np+GD3sMNUn1y/2LidWIko76wKE1AJRnU
+d8RZ6iGIWl4MBF/bkiUtsCkzFdzXOhB1D12C+Xd5C1hIPtuomfCQu8jKu8mfFVw/
+IMUWNARk1eKZhMkQOvckfNFqnvZGddUqkHbc7icYXg02k/on6M15RTa1EVT4p4vg
+2T/qUGECgYAltSaEOBYbWZnEOZCnBPwR83xeZYACha4kuSPhugvVKeNhH1ESl33j
+OZ00P0BWmNxZNTep471jRf4BM0m+beh+WuuMrb/mFYje/z7y6O4/JoLN9+c1ozUk
+5Toh+z+P7bcW0Le2NIVa8Jege5UWxQVImk5QsSYG/H0AQ4iyp53OqQ==
+-----END RSA PRIVATE KEY-----
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/synced_folders b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/synced_folders
new file mode 100644
index 0000000000000000000000000000000000000000..7c4d69cf0d86a8da5d43d52ab9f21719d9b01caf
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/synced_folders
@@ -0,0 +1 @@
+{"virtualbox":{"/tmp/omnibus/cache":{"create":true,"guestpath":"/tmp/omnibus/cache","hostpath":"/root/.kitchen/cache","disabled":false,"__vagrantfile":true}}}
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/Vagrantfile b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/Vagrantfile
new file mode 100644
index 0000000000000000000000000000000000000000..78cb2fd6924b616dcc1595af190e4612b053b169
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/Vagrantfile
@@ -0,0 +1,9 @@
+Vagrant.configure("2") do |c|
+  c.berkshelf.enabled = false if Vagrant.has_plugin?("vagrant-berkshelf")
+  c.vm.box = "bento/ubuntu-16.04"
+  c.vm.hostname = "server-ubuntu-1604.vagrantup.com"
+  c.vm.synced_folder ".", "/vagrant", disabled: true
+  c.vm.synced_folder "/root/.kitchen/cache", "/tmp/omnibus/cache", create: true
+  c.vm.provider :virtualbox do |p|
+  end
+end
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/action_set_name b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/action_set_name
new file mode 100644
index 0000000000000000000000000000000000000000..140ab637523ba5d6cf02c102ee76a59896c5a860
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/action_set_name
@@ -0,0 +1 @@
+1498890201
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/creator_uid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/creator_uid
new file mode 100644
index 0000000000000000000000000000000000000000..c227083464fb9af8955c90d2924774ee50abb547
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/creator_uid
@@ -0,0 +1 @@
+0
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/id b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/id
new file mode 100644
index 0000000000000000000000000000000000000000..7cce96ca73a85504daa529649d13270cc6fdf0a5
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/id
@@ -0,0 +1 @@
+cb81e554-5fbb-4ff7-8824-8892323f5373
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/index_uuid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/index_uuid
new file mode 100644
index 0000000000000000000000000000000000000000..94421383917120940026ea55dd71f7c8abf70c11
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/index_uuid
@@ -0,0 +1 @@
+651b8b05092b4b6ca75ce585ae5cf163
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/private_key b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/private_key
new file mode 100644
index 0000000000000000000000000000000000000000..abaea5185aaef0047773ca525a2a50bc92880e42
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/private_key
@@ -0,0 +1,27 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIEpAIBAAKCAQEAzKbIXe5ASZ7qy93VCNzyOJMqhpVdY+n/ouxHwWBPjqingg7p
+UHoC7OOZSydnra6CuJiykN69oXEJ7xO0my0glDkeQ/HCq4KX/l0hKnmqWHF/V+9i
+9jgHj14zSmy77UTIkYAmEEsMULKFIyq8tVUAbiT9LQYF1NlsJDf4ct4Nf2f6zZXA
+BEZSQw8kogGM5Hor+sgHpatOjx4iWihuwpXMw5wsUzXfTmLNMteAzXB0ydBVeEGr
+U74PIemUquxOlQPQB3oMJtsXqKoMsE6YYfOWE6nsTys2ou7KwEsBhFZgvrfyyFv1
+TdEeSJJxNpjz0UcvqG/9ev4hGjTg7q0zod/xwwIDAQABAoIBAFIrnUPpx7JHtqrI
+lSML483HeUm0a10UtWnrSRxh2U/EdA2Kgy+m7cnD0OcWGVDpQt9voDL+3FEYHA78
+cIXl5rDdBkPtrGZE91ZQemKdm0ILwD/EhI2sDY0JG7sEUaiA969ELwRXvcghBcgK
+/t4oFRYkj+smAe1mpz8bogwtEGpY00mTlMi5UazPgbZS+tpjHW0Ofr2o4m8BL55c
+0KpLHg8HcM3nO8HF6mAFIqUZW3HLmRl2g9E8pfFL7l7BBaCXnmDzyHI50RCviGyp
+6IcMGRlUsPyUt2jE+A0xG8gvxYeuhc87oRc3qYbzerKuVcx+mvGRxcO89xgTc5pu
+bBbXUQECgYEA9wF/ObkW7JtfNZmPDhsaT8XNwzNuZ1pGHHhrE/wqv4hcI1M6EXCT
+tQf11rtjnXUjR28gYi5OX4mIXoCP8LgqkFZOhNF9d0lQVAdUnG9Ab1ArJ+WzRGH8
+JSNLhz2xsCRthkCYbiCf1BGsM5EI6UPTsPmGrl40nUFFLrsvz5C3n0ECgYEA1Bp5
+HIBSdI7eHs1oMN2/IAOYfwzZdLN+yR73t3CEJfDZpv/xv39E3j5h66irVc/Ft89Y
+dEkY1h8Li1LRiPHopkj0fV8IkOEp9lZ+YTHVLkyX8SHKaBKiv0ailDMwuhpqq3Av
+3P6auM3M8x+ltkZZpDvzVgZJkzVkZ3x0W41IFAMCgYEAuXZuSLEo/U9MFbrPJxBC
+mVM0RDUB2Kh3rDjebYsRre59ACklmKKmxW7MsAbTrQ6fBqvx7MZIIoPp2Ms/SMd/
+bhDfs+p4AnER14YJicwe3XWcccCO8fGAmYH+2/T+zfsMIZmu2kG0wE7ktXNY9Yzw
+DhnNfm9NoiW4BHaYV4mZ1gECgYB9JRGIa347H4CXFAMBshRuwzBa5i332WBZMlhe
+d5jA+haxnhn5LxJnPs9vyBkvjGPQTBqYofhxfefF0Juo/XKTikAXKNdZBEFKA0aV
++l0Z8D9GGvXd6gD0cqzCXGHHrIZ7mLnk3qRTnbnrSSTxIxkI+gZdH2CR5tLS7G+L
+BRUeGQKBgQCQC7cfMbVtF7ywcwrq7fUx3TH6pI1yf/A0LNibzmTZiVnS13e84YI5
+XEH5pK15Ig8KbBoxm2cNe9U17puE4W19i1wXyWSlyzs3Fo77PCRVy7s+9AfDnUlC
+8Uh9RmKCUmI/2uxFJRzWtl7+NEjf0cbVqNSavjun71Xm+z6kGopZAg==
+-----END RSA PRIVATE KEY-----
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/synced_folders b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/synced_folders
new file mode 100644
index 0000000000000000000000000000000000000000..7c4d69cf0d86a8da5d43d52ab9f21719d9b01caf
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/synced_folders
@@ -0,0 +1 @@
+{"virtualbox":{"/tmp/omnibus/cache":{"create":true,"guestpath":"/tmp/omnibus/cache","hostpath":"/root/.kitchen/cache","disabled":false,"__vagrantfile":true}}}
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/Vagrantfile b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/Vagrantfile
new file mode 100644
index 0000000000000000000000000000000000000000..f14f86d885300c1862721762751bf64703ef7b22
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/Vagrantfile
@@ -0,0 +1,9 @@
+Vagrant.configure("2") do |c|
+  c.berkshelf.enabled = false if Vagrant.has_plugin?("vagrant-berkshelf")
+  c.vm.box = "bento/centos-7.3"
+  c.vm.hostname = "with-calc-centos-73.vagrantup.com"
+  c.vm.synced_folder ".", "/vagrant", disabled: true
+  c.vm.synced_folder "/root/.kitchen/cache", "/tmp/omnibus/cache", create: true
+  c.vm.provider :virtualbox do |p|
+  end
+end
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/action_set_name b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/action_set_name
new file mode 100644
index 0000000000000000000000000000000000000000..40f9daa72ecac06b64aad022aeba463370c24c08
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/action_set_name
@@ -0,0 +1 @@
+1498896867
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/creator_uid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/creator_uid
new file mode 100644
index 0000000000000000000000000000000000000000..c227083464fb9af8955c90d2924774ee50abb547
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/creator_uid
@@ -0,0 +1 @@
+0
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/id b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/id
new file mode 100644
index 0000000000000000000000000000000000000000..627afe0a7695e80a646af6e3cb614ae1a72b982f
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/id
@@ -0,0 +1 @@
+8a9d3b21-41be-4472-bf3a-aa54a495ddc5
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/index_uuid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/index_uuid
new file mode 100644
index 0000000000000000000000000000000000000000..3a1dc1a38baa69192d124b63f727c6156e5a5829
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/index_uuid
@@ -0,0 +1 @@
+088730577bd04c9db71ceb59ef421f5e
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/private_key b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/private_key
new file mode 100644
index 0000000000000000000000000000000000000000..b62e78758949b621f28815abc7dd90175a9702c9
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/private_key
@@ -0,0 +1,27 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIEpQIBAAKCAQEA02gCXi4j+9dkkBdrxBw2mxYuTsuGFGA+r0yzk+F+ZrOun3K6
+CTJk8N5RS/AMQTgI3oTXKl11WEm/zAS2vaL0mXwKtIGOZLxAnr/I/eC29S9XSFJS
+UpepdY/TYZXtvWZKGNUvzR7Pg9ksN4gYpqCzbwn+enFx/Il9lmKkVLGzK+4BPmbm
+KxPxjkPEN/Du4GFZVh63d0vKVQcydXsBCaTCdDRjhTc3cC6FZ9lVbW0/dzUXyKty
+GP/JfInnyw/RtZc7E6CXHWrZIO4S5UOWecL7tqhZa2URD5EnEvwVkQBnM4vRGeM3
+0DqM1lO9hkWfN3mNTe+kMEntI0csjSS8w+nmQwIDAQABAoIBAQDIta3R1sKpHpVG
+TEYvWY3qbgOnIYl5nOrGqe6wjtzgCuXWUikYBDVbjebnTs+Dt/yLrtlNSo/XM6WZ
+wDvzDVxmwCK1v27+atB7J6BekNODMuAONMId0gm8KMHKm3qsYAonS3fnqcHg7vYQ
+/vBQerAA0x89Bqnu1mZauepE0rVGFSVU0Xd3WHU1Bf09f2VdsQGNEsOVpSIROHWl
+oKNJgLEFDzRkVPY9zUcBl2LAhwXhGeciAiL3cFrdJPJSJdYOdsIrGJ0s7ej4D7Id
+zrcwHhFXD+TE3WM+DFCIuRKhPPz2JdhF2kOtvBoyFQqLPZQvwNdhFF5QQ36q+Sva
+PJVsqS2BAoGBAPnAtaQsusVk1cRfe9MqQJRZ7hA5yvIAD6lHihedOWP0icYM/QXb
+JTuazQC/qCa3TnDmwlrRb8Tdhv4ZfbNZO9mwsDfPHw++FjaaptEJZ7Loovm2w7Ro
+fnQu2EbhW6PSUmRGxv8reKUNFqH20orEwZibAv0koGGFfQWwfQf+ioEDAoGBANix
+v4qssvQ1ZcceZzbvk0vFfP4eFlAcrAieE7L6Pu6MPTIfpL/SJy8ergDel4dE61qI
+U8n1wmjZYwS4dBZFS/P7YZk5xOS555KSgN8qrcFG6ZcZKgpt6OxZIBHwMgqfo9qS
+j9Uw7TSOJ8neUklfvBpDbzIVd7VViKfqZCQzCeHBAoGBANVxXYsOcxxJvetSkxd3
+r7NZW/xf99J0PO415o2h369OCQTKit8bV6ml9XejVAiqdg5FGGrXPMcpb7nvfR7u
+rxivSRqZF3mzwXYvG0vg1s/uw4HYMU8YUqHmew2wgUnzcFikqGLg+v1Lv0DyGSNh
+XfaW26oOSEav95YKLADOB/6TAoGAf6HKKNrpmK9u4CZHMvNPdby/j0mXaN5KcdTx
+02RT9tuBG+nJdvZIABf48ygoZhMw8KUFfRoUxP7ttJUUQx3Ty8QPy1lcYEAjZpCF
++WxA5WtoIIhA29266KLiIc6xGtLGhvH2Z+KmhGMKins5SmBqAaogb4Z3eMYFdKm5
+DB1Hv8ECgYEA7GESeezzMT7aWmY9Gi1z6ffwfLY1PHhOVEo+Fv8nNKntfolu0wyC
+6mB8pg0BEqxv9PYnkhWboWYnEvq/c33rlMa5U1G4Yid2a+KPRl1LTf96zFA+j52t
+itNkfdiqMrnKopGytOJIGtxW6Avhevxny4OsBjI64jeRxhND6rqIov8=
+-----END RSA PRIVATE KEY-----
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/synced_folders b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/synced_folders
new file mode 100644
index 0000000000000000000000000000000000000000..7c4d69cf0d86a8da5d43d52ab9f21719d9b01caf
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/synced_folders
@@ -0,0 +1 @@
+{"virtualbox":{"/tmp/omnibus/cache":{"create":true,"guestpath":"/tmp/omnibus/cache","hostpath":"/root/.kitchen/cache","disabled":false,"__vagrantfile":true}}}
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/Vagrantfile b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/Vagrantfile
new file mode 100644
index 0000000000000000000000000000000000000000..3cec64604302d1bf06564ce93b462c92e8ca492e
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/Vagrantfile
@@ -0,0 +1,9 @@
+Vagrant.configure("2") do |c|
+  c.berkshelf.enabled = false if Vagrant.has_plugin?("vagrant-berkshelf")
+  c.vm.box = "bento/centos-7.3"
+  c.vm.hostname = "with-calc-role-centos-73.vagrantup.com"
+  c.vm.synced_folder ".", "/vagrant", disabled: true
+  c.vm.synced_folder "/root/.kitchen/cache", "/tmp/omnibus/cache", create: true
+  c.vm.provider :virtualbox do |p|
+  end
+end
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/action_set_name b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/action_set_name
new file mode 100644
index 0000000000000000000000000000000000000000..63297a1a3c9f089e1f951242d07b61f6778f9312
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/action_set_name
@@ -0,0 +1 @@
+1498896617
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/creator_uid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/creator_uid
new file mode 100644
index 0000000000000000000000000000000000000000..c227083464fb9af8955c90d2924774ee50abb547
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/creator_uid
@@ -0,0 +1 @@
+0
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/id b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/id
new file mode 100644
index 0000000000000000000000000000000000000000..128b4cd6a4cfaedddf34a0869ee8d2ba60b43400
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/id
@@ -0,0 +1 @@
+ce1249d2-3a75-44cc-a48c-793cceb06eb5
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/index_uuid b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/index_uuid
new file mode 100644
index 0000000000000000000000000000000000000000..905d3cdd4edc43838b44f1245311a7575500c953
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/index_uuid
@@ -0,0 +1 @@
+c47f402a1e424144808124023048acca
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/private_key b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/private_key
new file mode 100644
index 0000000000000000000000000000000000000000..a8f0ddf7b697e1484d9980783caf9ad10e9d23de
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/private_key
@@ -0,0 +1,27 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIEowIBAAKCAQEA7MyxuEkFTUuV9Dj3uMhtfT+FAbr8LcTsqYToTqFoEqr6E/qv
+l4lh61c5Q5F6ZtaKVNcm71D1g3qBsiSwGsrsojA3DcKOY3nfQsvWkVX4hs4LvUjV
+oDU+9r8GjhUD1Qt4tvn+zYFF9gnDZisW1VJ0myoMRkfhcrTUlNwoy1fY2KD1QvNo
+mt2GgTmwndAg3rj8HDJmYvz/O0k9kPhGlBYu2w2YgD5G9JOtK92Wkhm6qkzLwIPg
+oealh6yWQMS+MRksXEM8YTO4wTIvpe7dGLLXyHhEXwA6F0iERTfpG9nSpab7YlHT
+3dORnhznHGBAGvcTppUKR3qkvv0eTkY66HgqTQIDAQABAoIBADTuGDeCEu5RG+ao
+KS8jld2uKhPV8PJmFyRZMfgJehLaJuX6Xe94ZOvO5lzlEsAT6n3GTcymgwptgroI
+G1kRzM0AC/5GY792iWIL4B1CYzf2rIcV1bJm1Hkg/90Yc2/WjZgQz1SuNa4mRof6
+z7LFKI1aW74F6S3Tn8TaZT/2leDtw2n2dc6Ue5Zfh2T4UZjHn/GHp2320sKExKYR
+HotoSgLuUzVr9Pt9VtOR+23byTBkwoVg0AJBN/o7cBI1XMWqMg8R570o8aHo+H7X
+l+SF/rmG1GUTm0hIJ9YJcIIX3DFNSI8BJojEfymMLDK4NmeEHT4NDafs1IfWs1Lt
+Ig6LVx0CgYEA/Hq10Lx2EMQPaWNrDLfOtd2FGz1KpzoBPGbFTuOVEZL/XMlE+MTV
+kn0nhEaU1KW2j1qBn/JjrSP53feo494oL+4jt2xtqWY5fyAVLuf5SV+m77+9mC81
+SaeuVQvvHxPmfT3X2c3TL/8dILUrTIy+jncW4Hs09Jn7KtXxqeOlhtcCgYEA8BoC
+2CSvmKPktkJi3exrojLe1mq9AjqTE6gq0C93q5TWZXNtgtUpNOW+xjn8w0X2xcoI
+hQgOdNe/DWXdtb9BctKbwbe4MB/pLn1+1FZneBWAeOup3zr4wFpN0d0yOVwTeCSw
+9o0kyMLjXTgsPxKE+u7l2eHmBMjfS0qbL4czh3sCgYEAuUHxFvCyUSsLg/EHI5Xb
+f2bDvHEEzh+puIBQVsp3HyYVaiflDASiEZLz5ANGQaI2iomGg65/pRO4zD5lFo50
+Pncmjfhpntr7ZWRNJtXf/Q7KlzDCFWDOYPVA3fabxtn7TfqK364/QACZht5onwrG
+6BJKHv1IphI2UgAaCuaXFpECgYByUqBKFGW700XidoemzZyOVZR/GcG3XvaK5IbG
+K+PaQfs3wRdCtYZyVnZY4mF1BUoz8TfPR//CKLwif/9qO4/JQXjCa1z7JSadaUnL
+hvyrU+mhKezvip/IzvbA14bDgxEOIsJUEu6R3SHvUADZY1MIPFobPZGNc6vGqNZt
+cf3aIwKBgEevSDqMpABYIbp39FIyqoVXcpNdEZTIFHFbCgVirI2cdDBLHhF+lwxZ
+mCFmyjMps6xHQ+ffwjFQHITyI/D2oKcliqp7T/cOVCkOD+3DdUhZrKgP2r08u0W9
+5tezb8y+qkFwRZnIa6hpr6kfuZLozE7/CY7EYi4iMh5qhZYtLnUx
+-----END RSA PRIVATE KEY-----
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/synced_folders b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/synced_folders
new file mode 100644
index 0000000000000000000000000000000000000000..7c4d69cf0d86a8da5d43d52ab9f21719d9b01caf
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/synced_folders
@@ -0,0 +1 @@
+{"virtualbox":{"/tmp/omnibus/cache":{"create":true,"guestpath":"/tmp/omnibus/cache","hostpath":"/root/.kitchen/cache","disabled":false,"__vagrantfile":true}}}
\ No newline at end of file
diff --git a/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/Vagrantfile b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/Vagrantfile
new file mode 100644
index 0000000000000000000000000000000000000000..9e7b520b13c86023a14e3bbea618d073603294a2
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/Vagrantfile
@@ -0,0 +1,9 @@
+Vagrant.configure("2") do |c|
+  c.berkshelf.enabled = false if Vagrant.has_plugin?("vagrant-berkshelf")
+  c.vm.box = "bento/centos-7.3"
+  c.vm.hostname = "with-role-centos-73.vagrantup.com"
+  c.vm.synced_folder ".", "/vagrant", disabled: true
+  c.vm.synced_folder "/root/.kitchen/cache", "/tmp/omnibus/cache", create: true
+  c.vm.provider :virtualbox do |p|
+  end
+end
diff --git a/cookbooks/my_cookbook/.kitchen/logs/default-centos-73.log b/cookbooks/my_cookbook/.kitchen/logs/default-centos-73.log
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/cookbooks/my_cookbook/.kitchen/logs/default-ubuntu-1604.log b/cookbooks/my_cookbook/.kitchen/logs/default-ubuntu-1604.log
new file mode 100644
index 0000000000000000000000000000000000000000..30e007cabdef69bf01e9535e0568288b13dcd4c2
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/logs/default-ubuntu-1604.log
@@ -0,0 +1,103 @@
+I, [2017-06-20T21:43:49.927025 #2753]  INFO -- default-ubuntu-1604: -----> Creating <default-ubuntu-1604>...
+I, [2017-06-20T21:43:51.423360 #2753]  INFO -- default-ubuntu-1604: Bringing machine 'default' up with 'virtualbox' provider...
+I, [2017-06-20T21:43:51.741668 #2753]  INFO -- default-ubuntu-1604: ==> default: Importing base box 'bento/ubuntu-16.04'...
+I, [2017-06-20T21:44:12.376475 #2753]  INFO -- default-ubuntu-1604: [KProgress: 10%[KProgress: 20%[KProgress: 30%[KProgress: 40%[KProgress: 50%[KProgress: 60%[KProgress: 70%[KProgress: 90%[K==> default: Matching MAC address for NAT networking...
+I, [2017-06-20T21:44:12.568208 #2753]  INFO -- default-ubuntu-1604: ==> default: Checking if box 'bento/ubuntu-16.04' is up to date...
+I, [2017-06-20T21:44:15.672094 #2753]  INFO -- default-ubuntu-1604: ==> default: Setting the name of the VM: kitchen-my_cookbook-default-ubuntu-1604_default_1497975255623_53836
+I, [2017-06-20T21:44:16.757581 #2753]  INFO -- default-ubuntu-1604: ==> default: Clearing any previously set network interfaces...
+I, [2017-06-20T21:44:16.897250 #2753]  INFO -- default-ubuntu-1604: ==> default: Preparing network interfaces based on configuration...
+I, [2017-06-20T21:44:16.898136 #2753]  INFO -- default-ubuntu-1604:     default: Adapter 1: nat
+I, [2017-06-20T21:44:17.029981 #2753]  INFO -- default-ubuntu-1604: ==> default: Forwarding ports...
+I, [2017-06-20T21:44:17.205317 #2753]  INFO -- default-ubuntu-1604:     default: 22 (guest) => 2222 (host) (adapter 1)
+I, [2017-06-20T21:44:17.601424 #2753]  INFO -- default-ubuntu-1604: ==> default: Booting VM...
+I, [2017-06-20T21:44:19.240058 #2753]  INFO -- default-ubuntu-1604: ==> default: Waiting for machine to boot. This may take a few minutes...
+I, [2017-06-20T21:44:19.710013 #2753]  INFO -- default-ubuntu-1604:     default: SSH address: 127.0.0.1:2222
+I, [2017-06-20T21:44:19.710182 #2753]  INFO -- default-ubuntu-1604:     default: SSH username: vagrant
+I, [2017-06-20T21:44:19.710571 #2753]  INFO -- default-ubuntu-1604:     default: SSH auth method: private key
+I, [2017-06-20T21:44:44.271753 #2753]  INFO -- default-ubuntu-1604:     default: 
+I, [2017-06-20T21:44:44.271884 #2753]  INFO -- default-ubuntu-1604:     default: Vagrant insecure key detected. Vagrant will automatically replace
+I, [2017-06-20T21:44:44.271926 #2753]  INFO -- default-ubuntu-1604:     default: this with a newly generated keypair for better security.
+I, [2017-06-20T21:44:45.749783 #2753]  INFO -- default-ubuntu-1604:     default: 
+I, [2017-06-20T21:44:45.749916 #2753]  INFO -- default-ubuntu-1604:     default: Inserting generated public key within guest...
+I, [2017-06-20T21:44:46.256133 #2753]  INFO -- default-ubuntu-1604:     default: Removing insecure key from the guest if it's present...
+I, [2017-06-20T21:44:46.740618 #2753]  INFO -- default-ubuntu-1604:     default: Key inserted! Disconnecting and reconnecting using new SSH key...
+I, [2017-06-20T21:44:48.250799 #2753]  INFO -- default-ubuntu-1604: ==> default: Machine booted and ready!
+I, [2017-06-20T21:44:48.251280 #2753]  INFO -- default-ubuntu-1604: ==> default: Checking for guest additions in VM...
+I, [2017-06-20T21:44:48.310720 #2753]  INFO -- default-ubuntu-1604: ==> default: Setting hostname...
+I, [2017-06-20T21:44:49.203224 #2753]  INFO -- default-ubuntu-1604: ==> default: Mounting shared folders...
+I, [2017-06-20T21:44:49.203741 #2753]  INFO -- default-ubuntu-1604:     default: /tmp/omnibus/cache => /root/.kitchen/cache
+I, [2017-06-20T21:44:50.417618 #2753]  INFO -- default-ubuntu-1604: ==> default: Machine not provisioned because `--no-provision` is specified.
+I, [2017-06-20T21:44:53.303327 #2753]  INFO -- default-ubuntu-1604: [SSH] Established
+I, [2017-06-20T21:44:53.303767 #2753]  INFO -- default-ubuntu-1604: Vagrant instance <default-ubuntu-1604> created.
+I, [2017-06-20T21:44:53.304989 #2753]  INFO -- default-ubuntu-1604: Finished creating <default-ubuntu-1604> (1m3.38s).
+I, [2017-06-20T21:44:53.305096 #2753]  INFO -- default-ubuntu-1604: -----> Converging <default-ubuntu-1604>...
+I, [2017-06-20T21:44:53.305639 #2753]  INFO -- default-ubuntu-1604: Preparing files for transfer
+I, [2017-06-20T21:44:53.305766 #2753]  INFO -- default-ubuntu-1604: Preparing dna.json
+I, [2017-06-20T21:44:53.306134 #2753]  INFO -- default-ubuntu-1604: Resolving cookbook dependencies with Berkshelf 5.6.4...
+I, [2017-06-20T21:45:02.058157 #2753]  INFO -- default-ubuntu-1604: Removing non-cookbook files before transfer
+I, [2017-06-20T21:45:02.062223 #2753]  INFO -- default-ubuntu-1604: Preparing validation.pem
+I, [2017-06-20T21:45:02.062751 #2753]  INFO -- default-ubuntu-1604: Preparing client.rb
+I, [2017-06-20T21:45:02.109750 #2753]  INFO -- default-ubuntu-1604: -----> Installing Chef Omnibus (install only if missing)
+I, [2017-06-20T21:45:02.110606 #2753]  INFO -- default-ubuntu-1604: Downloading https://omnitruck.chef.io/install.sh to file /tmp/install.sh
+I, [2017-06-20T21:45:02.111062 #2753]  INFO -- default-ubuntu-1604: Trying wget...
+I, [2017-06-20T21:45:03.815576 #2753]  INFO -- default-ubuntu-1604: Download complete.
+I, [2017-06-20T21:45:03.845511 #2753]  INFO -- default-ubuntu-1604: ubuntu 16.04 x86_64
+I, [2017-06-20T21:45:03.845620 #2753]  INFO -- default-ubuntu-1604: Getting information for chef stable  for ubuntu...
+I, [2017-06-20T21:45:03.845670 #2753]  INFO -- default-ubuntu-1604: downloading https://omnitruck.chef.io/stable/chef/metadata?v=&p=ubuntu&pv=16.04&m=x86_64
+I, [2017-06-20T21:45:03.845716 #2753]  INFO -- default-ubuntu-1604:   to file /tmp/install.sh.1535/metadata.txt
+I, [2017-06-20T21:45:03.846334 #2753]  INFO -- default-ubuntu-1604: trying wget...
+I, [2017-06-20T21:45:05.223614 #2753]  INFO -- default-ubuntu-1604: sha1	0a9cb607bc5b9189c88a981ee010e1e15a8a9042
+I, [2017-06-20T21:45:05.224753 #2753]  INFO -- default-ubuntu-1604: sha256	d8b0a8c012945cda9a2ff1b6b93bd852b06b81c71b4604250dac7c90143fd14d
+I, [2017-06-20T21:45:05.224997 #2753]  INFO -- default-ubuntu-1604: url	https://packages.chef.io/files/stable/chef/13.1.31/ubuntu/16.04/chef_13.1.31-1_amd64.deb
+I, [2017-06-20T21:45:05.225120 #2753]  INFO -- default-ubuntu-1604: version	13.1.31
+I, [2017-06-20T21:45:05.232747 #2753]  INFO -- default-ubuntu-1604: downloaded metadata file looks valid...
+I, [2017-06-20T21:45:05.306047 #2753]  INFO -- default-ubuntu-1604: /tmp/omnibus/cache/chef_13.1.31-1_amd64.deb already exists, verifiying checksum...
+I, [2017-06-20T21:45:05.306519 #2753]  INFO -- default-ubuntu-1604: Comparing checksum with sha256sum...
+I, [2017-06-20T21:45:05.913221 #2753]  INFO -- default-ubuntu-1604: checksum compare succeeded, using existing file!
+I, [2017-06-20T21:45:05.913355 #2753]  INFO -- default-ubuntu-1604: 
+I, [2017-06-20T21:45:05.913417 #2753]  INFO -- default-ubuntu-1604: WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
+I, [2017-06-20T21:45:05.913441 #2753]  INFO -- default-ubuntu-1604: 
+I, [2017-06-20T21:45:05.913463 #2753]  INFO -- default-ubuntu-1604: You are installing an omnibus package without a version pin.  If you are installing
+I, [2017-06-20T21:45:05.913485 #2753]  INFO -- default-ubuntu-1604: on production servers via an automated process this is DANGEROUS and you will
+I, [2017-06-20T21:45:05.913506 #2753]  INFO -- default-ubuntu-1604: be upgraded without warning on new releases, even to new major releases.
+I, [2017-06-20T21:45:05.913528 #2753]  INFO -- default-ubuntu-1604: Letting the version float is only appropriate in desktop, test, development or
+I, [2017-06-20T21:45:05.913549 #2753]  INFO -- default-ubuntu-1604: CI/CD environments.
+I, [2017-06-20T21:45:05.913572 #2753]  INFO -- default-ubuntu-1604: 
+I, [2017-06-20T21:45:05.913617 #2753]  INFO -- default-ubuntu-1604: WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
+I, [2017-06-20T21:45:05.913639 #2753]  INFO -- default-ubuntu-1604: 
+I, [2017-06-20T21:45:05.913659 #2753]  INFO -- default-ubuntu-1604: Installing chef 
+I, [2017-06-20T21:45:05.913679 #2753]  INFO -- default-ubuntu-1604: installing with dpkg...
+I, [2017-06-20T21:45:06.191607 #2753]  INFO -- default-ubuntu-1604: Selecting previously unselected package chef.
+I, [2017-06-20T21:45:07.537031 #2753]  INFO -- default-ubuntu-1604: (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 37825 files and directories currently installed.)
+I, [2017-06-20T21:45:07.543699 #2753]  INFO -- default-ubuntu-1604: Preparing to unpack .../cache/chef_13.1.31-1_amd64.deb ...
+I, [2017-06-20T21:45:07.566953 #2753]  INFO -- default-ubuntu-1604: Unpacking chef (13.1.31-1) ...
+I, [2017-06-20T21:45:32.510965 #2753]  INFO -- default-ubuntu-1604: Setting up chef (13.1.31-1) ...
+I, [2017-06-20T21:45:32.607554 #2753]  INFO -- default-ubuntu-1604: Thank you for installing Chef!
+I, [2017-06-20T21:45:32.801069 #2753]  INFO -- default-ubuntu-1604: Transferring files to <default-ubuntu-1604>
+I, [2017-06-20T21:45:34.145156 #2753]  INFO -- default-ubuntu-1604: Starting Chef Client, version 13.1.31
+I, [2017-06-20T21:45:36.076745 #2753]  INFO -- default-ubuntu-1604: Creating a new client identity for default-ubuntu-1604 using the validator key.
+I, [2017-06-20T21:45:36.182984 #2753]  INFO -- default-ubuntu-1604: resolving cookbooks for run list: ["my_cookbook::default"]
+I, [2017-06-20T21:45:36.203361 #2753]  INFO -- default-ubuntu-1604: Synchronizing Cookbooks:
+I, [2017-06-20T21:45:36.211386 #2753]  INFO -- default-ubuntu-1604:   - my_cookbook (0.1.0)
+I, [2017-06-20T21:45:36.212601 #2753]  INFO -- default-ubuntu-1604: Installing Cookbook Gems:
+I, [2017-06-20T21:45:36.213432 #2753]  INFO -- default-ubuntu-1604: Compiling Cookbooks...
+I, [2017-06-20T21:45:36.217276 #2753]  INFO -- default-ubuntu-1604: Converging 2 resources
+I, [2017-06-20T21:45:36.217842 #2753]  INFO -- default-ubuntu-1604: Recipe: my_cookbook::default
+I, [2017-06-20T21:45:36.219676 #2753]  INFO -- default-ubuntu-1604:   * file[/tmp/greeting.txt] action create
+I, [2017-06-20T21:45:36.221254 #2753]  INFO -- default-ubuntu-1604:     - create new file /tmp/greeting.txt
+I, [2017-06-20T21:45:36.221919 #2753]  INFO -- default-ubuntu-1604:     - update content in file /tmp/greeting.txt from none to 6e2df9
+I, [2017-06-20T21:45:36.222642 #2753]  INFO -- default-ubuntu-1604:     --- /tmp/greeting.txt	2017-06-20 16:15:34.747289082 +0000
+I, [2017-06-20T21:45:36.224070 #2753]  INFO -- default-ubuntu-1604:     +++ /tmp/.chef-greeting20170620-1625-belm8c.txt	2017-06-20 16:15:34.747289082 +0000
+I, [2017-06-20T21:45:36.224336 #2753]  INFO -- default-ubuntu-1604:     @@ -1 +1,2 @@
+I, [2017-06-20T21:45:36.224559 #2753]  INFO -- default-ubuntu-1604:     +ohai, chef!
+I, [2017-06-20T21:45:36.871221 #2753]  INFO -- default-ubuntu-1604:   * apt_package[git] action install (up to date)
+I, [2017-06-20T21:45:36.919107 #2753]  INFO -- default-ubuntu-1604: 
+I, [2017-06-20T21:45:36.919417 #2753]  INFO -- default-ubuntu-1604: Running handlers:
+I, [2017-06-20T21:45:36.919797 #2753]  INFO -- default-ubuntu-1604: Running handlers complete
+I, [2017-06-20T21:45:36.920089 #2753]  INFO -- default-ubuntu-1604: Chef Client finished, 1/2 resources updated in 02 seconds
+I, [2017-06-20T21:45:36.944752 #2753]  INFO -- default-ubuntu-1604: Finished converging <default-ubuntu-1604> (0m43.64s).
+I, [2017-06-20T21:45:36.944967 #2753]  INFO -- default-ubuntu-1604: -----> Setting up <default-ubuntu-1604>...
+I, [2017-06-20T21:45:37.025032 #2753]  INFO -- default-ubuntu-1604: Finished setting up <default-ubuntu-1604> (0m0.00s).
+I, [2017-06-20T21:45:37.025436 #2753]  INFO -- default-ubuntu-1604: -----> Verifying <default-ubuntu-1604>...
+I, [2017-06-20T21:45:37.616444 #2753]  INFO -- default-ubuntu-1604: Loaded tests from test/smoke/default 
+I, [2017-06-20T21:45:37.737136 #2753]  INFO -- default-ubuntu-1604: Finished verifying <default-ubuntu-1604> (0m0.71s).
diff --git a/cookbooks/my_cookbook/.kitchen/logs/kitchen.log b/cookbooks/my_cookbook/.kitchen/logs/kitchen.log
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/cookbooks/my_cookbook/.kitchen/logs/server-centos-73.log b/cookbooks/my_cookbook/.kitchen/logs/server-centos-73.log
new file mode 100644
index 0000000000000000000000000000000000000000..afd01172027ce4a4e4bdcdf1ecd2551efc5cd32e
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/logs/server-centos-73.log
@@ -0,0 +1,181 @@
+I, [2017-06-29T15:30:01.594325 #4310]  INFO -- server-centos-73: -----> Cleaning up any prior instances of <server-centos-73>
+I, [2017-06-29T15:30:01.611532 #4310]  INFO -- server-centos-73: -----> Destroying <server-centos-73>...
+I, [2017-06-29T15:30:03.978701 #4310]  INFO -- server-centos-73: ==> default: VM not created. Moving on...
+I, [2017-06-29T15:30:04.031897 #4310]  INFO -- server-centos-73: Vagrant instance <server-centos-73> destroyed.
+I, [2017-06-29T15:30:04.033171 #4310]  INFO -- server-centos-73: Finished destroying <server-centos-73> (0m2.42s).
+I, [2017-06-29T15:30:04.033733 #4310]  INFO -- server-centos-73: -----> Testing <server-centos-73>
+I, [2017-06-29T15:30:04.033989 #4310]  INFO -- server-centos-73: -----> Creating <server-centos-73>...
+I, [2017-06-29T15:30:05.981536 #4310]  INFO -- server-centos-73: Bringing machine 'default' up with 'virtualbox' provider...
+I, [2017-06-29T15:30:06.203246 #4310]  INFO -- server-centos-73: ==> default: Importing base box 'bento/centos-7.3'...
+I, [2017-06-29T15:30:23.774088 #4310]  INFO -- server-centos-73: [KProgress: 20%[KProgress: 30%[KProgress: 50%[KProgress: 70%[KProgress: 80%[KProgress: 90%[K==> default: Matching MAC address for NAT networking...
+I, [2017-06-29T15:30:24.512333 #4310]  INFO -- server-centos-73: ==> default: Checking if box 'bento/centos-7.3' is up to date...
+I, [2017-06-29T15:30:27.675547 #4310]  INFO -- server-centos-73: ==> default: A newer version of the box 'bento/centos-7.3' is available! You currently
+I, [2017-06-29T15:30:27.675908 #4310]  INFO -- server-centos-73: ==> default: have version '2.3.5'. The latest is version '2.3.7'. Run
+I, [2017-06-29T15:30:27.676118 #4310]  INFO -- server-centos-73: ==> default: `vagrant box update` to update.
+I, [2017-06-29T15:30:29.010937 #4310]  INFO -- server-centos-73: ==> default: Setting the name of the VM: kitchen-my_cookbook-server-centos-73_default_1498730428908_480
+I, [2017-06-29T15:30:30.142434 #4310]  INFO -- server-centos-73: ==> default: Fixed port collision for 22 => 2222. Now on port 2200.
+I, [2017-06-29T15:30:30.847609 #4310]  INFO -- server-centos-73: ==> default: Clearing any previously set network interfaces...
+I, [2017-06-29T15:30:31.021136 #4310]  INFO -- server-centos-73: ==> default: Preparing network interfaces based on configuration...
+I, [2017-06-29T15:30:31.022097 #4310]  INFO -- server-centos-73:     default: Adapter 1: nat
+I, [2017-06-29T15:30:31.205341 #4310]  INFO -- server-centos-73: ==> default: Forwarding ports...
+I, [2017-06-29T15:30:31.454949 #4310]  INFO -- server-centos-73:     default: 22 (guest) => 2200 (host) (adapter 1)
+I, [2017-06-29T15:30:31.999935 #4310]  INFO -- server-centos-73: ==> default: Booting VM...
+I, [2017-06-29T15:30:34.293459 #4310]  INFO -- server-centos-73: ==> default: Waiting for machine to boot. This may take a few minutes...
+I, [2017-06-29T15:30:35.029079 #4310]  INFO -- server-centos-73:     default: SSH address: 127.0.0.1:2200
+I, [2017-06-29T15:30:35.029348 #4310]  INFO -- server-centos-73:     default: SSH username: vagrant
+I, [2017-06-29T15:30:35.029787 #4310]  INFO -- server-centos-73:     default: SSH auth method: private key
+I, [2017-06-29T15:31:08.700228 #4310]  INFO -- server-centos-73:     default: 
+I, [2017-06-29T15:31:08.700387 #4310]  INFO -- server-centos-73:     default: Vagrant insecure key detected. Vagrant will automatically replace
+I, [2017-06-29T15:31:08.700463 #4310]  INFO -- server-centos-73:     default: this with a newly generated keypair for better security.
+I, [2017-06-29T15:31:12.601816 #4310]  INFO -- server-centos-73:     default: 
+I, [2017-06-29T15:31:12.601969 #4310]  INFO -- server-centos-73:     default: Inserting generated public key within guest...
+I, [2017-06-29T15:31:13.112671 #4310]  INFO -- server-centos-73:     default: Removing insecure key from the guest if it's present...
+I, [2017-06-29T15:31:13.593069 #4310]  INFO -- server-centos-73:     default: Key inserted! Disconnecting and reconnecting using new SSH key...
+I, [2017-06-29T15:31:15.322567 #4310]  INFO -- server-centos-73: ==> default: Machine booted and ready!
+I, [2017-06-29T15:31:15.324164 #4310]  INFO -- server-centos-73: ==> default: Checking for guest additions in VM...
+I, [2017-06-29T15:31:15.474344 #4310]  INFO -- server-centos-73: ==> default: Setting hostname...
+I, [2017-06-29T15:31:17.473886 #4310]  INFO -- server-centos-73: ==> default: Mounting shared folders...
+I, [2017-06-29T15:31:17.474365 #4310]  INFO -- server-centos-73:     default: /tmp/omnibus/cache => /root/.kitchen/cache
+I, [2017-06-29T15:31:19.188867 #4310]  INFO -- server-centos-73: ==> default: Machine not provisioned because `--no-provision` is specified.
+I, [2017-06-29T15:31:23.121363 #4310]  INFO -- server-centos-73: [SSH] Established
+I, [2017-06-29T15:31:23.121850 #4310]  INFO -- server-centos-73: Vagrant instance <server-centos-73> created.
+I, [2017-06-29T15:31:23.123033 #4310]  INFO -- server-centos-73: Finished creating <server-centos-73> (1m19.09s).
+I, [2017-06-29T15:31:23.123227 #4310]  INFO -- server-centos-73: -----> Converging <server-centos-73>...
+I, [2017-06-29T15:31:23.124278 #4310]  INFO -- server-centos-73: Preparing files for transfer
+I, [2017-06-29T15:31:23.124457 #4310]  INFO -- server-centos-73: Preparing dna.json
+I, [2017-06-29T15:31:23.125242 #4310]  INFO -- server-centos-73: Resolving cookbook dependencies with Berkshelf 5.6.4...
+I, [2017-06-29T15:31:28.491431 #4310]  INFO -- server-centos-73: Removing non-cookbook files before transfer
+I, [2017-06-29T15:31:28.498356 #4310]  INFO -- server-centos-73: Preparing validation.pem
+I, [2017-06-29T15:31:28.499114 #4310]  INFO -- server-centos-73: Preparing client.rb
+I, [2017-06-29T15:31:28.548191 #4310]  INFO -- server-centos-73: -----> Installing Chef Omnibus (install only if missing)
+I, [2017-06-29T15:31:28.548503 #4310]  INFO -- server-centos-73: Downloading https://omnitruck.chef.io/install.sh to file /tmp/install.sh
+I, [2017-06-29T15:31:28.548613 #4310]  INFO -- server-centos-73: Trying wget...
+I, [2017-06-29T15:31:29.193128 #4310]  INFO -- server-centos-73: Download complete.
+I, [2017-06-29T15:31:29.229109 #4310]  INFO -- server-centos-73: el 7 x86_64
+I, [2017-06-29T15:31:29.229232 #4310]  INFO -- server-centos-73: Getting information for chef stable  for el...
+I, [2017-06-29T15:31:29.229284 #4310]  INFO -- server-centos-73: downloading https://omnitruck.chef.io/stable/chef/metadata?v=&p=el&pv=7&m=x86_64
+I, [2017-06-29T15:31:29.229327 #4310]  INFO -- server-centos-73:   to file /tmp/install.sh.4036/metadata.txt
+I, [2017-06-29T15:31:29.230098 #4310]  INFO -- server-centos-73: trying wget...
+I, [2017-06-29T15:31:29.550510 #4310]  INFO -- server-centos-73: sha1	65c046c91a7186a28af9642e3cffcd72296cf602
+I, [2017-06-29T15:31:29.550867 #4310]  INFO -- server-centos-73: sha256	b8397ea2a33a3f4c860daac1cb0714a11d8dad5287b0eb7054e8432d484f9f2c
+I, [2017-06-29T15:31:29.551067 #4310]  INFO -- server-centos-73: url	https://packages.chef.io/files/stable/chef/13.1.31/el/7/chef-13.1.31-1.el7.x86_64.rpm
+I, [2017-06-29T15:31:29.551226 #4310]  INFO -- server-centos-73: version	13.1.31
+I, [2017-06-29T15:31:29.556936 #4310]  INFO -- server-centos-73: downloaded metadata file looks valid...
+I, [2017-06-29T15:31:29.582022 #4310]  INFO -- server-centos-73: /tmp/omnibus/cache/chef-13.1.31-1.el7.x86_64.rpm already exists, verifiying checksum...
+I, [2017-06-29T15:31:29.582156 #4310]  INFO -- server-centos-73: Comparing checksum with sha256sum...
+I, [2017-06-29T15:31:30.236718 #4310]  INFO -- server-centos-73: checksum compare succeeded, using existing file!
+I, [2017-06-29T15:31:30.236899 #4310]  INFO -- server-centos-73: 
+I, [2017-06-29T15:31:30.236990 #4310]  INFO -- server-centos-73: WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
+I, [2017-06-29T15:31:30.237031 #4310]  INFO -- server-centos-73: 
+I, [2017-06-29T15:31:30.237068 #4310]  INFO -- server-centos-73: You are installing an omnibus package without a version pin.  If you are installing
+I, [2017-06-29T15:31:30.237154 #4310]  INFO -- server-centos-73: on production servers via an automated process this is DANGEROUS and you will
+I, [2017-06-29T15:31:30.237213 #4310]  INFO -- server-centos-73: be upgraded without warning on new releases, even to new major releases.
+I, [2017-06-29T15:31:30.237267 #4310]  INFO -- server-centos-73: Letting the version float is only appropriate in desktop, test, development or
+I, [2017-06-29T15:31:30.237303 #4310]  INFO -- server-centos-73: CI/CD environments.
+I, [2017-06-29T15:31:30.237354 #4310]  INFO -- server-centos-73: 
+I, [2017-06-29T15:31:30.237388 #4310]  INFO -- server-centos-73: WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
+I, [2017-06-29T15:31:30.237424 #4310]  INFO -- server-centos-73: 
+I, [2017-06-29T15:31:30.237457 #4310]  INFO -- server-centos-73: Installing chef 
+I, [2017-06-29T15:31:30.237507 #4310]  INFO -- server-centos-73: installing with rpm...
+I, [2017-06-29T15:31:30.619507 #4310]  INFO -- server-centos-73: warning: /tmp/omnibus/cache/chef-13.1.31-1.el7.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
+I, [2017-06-29T15:31:31.813927 #4310]  INFO -- server-centos-73: Preparing...                                                            (100%)#                                 (100%)##                                (100%)###                               (100%)####                              (100%)#####                             (100%)######                            (100%)#######                           (100%)########                          (100%)#########                         (100%)##########                        (100%)###########                       (100%)############                      (100%)#############                     (100%)##############                    (100%)###############                   (100%)################                  (100%)#################                 (100%)##################                (100%)###################               (100%)####################              (100%)#####################             (100%)######################            (100%)#######################           (100%)########################          (100%)#########################         (100%)##########################        (100%)###########################       (100%)############################      (100%)#############################     (100%)##############################    (100%)###############################   (100%)################################  (100%)################################# (100%)################################# [100%]
+I, [2017-06-29T15:31:31.851829 #4310]  INFO -- server-centos-73: Updating / installing...
+I, [2017-06-29T15:31:45.757893 #4310]  INFO -- server-centos-73:    1:chef-13.1.31-1.el7                                                 (  2%)#                                 (  4%)##                                (  7%)###                               ( 10%)####                              ( 13%)#####                             ( 16%)######                            ( 19%)#######                           ( 22%)########                          ( 25%)#########                         ( 28%)##########                        ( 31%)###########                       ( 34%)############                      ( 37%)#############                     ( 40%)##############                    ( 43%)###############                   ( 46%)################                  ( 49%)#################                 ( 52%)##################                ( 54%)###################               ( 57%)####################              ( 60%)#####################             ( 63%)######################            ( 66%)#######################           ( 69%)########################          ( 72%)#########################         ( 75%)##########################        ( 78%)###########################       ( 81%)############################      ( 84%)#############################     ( 87%)##############################    ( 90%)###############################   ( 93%)################################  ( 96%)################################# ( 99%)################################# [100%]
+I, [2017-06-29T15:31:47.154113 #4310]  INFO -- server-centos-73: Thank you for installing Chef!
+I, [2017-06-29T15:31:47.624434 #4310]  INFO -- server-centos-73: Transferring files to <server-centos-73>
+I, [2017-06-29T15:31:52.876059 #4310]  INFO -- server-centos-73: Starting Chef Client, version 13.1.31
+I, [2017-06-29T15:31:56.726330 #4310]  INFO -- server-centos-73: Creating a new client identity for server-centos-73 using the validator key.
+I, [2017-06-29T15:31:56.886072 #4310]  INFO -- server-centos-73: resolving cookbooks for run list: ["my_cookbook::server"]
+I, [2017-06-29T15:31:56.886205 #4310]  INFO -- server-centos-73: Synchronizing Cookbooks:
+I, [2017-06-29T15:31:56.892033 #4310]  INFO -- server-centos-73:   - my_cookbook (0.1.0)
+I, [2017-06-29T15:31:56.902386 #4310]  INFO -- server-centos-73: Installing Cookbook Gems:
+I, [2017-06-29T15:31:56.902525 #4310]  INFO -- server-centos-73: Compiling Cookbooks...
+I, [2017-06-29T15:31:56.902597 #4310]  INFO -- server-centos-73: 
+I, [2017-06-29T15:31:56.902652 #4310]  INFO -- server-centos-73: ================================================================================
+I, [2017-06-29T15:31:56.902710 #4310]  INFO -- server-centos-73: Recipe Compile Error
+I, [2017-06-29T15:31:56.902879 #4310]  INFO -- server-centos-73: ================================================================================
+I, [2017-06-29T15:31:56.902943 #4310]  INFO -- server-centos-73: 
+I, [2017-06-29T15:31:56.903023 #4310]  INFO -- server-centos-73: Chef::Exceptions::RecipeNotFound
+I, [2017-06-29T15:31:56.903083 #4310]  INFO -- server-centos-73: --------------------------------
+I, [2017-06-29T15:31:56.903131 #4310]  INFO -- server-centos-73: could not find recipe server for cookbook my_cookbook
+I, [2017-06-29T15:31:56.903178 #4310]  INFO -- server-centos-73: 
+I, [2017-06-29T15:31:56.903230 #4310]  INFO -- server-centos-73: System Info:
+I, [2017-06-29T15:31:56.903277 #4310]  INFO -- server-centos-73: ------------
+I, [2017-06-29T15:31:56.903324 #4310]  INFO -- server-centos-73: chef_version=13.1.31
+I, [2017-06-29T15:31:56.903370 #4310]  INFO -- server-centos-73: platform=centos
+I, [2017-06-29T15:31:56.903418 #4310]  INFO -- server-centos-73: platform_version=7.3.1611
+I, [2017-06-29T15:31:56.903472 #4310]  INFO -- server-centos-73: ruby=ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]
+I, [2017-06-29T15:31:56.903521 #4310]  INFO -- server-centos-73: program_name=chef-client worker: ppid=4161;start=10:01:52;
+I, [2017-06-29T15:31:56.903569 #4310]  INFO -- server-centos-73: executable=/opt/chef/bin/chef-client
+I, [2017-06-29T15:31:56.903626 #4310]  INFO -- server-centos-73: 
+I, [2017-06-29T15:31:56.903674 #4310]  INFO -- server-centos-73: 
+I, [2017-06-29T15:31:56.903721 #4310]  INFO -- server-centos-73: Running handlers:
+I, [2017-06-29T15:31:56.903832 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] ERROR: Running exception handlers
+I, [2017-06-29T15:31:56.903884 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] ERROR: Running exception handlers
+I, [2017-06-29T15:31:56.903936 #4310]  INFO -- server-centos-73: Running handlers complete
+I, [2017-06-29T15:31:56.903992 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] ERROR: Exception handlers complete
+I, [2017-06-29T15:31:56.904042 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] ERROR: Exception handlers complete
+I, [2017-06-29T15:31:56.904091 #4310]  INFO -- server-centos-73: Chef Client failed. 0 resources updated in 04 seconds
+I, [2017-06-29T15:31:56.904147 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] FATAL: Stacktrace dumped to /tmp/kitchen/cache/chef-stacktrace.out
+I, [2017-06-29T15:31:56.904198 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] FATAL: Stacktrace dumped to /tmp/kitchen/cache/chef-stacktrace.out
+I, [2017-06-29T15:31:56.904247 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
+I, [2017-06-29T15:31:56.904296 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
+I, [2017-06-29T15:31:56.904353 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] ERROR: could not find recipe server for cookbook my_cookbook
+I, [2017-06-29T15:31:56.904403 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] ERROR: could not find recipe server for cookbook my_cookbook
+I, [2017-06-29T15:31:56.910369 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
+I, [2017-06-29T15:31:56.910510 #4310]  INFO -- server-centos-73: [2017-06-29T10:01:56+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
+E, [2017-06-29T15:31:56.920493 #4310] ERROR -- server-centos-73: Converge failed on instance <server-centos-73>.
+E, [2017-06-29T15:31:56.920674 #4310] ERROR -- server-centos-73: ------Exception-------
+E, [2017-06-29T15:31:56.920721 #4310] ERROR -- server-centos-73: Class: Kitchen::ActionFailed
+E, [2017-06-29T15:31:56.920802 #4310] ERROR -- server-centos-73: Message: SSH exited (1) for command: [sh -c '
+TEST_KITCHEN="1"; export TEST_KITCHEN
+sudo -E /opt/chef/bin/chef-client --local-mode --config /tmp/kitchen/client.rb --log_level auto --force-formatter --no-color --json-attributes /tmp/kitchen/dna.json --chef-zero-port 8889 
+']
+E, [2017-06-29T15:31:56.920856 #4310] ERROR -- server-centos-73: ----------------------
+E, [2017-06-29T15:31:56.920888 #4310] ERROR -- server-centos-73: ------Backtrace-------
+E, [2017-06-29T15:31:56.920933 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:83:in `rescue in call'
+E, [2017-06-29T15:31:56.920978 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:86:in `call'
+E, [2017-06-29T15:31:56.921028 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:384:in `block in converge_action'
+E, [2017-06-29T15:31:56.921089 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:527:in `synchronize_or_call'
+E, [2017-06-29T15:31:56.921125 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:489:in `block in action'
+E, [2017-06-29T15:31:56.921159 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/2.3.0/benchmark.rb:293:in `measure'
+E, [2017-06-29T15:31:56.921193 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:488:in `action'
+E, [2017-06-29T15:31:56.921226 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:380:in `converge_action'
+E, [2017-06-29T15:31:56.921264 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:359:in `block in transition_to'
+E, [2017-06-29T15:31:56.921299 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `each'
+E, [2017-06-29T15:31:56.921333 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `transition_to'
+E, [2017-06-29T15:31:56.921367 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:157:in `verify'
+E, [2017-06-29T15:31:56.921400 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:186:in `block in test'
+E, [2017-06-29T15:31:56.921433 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/2.3.0/benchmark.rb:293:in `measure'
+E, [2017-06-29T15:31:56.921467 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:182:in `test'
+E, [2017-06-29T15:31:56.921500 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `public_send'
+E, [2017-06-29T15:31:56.921534 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `run_action_in_thread'
+E, [2017-06-29T15:31:56.921567 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'
+E, [2017-06-29T15:31:56.921600 #4310] ERROR -- server-centos-73: ----End Backtrace-----
+E, [2017-06-29T15:31:56.921636 #4310] ERROR -- server-centos-73: ---Nested Exception---
+E, [2017-06-29T15:31:56.921671 #4310] ERROR -- server-centos-73: Class: Kitchen::Transport::SshFailed
+E, [2017-06-29T15:31:56.921704 #4310] ERROR -- server-centos-73: Message: SSH exited (1) for command: [sh -c '
+TEST_KITCHEN="1"; export TEST_KITCHEN
+sudo -E /opt/chef/bin/chef-client --local-mode --config /tmp/kitchen/client.rb --log_level auto --force-formatter --no-color --json-attributes /tmp/kitchen/dna.json --chef-zero-port 8889 
+']
+E, [2017-06-29T15:31:56.921737 #4310] ERROR -- server-centos-73: ----------------------
+E, [2017-06-29T15:31:56.921851 #4310] ERROR -- server-centos-73: ------Backtrace-------
+E, [2017-06-29T15:31:56.921895 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:83:in `rescue in call'
+E, [2017-06-29T15:31:56.921931 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:86:in `call'
+E, [2017-06-29T15:31:56.921965 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:384:in `block in converge_action'
+E, [2017-06-29T15:31:56.921999 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:527:in `synchronize_or_call'
+E, [2017-06-29T15:31:56.922032 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:489:in `block in action'
+E, [2017-06-29T15:31:56.922066 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/2.3.0/benchmark.rb:293:in `measure'
+E, [2017-06-29T15:31:56.922099 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:488:in `action'
+E, [2017-06-29T15:31:56.922137 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:380:in `converge_action'
+E, [2017-06-29T15:31:56.922171 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:359:in `block in transition_to'
+E, [2017-06-29T15:31:56.922204 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `each'
+E, [2017-06-29T15:31:56.922239 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `transition_to'
+E, [2017-06-29T15:31:56.922273 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:157:in `verify'
+E, [2017-06-29T15:31:56.922306 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:186:in `block in test'
+E, [2017-06-29T15:31:56.922339 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/2.3.0/benchmark.rb:293:in `measure'
+E, [2017-06-29T15:31:56.922372 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:182:in `test'
+E, [2017-06-29T15:31:56.922406 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `public_send'
+E, [2017-06-29T15:31:56.922439 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `run_action_in_thread'
+E, [2017-06-29T15:31:56.922475 #4310] ERROR -- server-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'
+E, [2017-06-29T15:31:56.922509 #4310] ERROR -- server-centos-73: ----End Backtrace-----
diff --git a/cookbooks/my_cookbook/.kitchen/logs/server-ubuntu-1604.log b/cookbooks/my_cookbook/.kitchen/logs/server-ubuntu-1604.log
new file mode 100644
index 0000000000000000000000000000000000000000..d969d684e8bf67be05026e5c6480d39e91fc0fee
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/logs/server-ubuntu-1604.log
@@ -0,0 +1,167 @@
+I, [2017-06-20T21:48:57.397687 #2753]  INFO -- server-ubuntu-1604: -----> Creating <server-ubuntu-1604>...
+I, [2017-06-20T21:48:58.932231 #2753]  INFO -- server-ubuntu-1604: Bringing machine 'default' up with 'virtualbox' provider...
+I, [2017-06-20T21:48:59.069911 #2753]  INFO -- server-ubuntu-1604: ==> default: Importing base box 'bento/ubuntu-16.04'...
+I, [2017-06-20T21:49:19.886287 #2753]  INFO -- server-ubuntu-1604: [KProgress: 10%[KProgress: 20%[KProgress: 30%[KProgress: 40%[KProgress: 50%[KProgress: 60%[KProgress: 70%[KProgress: 90%[K==> default: Matching MAC address for NAT networking...
+I, [2017-06-20T21:49:20.046521 #2753]  INFO -- server-ubuntu-1604: ==> default: Checking if box 'bento/ubuntu-16.04' is up to date...
+I, [2017-06-20T21:49:23.214777 #2753]  INFO -- server-ubuntu-1604: ==> default: Setting the name of the VM: kitchen-my_cookbook-server-ubuntu-1604_default_1497975563163_54828
+I, [2017-06-20T21:49:24.128299 #2753]  INFO -- server-ubuntu-1604: ==> default: Fixed port collision for 22 => 2222. Now on port 2201.
+I, [2017-06-20T21:49:24.578282 #2753]  INFO -- server-ubuntu-1604: ==> default: Clearing any previously set network interfaces...
+I, [2017-06-20T21:49:24.692090 #2753]  INFO -- server-ubuntu-1604: ==> default: Preparing network interfaces based on configuration...
+I, [2017-06-20T21:49:24.693226 #2753]  INFO -- server-ubuntu-1604:     default: Adapter 1: nat
+I, [2017-06-20T21:49:24.794166 #2753]  INFO -- server-ubuntu-1604: ==> default: Forwarding ports...
+I, [2017-06-20T21:49:24.937878 #2753]  INFO -- server-ubuntu-1604:     default: 22 (guest) => 2201 (host) (adapter 1)
+I, [2017-06-20T21:49:25.307663 #2753]  INFO -- server-ubuntu-1604: ==> default: Booting VM...
+I, [2017-06-20T21:49:27.187018 #2753]  INFO -- server-ubuntu-1604: ==> default: Waiting for machine to boot. This may take a few minutes...
+I, [2017-06-20T21:49:27.684670 #2753]  INFO -- server-ubuntu-1604:     default: SSH address: 127.0.0.1:2201
+I, [2017-06-20T21:49:27.685056 #2753]  INFO -- server-ubuntu-1604:     default: SSH username: vagrant
+I, [2017-06-20T21:49:27.685161 #2753]  INFO -- server-ubuntu-1604:     default: SSH auth method: private key
+I, [2017-06-20T21:49:52.756639 #2753]  INFO -- server-ubuntu-1604:     default: 
+I, [2017-06-20T21:49:52.756733 #2753]  INFO -- server-ubuntu-1604:     default: Vagrant insecure key detected. Vagrant will automatically replace
+I, [2017-06-20T21:49:52.756773 #2753]  INFO -- server-ubuntu-1604:     default: this with a newly generated keypair for better security.
+I, [2017-06-20T21:49:54.135118 #2753]  INFO -- server-ubuntu-1604:     default: 
+I, [2017-06-20T21:49:54.135404 #2753]  INFO -- server-ubuntu-1604:     default: Inserting generated public key within guest...
+I, [2017-06-20T21:49:54.571184 #2753]  INFO -- server-ubuntu-1604:     default: Removing insecure key from the guest if it's present...
+I, [2017-06-20T21:49:55.103754 #2753]  INFO -- server-ubuntu-1604:     default: Key inserted! Disconnecting and reconnecting using new SSH key...
+I, [2017-06-20T21:49:56.199912 #2753]  INFO -- server-ubuntu-1604: ==> default: Machine booted and ready!
+I, [2017-06-20T21:49:56.201374 #2753]  INFO -- server-ubuntu-1604: ==> default: Checking for guest additions in VM...
+I, [2017-06-20T21:49:56.277870 #2753]  INFO -- server-ubuntu-1604: ==> default: Setting hostname...
+I, [2017-06-20T21:49:57.144803 #2753]  INFO -- server-ubuntu-1604: ==> default: Mounting shared folders...
+I, [2017-06-20T21:49:57.145247 #2753]  INFO -- server-ubuntu-1604:     default: /tmp/omnibus/cache => /root/.kitchen/cache
+I, [2017-06-20T21:49:58.377561 #2753]  INFO -- server-ubuntu-1604: ==> default: Machine not provisioned because `--no-provision` is specified.
+I, [2017-06-20T21:50:01.267048 #2753]  INFO -- server-ubuntu-1604: [SSH] Established
+I, [2017-06-20T21:50:01.268310 #2753]  INFO -- server-ubuntu-1604: Vagrant instance <server-ubuntu-1604> created.
+I, [2017-06-20T21:50:01.271215 #2753]  INFO -- server-ubuntu-1604: Finished creating <server-ubuntu-1604> (1m3.87s).
+I, [2017-06-20T21:50:01.271543 #2753]  INFO -- server-ubuntu-1604: -----> Converging <server-ubuntu-1604>...
+I, [2017-06-20T21:50:01.273242 #2753]  INFO -- server-ubuntu-1604: Preparing files for transfer
+I, [2017-06-20T21:50:01.273641 #2753]  INFO -- server-ubuntu-1604: Preparing dna.json
+I, [2017-06-20T21:50:01.274469 #2753]  INFO -- server-ubuntu-1604: Resolving cookbook dependencies with Berkshelf 5.6.4...
+I, [2017-06-20T21:50:08.070470 #2753]  INFO -- server-ubuntu-1604: Removing non-cookbook files before transfer
+I, [2017-06-20T21:50:08.072889 #2753]  INFO -- server-ubuntu-1604: Preparing validation.pem
+I, [2017-06-20T21:50:08.086951 #2753]  INFO -- server-ubuntu-1604: Preparing client.rb
+I, [2017-06-20T21:50:08.132740 #2753]  INFO -- server-ubuntu-1604: -----> Installing Chef Omnibus (install only if missing)
+I, [2017-06-20T21:50:08.133310 #2753]  INFO -- server-ubuntu-1604: Downloading https://omnitruck.chef.io/install.sh to file /tmp/install.sh
+I, [2017-06-20T21:50:08.133537 #2753]  INFO -- server-ubuntu-1604: Trying wget...
+I, [2017-06-20T21:50:09.787166 #2753]  INFO -- server-ubuntu-1604: Download complete.
+I, [2017-06-20T21:50:09.819178 #2753]  INFO -- server-ubuntu-1604: ubuntu 16.04 x86_64
+I, [2017-06-20T21:50:09.819320 #2753]  INFO -- server-ubuntu-1604: Getting information for chef stable  for ubuntu...
+I, [2017-06-20T21:50:09.819377 #2753]  INFO -- server-ubuntu-1604: downloading https://omnitruck.chef.io/stable/chef/metadata?v=&p=ubuntu&pv=16.04&m=x86_64
+I, [2017-06-20T21:50:09.819881 #2753]  INFO -- server-ubuntu-1604:   to file /tmp/install.sh.1538/metadata.txt
+I, [2017-06-20T21:50:09.821087 #2753]  INFO -- server-ubuntu-1604: trying wget...
+I, [2017-06-20T21:50:15.768267 #2753]  INFO -- server-ubuntu-1604: sha1	0a9cb607bc5b9189c88a981ee010e1e15a8a9042
+I, [2017-06-20T21:50:15.769840 #2753]  INFO -- server-ubuntu-1604: sha256	d8b0a8c012945cda9a2ff1b6b93bd852b06b81c71b4604250dac7c90143fd14d
+I, [2017-06-20T21:50:15.771069 #2753]  INFO -- server-ubuntu-1604: url	https://packages.chef.io/files/stable/chef/13.1.31/ubuntu/16.04/chef_13.1.31-1_amd64.deb
+I, [2017-06-20T21:50:15.771967 #2753]  INFO -- server-ubuntu-1604: version	13.1.31
+I, [2017-06-20T21:50:15.775975 #2753]  INFO -- server-ubuntu-1604: downloaded metadata file looks valid...
+I, [2017-06-20T21:50:15.872765 #2753]  INFO -- server-ubuntu-1604: /tmp/omnibus/cache/chef_13.1.31-1_amd64.deb already exists, verifiying checksum...
+I, [2017-06-20T21:50:15.873448 #2753]  INFO -- server-ubuntu-1604: Comparing checksum with sha256sum...
+I, [2017-06-20T21:50:16.465140 #2753]  INFO -- server-ubuntu-1604: checksum compare succeeded, using existing file!
+I, [2017-06-20T21:50:16.465221 #2753]  INFO -- server-ubuntu-1604: 
+I, [2017-06-20T21:50:16.465251 #2753]  INFO -- server-ubuntu-1604: WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
+I, [2017-06-20T21:50:16.465275 #2753]  INFO -- server-ubuntu-1604: 
+I, [2017-06-20T21:50:16.465299 #2753]  INFO -- server-ubuntu-1604: You are installing an omnibus package without a version pin.  If you are installing
+I, [2017-06-20T21:50:16.465326 #2753]  INFO -- server-ubuntu-1604: on production servers via an automated process this is DANGEROUS and you will
+I, [2017-06-20T21:50:16.465349 #2753]  INFO -- server-ubuntu-1604: be upgraded without warning on new releases, even to new major releases.
+I, [2017-06-20T21:50:16.465371 #2753]  INFO -- server-ubuntu-1604: Letting the version float is only appropriate in desktop, test, development or
+I, [2017-06-20T21:50:16.465392 #2753]  INFO -- server-ubuntu-1604: CI/CD environments.
+I, [2017-06-20T21:50:16.465433 #2753]  INFO -- server-ubuntu-1604: 
+I, [2017-06-20T21:50:16.465455 #2753]  INFO -- server-ubuntu-1604: WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
+I, [2017-06-20T21:50:16.465475 #2753]  INFO -- server-ubuntu-1604: 
+I, [2017-06-20T21:50:16.465495 #2753]  INFO -- server-ubuntu-1604: Installing chef 
+I, [2017-06-20T21:50:16.465515 #2753]  INFO -- server-ubuntu-1604: installing with dpkg...
+I, [2017-06-20T21:50:16.748444 #2753]  INFO -- server-ubuntu-1604: Selecting previously unselected package chef.
+I, [2017-06-20T21:50:17.973609 #2753]  INFO -- server-ubuntu-1604: (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 37825 files and directories currently installed.)
+I, [2017-06-20T21:50:17.978101 #2753]  INFO -- server-ubuntu-1604: Preparing to unpack .../cache/chef_13.1.31-1_amd64.deb ...
+I, [2017-06-20T21:50:18.004596 #2753]  INFO -- server-ubuntu-1604: Unpacking chef (13.1.31-1) ...
+I, [2017-06-20T21:50:44.280427 #2753]  INFO -- server-ubuntu-1604: Setting up chef (13.1.31-1) ...
+I, [2017-06-20T21:50:44.408917 #2753]  INFO -- server-ubuntu-1604: Thank you for installing Chef!
+I, [2017-06-20T21:50:44.540580 #2753]  INFO -- server-ubuntu-1604: Transferring files to <server-ubuntu-1604>
+I, [2017-06-20T21:50:45.953424 #2753]  INFO -- server-ubuntu-1604: Starting Chef Client, version 13.1.31
+I, [2017-06-20T21:50:47.962892 #2753]  INFO -- server-ubuntu-1604: Creating a new client identity for server-ubuntu-1604 using the validator key.
+I, [2017-06-20T21:50:48.187939 #2753]  INFO -- server-ubuntu-1604: resolving cookbooks for run list: ["my_cookbook::server"]
+I, [2017-06-20T21:50:48.205452 #2753]  INFO -- server-ubuntu-1604: Synchronizing Cookbooks:
+I, [2017-06-20T21:50:48.214796 #2753]  INFO -- server-ubuntu-1604:   - my_cookbook (0.1.0)
+I, [2017-06-20T21:50:48.218364 #2753]  INFO -- server-ubuntu-1604: Installing Cookbook Gems:
+I, [2017-06-20T21:50:48.218687 #2753]  INFO -- server-ubuntu-1604: Compiling Cookbooks...
+I, [2017-06-20T21:50:48.220496 #2753]  INFO -- server-ubuntu-1604: 
+I, [2017-06-20T21:50:48.221170 #2753]  INFO -- server-ubuntu-1604: ================================================================================
+I, [2017-06-20T21:50:48.221622 #2753]  INFO -- server-ubuntu-1604: Recipe Compile Error
+I, [2017-06-20T21:50:48.222132 #2753]  INFO -- server-ubuntu-1604: ================================================================================
+I, [2017-06-20T21:50:48.222430 #2753]  INFO -- server-ubuntu-1604: 
+I, [2017-06-20T21:50:48.222896 #2753]  INFO -- server-ubuntu-1604: Chef::Exceptions::RecipeNotFound
+I, [2017-06-20T21:50:48.223568 #2753]  INFO -- server-ubuntu-1604: --------------------------------
+I, [2017-06-20T21:50:48.223936 #2753]  INFO -- server-ubuntu-1604: could not find recipe server for cookbook my_cookbook
+I, [2017-06-20T21:50:48.224338 #2753]  INFO -- server-ubuntu-1604: 
+I, [2017-06-20T21:50:48.224929 #2753]  INFO -- server-ubuntu-1604: System Info:
+I, [2017-06-20T21:50:48.225555 #2753]  INFO -- server-ubuntu-1604: ------------
+I, [2017-06-20T21:50:48.226026 #2753]  INFO -- server-ubuntu-1604: chef_version=13.1.31
+I, [2017-06-20T21:50:48.226458 #2753]  INFO -- server-ubuntu-1604: platform=ubuntu
+I, [2017-06-20T21:50:48.226840 #2753]  INFO -- server-ubuntu-1604: platform_version=16.04
+I, [2017-06-20T21:50:48.226909 #2753]  INFO -- server-ubuntu-1604: ruby=ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]
+I, [2017-06-20T21:50:48.226945 #2753]  INFO -- server-ubuntu-1604: program_name=chef-client worker: ppid=1623;start=16:20:44;
+I, [2017-06-20T21:50:48.226986 #2753]  INFO -- server-ubuntu-1604: executable=/opt/chef/bin/chef-client
+I, [2017-06-20T21:50:48.227018 #2753]  INFO -- server-ubuntu-1604: 
+I, [2017-06-20T21:50:48.227443 #2753]  INFO -- server-ubuntu-1604: 
+I, [2017-06-20T21:50:48.227499 #2753]  INFO -- server-ubuntu-1604: Running handlers:
+I, [2017-06-20T21:50:48.227839 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] ERROR: Running exception handlers
+I, [2017-06-20T21:50:48.227920 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] ERROR: Running exception handlers
+I, [2017-06-20T21:50:48.227965 #2753]  INFO -- server-ubuntu-1604: Running handlers complete
+I, [2017-06-20T21:50:48.227999 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] ERROR: Exception handlers complete
+I, [2017-06-20T21:50:48.228482 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] ERROR: Exception handlers complete
+I, [2017-06-20T21:50:48.228858 #2753]  INFO -- server-ubuntu-1604: Chef Client failed. 0 resources updated in 02 seconds
+I, [2017-06-20T21:50:48.229179 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] FATAL: Stacktrace dumped to /tmp/kitchen/cache/chef-stacktrace.out
+I, [2017-06-20T21:50:48.229573 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] FATAL: Stacktrace dumped to /tmp/kitchen/cache/chef-stacktrace.out
+I, [2017-06-20T21:50:48.230096 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
+I, [2017-06-20T21:50:48.230185 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
+I, [2017-06-20T21:50:48.230433 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] ERROR: could not find recipe server for cookbook my_cookbook
+I, [2017-06-20T21:50:48.231734 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] ERROR: could not find recipe server for cookbook my_cookbook
+I, [2017-06-20T21:50:48.241237 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
+I, [2017-06-20T21:50:48.244476 #2753]  INFO -- server-ubuntu-1604: [2017-06-20T16:20:46+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
+E, [2017-06-20T21:50:48.252555 #2753] ERROR -- server-ubuntu-1604: Converge failed on instance <server-ubuntu-1604>.
+E, [2017-06-20T21:50:48.252781 #2753] ERROR -- server-ubuntu-1604: ------Exception-------
+E, [2017-06-20T21:50:48.252854 #2753] ERROR -- server-ubuntu-1604: Class: Kitchen::ActionFailed
+E, [2017-06-20T21:50:48.252878 #2753] ERROR -- server-ubuntu-1604: Message: SSH exited (1) for command: [sh -c '
+TEST_KITCHEN="1"; export TEST_KITCHEN
+sudo -E /opt/chef/bin/chef-client --local-mode --config /tmp/kitchen/client.rb --log_level auto --force-formatter --no-color --json-attributes /tmp/kitchen/dna.json --chef-zero-port 8889 
+']
+E, [2017-06-20T21:50:48.252902 #2753] ERROR -- server-ubuntu-1604: ----------------------
+E, [2017-06-20T21:50:48.252921 #2753] ERROR -- server-ubuntu-1604: ------Backtrace-------
+E, [2017-06-20T21:50:48.252939 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:83:in `rescue in call'
+E, [2017-06-20T21:50:48.252958 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:86:in `call'
+E, [2017-06-20T21:50:48.252979 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:384:in `block in converge_action'
+E, [2017-06-20T21:50:48.253009 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:527:in `synchronize_or_call'
+E, [2017-06-20T21:50:48.253038 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:489:in `block in action'
+E, [2017-06-20T21:50:48.253057 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/2.3.0/benchmark.rb:293:in `measure'
+E, [2017-06-20T21:50:48.253079 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:488:in `action'
+E, [2017-06-20T21:50:48.253098 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:380:in `converge_action'
+E, [2017-06-20T21:50:48.253138 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:359:in `block in transition_to'
+E, [2017-06-20T21:50:48.253159 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `each'
+E, [2017-06-20T21:50:48.253178 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `transition_to'
+E, [2017-06-20T21:50:48.253196 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:157:in `verify'
+E, [2017-06-20T21:50:48.253215 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `public_send'
+E, [2017-06-20T21:50:48.253234 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `run_action_in_thread'
+E, [2017-06-20T21:50:48.253252 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'
+E, [2017-06-20T21:50:48.253271 #2753] ERROR -- server-ubuntu-1604: ----End Backtrace-----
+E, [2017-06-20T21:50:48.253289 #2753] ERROR -- server-ubuntu-1604: ---Nested Exception---
+E, [2017-06-20T21:50:48.253309 #2753] ERROR -- server-ubuntu-1604: Class: Kitchen::Transport::SshFailed
+E, [2017-06-20T21:50:48.253325 #2753] ERROR -- server-ubuntu-1604: Message: SSH exited (1) for command: [sh -c '
+TEST_KITCHEN="1"; export TEST_KITCHEN
+sudo -E /opt/chef/bin/chef-client --local-mode --config /tmp/kitchen/client.rb --log_level auto --force-formatter --no-color --json-attributes /tmp/kitchen/dna.json --chef-zero-port 8889 
+']
+E, [2017-06-20T21:50:48.253343 #2753] ERROR -- server-ubuntu-1604: ----------------------
+E, [2017-06-20T21:50:48.253359 #2753] ERROR -- server-ubuntu-1604: ------Backtrace-------
+E, [2017-06-20T21:50:48.253375 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:83:in `rescue in call'
+E, [2017-06-20T21:50:48.253391 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:86:in `call'
+E, [2017-06-20T21:50:48.253410 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:384:in `block in converge_action'
+E, [2017-06-20T21:50:48.253429 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:527:in `synchronize_or_call'
+E, [2017-06-20T21:50:48.253447 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:489:in `block in action'
+E, [2017-06-20T21:50:48.253467 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/2.3.0/benchmark.rb:293:in `measure'
+E, [2017-06-20T21:50:48.253535 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:488:in `action'
+E, [2017-06-20T21:50:48.253554 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:380:in `converge_action'
+E, [2017-06-20T21:50:48.253572 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:359:in `block in transition_to'
+E, [2017-06-20T21:50:48.253594 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `each'
+E, [2017-06-20T21:50:48.253611 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `transition_to'
+E, [2017-06-20T21:50:48.253634 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:157:in `verify'
+E, [2017-06-20T21:50:48.253648 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `public_send'
+E, [2017-06-20T21:50:48.253662 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `run_action_in_thread'
+E, [2017-06-20T21:50:48.253679 #2753] ERROR -- server-ubuntu-1604: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'
+E, [2017-06-20T21:50:48.253698 #2753] ERROR -- server-ubuntu-1604: ----End Backtrace-----
diff --git a/cookbooks/my_cookbook/.kitchen/logs/with-calc-centos-73.log b/cookbooks/my_cookbook/.kitchen/logs/with-calc-centos-73.log
new file mode 100644
index 0000000000000000000000000000000000000000..f191c7b9d9cb78454c4220c46d717f840e6a2336
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/logs/with-calc-centos-73.log
@@ -0,0 +1,552 @@
+I, [2017-07-01T13:42:50.532329 #23507]  INFO -- with-calc-centos-73: -----> Converging <with-calc-centos-73>...
+I, [2017-07-01T13:42:50.533614 #23507]  INFO -- with-calc-centos-73: Preparing files for transfer
+I, [2017-07-01T13:42:50.533943 #23507]  INFO -- with-calc-centos-73: Preparing dna.json
+I, [2017-07-01T13:42:50.535192 #23507]  INFO -- with-calc-centos-73: Resolving cookbook dependencies with Berkshelf 5.6.4...
+I, [2017-07-01T13:42:56.031668 #23507]  INFO -- with-calc-centos-73: Removing non-cookbook files before transfer
+I, [2017-07-01T13:42:56.039338 #23507]  INFO -- with-calc-centos-73: Preparing roles
+I, [2017-07-01T13:42:56.040885 #23507]  INFO -- with-calc-centos-73: Preparing validation.pem
+I, [2017-07-01T13:42:56.041476 #23507]  INFO -- with-calc-centos-73: Preparing client.rb
+I, [2017-07-01T13:42:56.447125 #23507]  INFO -- with-calc-centos-73: -----> Installing Chef Omnibus (install only if missing)
+I, [2017-07-01T13:42:56.451072 #23507]  INFO -- with-calc-centos-73: Downloading https://omnitruck.chef.io/install.sh to file /tmp/install.sh
+I, [2017-07-01T13:42:56.451191 #23507]  INFO -- with-calc-centos-73: Trying wget...
+I, [2017-07-01T13:42:56.481401 #23507]  INFO -- with-calc-centos-73: Trying curl...
+I, [2017-07-01T13:42:56.501879 #23507]  INFO -- with-calc-centos-73: Trying python...
+I, [2017-07-01T13:42:56.563765 #23507]  INFO -- with-calc-centos-73: Trying perl...
+I, [2017-07-01T13:42:56.571108 #23507]  INFO -- with-calc-centos-73: Unable to download https://omnitruck.chef.io/install.sh to /tmp/install.sh, aborting
+I, [2017-07-01T13:42:56.571256 #23507]  INFO -- with-calc-centos-73: \nDEBUG OUTPUT FOLLOWS:\n\nSTDERR from wget:\n\n--2017-07-01 07:59:26--  https://omnitruck.chef.io/install.sh
+I, [2017-07-01T13:42:56.571384 #23507]  INFO -- with-calc-centos-73: Resolving omnitruck.chef.io (omnitruck.chef.io)... failed: Name or service not known.
+I, [2017-07-01T13:42:56.571440 #23507]  INFO -- with-calc-centos-73: wget: unable to resolve host address ‘omnitruck.chef.io’\n\nSTDERR from curl:\n\n\n\nSTDERR from python:\n\nTraceback (most recent call last):
+I, [2017-07-01T13:42:56.571494 #23507]  INFO -- with-calc-centos-73:   File "<string>", line 1, in <module>
+I, [2017-07-01T13:42:56.571544 #23507]  INFO -- with-calc-centos-73:   File "/usr/lib64/python2.7/urllib2.py", line 154, in urlopen
+I, [2017-07-01T13:42:56.571609 #23507]  INFO -- with-calc-centos-73:     return opener.open(url, data, timeout)
+I, [2017-07-01T13:42:56.571658 #23507]  INFO -- with-calc-centos-73:   File "/usr/lib64/python2.7/urllib2.py", line 431, in open
+I, [2017-07-01T13:42:56.571706 #23507]  INFO -- with-calc-centos-73:     response = self._open(req, data)
+I, [2017-07-01T13:42:56.571759 #23507]  INFO -- with-calc-centos-73:   File "/usr/lib64/python2.7/urllib2.py", line 449, in _open
+I, [2017-07-01T13:42:56.571808 #23507]  INFO -- with-calc-centos-73:     '_open', req)
+I, [2017-07-01T13:42:56.571879 #23507]  INFO -- with-calc-centos-73:   File "/usr/lib64/python2.7/urllib2.py", line 409, in _call_chain
+I, [2017-07-01T13:42:56.571919 #23507]  INFO -- with-calc-centos-73:     result = func(*args)
+I, [2017-07-01T13:42:56.571960 #23507]  INFO -- with-calc-centos-73:   File "/usr/lib64/python2.7/urllib2.py", line 1258, in https_open
+I, [2017-07-01T13:42:56.571996 #23507]  INFO -- with-calc-centos-73:     context=self._context, check_hostname=self._check_hostname)
+I, [2017-07-01T13:42:56.572033 #23507]  INFO -- with-calc-centos-73:   File "/usr/lib64/python2.7/urllib2.py", line 1214, in do_open
+I, [2017-07-01T13:42:56.572093 #23507]  INFO -- with-calc-centos-73:     raise URLError(err)
+I, [2017-07-01T13:42:56.572128 #23507]  INFO -- with-calc-centos-73: urllib2.URLError: <urlopen error [Errno -2] Name or service not known>\n\nSTDERR from perl:\n\nCan't locate LWP/Simple.pm in @INC (@INC contains: /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at -e line 1.
+I, [2017-07-01T13:42:56.572178 #23507]  INFO -- with-calc-centos-73: BEGIN failed--compilation aborted at -e line 1.\n
+E, [2017-07-01T13:42:56.577320 #23507] ERROR -- with-calc-centos-73: Converge failed on instance <with-calc-centos-73>.
+E, [2017-07-01T13:42:56.577531 #23507] ERROR -- with-calc-centos-73: ------Exception-------
+E, [2017-07-01T13:42:56.577580 #23507] ERROR -- with-calc-centos-73: Class: Kitchen::ActionFailed
+E, [2017-07-01T13:42:56.577617 #23507] ERROR -- with-calc-centos-73: Message: SSH exited (10) for command: [sudo -E sh -c '
+
+chef_omnibus_root="/opt/chef"
+chef_omnibus_url="https://omnitruck.chef.io/install.sh"
+install_flags="-d /tmp/omnibus/cache"
+pretty_version="install only if missing"
+sudo_sh="sudo -E sh"
+version="true"
+
+tmp_stderr="/tmp/stderr";
+
+# capture_tmp_stderr SOURCE
+capture_tmp_stderr() {
+  # spool up $tmp_stderr from all the commands we called
+  if test -f "$tmp_stderr"; then
+    output="`cat $tmp_stderr`";
+    stderr_results="${stderr_results}\nSTDERR from $1:\n\n${output}\n";
+    rm $tmp_stderr;
+  fi
+}
+
+# do_curl URL FILENAME
+do_curl() {
+  echo "Trying curl...";
+  curl -sL -D "$tmp_stderr" "$1" > "$2";
+  ec=$?;
+  # check for 404
+  grep "404 Not Found" "$tmp_stderr" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    http_404_error "$1";
+  fi
+
+  # check for bad return status or empty output
+  if test $ec -ne 0 || test ! -s "$2"; then
+    capture_tmp_stderr "curl";
+    return 1;
+  else
+    echo "Download complete.";
+    return 0;
+  fi
+}
+
+# do_download URL FILENAME
+do_download() {
+  echo "Downloading ${1} to file ${2}";
+
+  exists wget;
+  if test $? -eq 0; then
+    do_wget "$1" "$2" && return 0;
+  fi
+
+  exists curl;
+  if test $? -eq 0; then
+    do_curl "$1" "$2" && return 0;
+  fi
+
+  exists fetch;
+  if test $? -eq 0; then
+    do_fetch "$1" "$2" && return 0;
+  fi
+
+  exists python;
+  if test $? -eq 0; then
+    do_python "$1" "$2" && return 0;
+  fi
+
+  exists perl;
+  if test $? -eq 0; then
+    do_perl "$1" "$2" && return 0;
+  fi
+
+  unable_to_download "$1" "$2";
+}
+
+# do_fetch URL FILENAME
+do_fetch() {
+  echo "Trying fetch...";
+  fetch -o "$2" "$1" 2>"$tmp_stderr";
+  ec=$?;
+  # check for 404
+  grep "Not Found" "$tmp_stderr" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    http_404_error "$1";
+  fi
+
+  # check for bad return status or empty output
+  if test $ec -ne 0 || test ! -s "$2"; then
+    capture_tmp_stderr "fetch";
+    return 1;
+  else
+    echo "Download complete.";
+    return 0;
+  fi
+}
+
+# do_perl URL FILENAME
+do_perl() {
+  echo "Trying perl...";
+  perl -e "use LWP::Simple; getprint(\$ARGV[0]);" "$1" > "$2" 2>"$tmp_stderr";
+  ec=$?;
+  # check for 404
+  grep "404 Not Found" "$tmp_stderr" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    http_404_error "$1";
+  fi
+
+  # check for bad return status or empty output
+  if test $ec -ne 0 || test ! -s "$2"; then
+    capture_tmp_stderr "perl";
+    return 1;
+  else
+    echo "Download complete.";
+    return 0;
+  fi
+}
+
+# do_python URL FILENAME
+do_python() {
+  echo "Trying python...";
+  python -c "import sys,urllib2 ; sys.stdout.write(urllib2.urlopen(sys.argv[1]).read())" "$1" > "$2" 2>"$tmp_stderr";
+  ec=$?;
+  # check for 404
+  grep "HTTP Error 404" "$tmp_stderr" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    http_404_error "$1";
+  fi
+
+  # check for bad return status or empty output
+  if test $ec -ne 0 || test ! -s "$2"; then
+    capture_tmp_stderr "python";
+    return 1;
+  else
+    echo "Download complete.";
+    return 0;
+  fi
+}
+
+# do_wget URL FILENAME
+do_wget() {
+  echo "Trying wget...";
+  wget -O "$2" "$1" 2>"$tmp_stderr";
+  ec=$?;
+  # check for 404
+  grep "ERROR 404" "$tmp_stderr" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    http_404_error "$1";
+  fi
+
+  # check for bad return status or empty output
+  if test $ec -ne 0 || test ! -s "$2"; then
+    capture_tmp_stderr "wget";
+    return 1;
+  else
+    echo "Download complete.";
+    return 0;
+  fi
+}
+
+# exists COMMAND
+exists() {
+  if command -v "$1" >/dev/null 2>&1; then
+    return 0;
+  else
+    return 1;
+  fi
+}
+
+# http_404_error URL
+http_404_error() {
+  echo ">>>>>> Downloading ${1} resulted in an HTTP/404, aborting";
+  exit 40;
+}
+
+# should_update_chef ROOT VERSION
+should_update_chef() {
+  if test ! -d "$1"; then
+    return 0;
+  elif test "$2" = "true"; then
+    return 1;
+  elif test "$2" = "latest"; then
+    return 0;
+  fi
+
+  if test -f "${1}/version-manifest.txt"; then
+    chef_version="`head -n 1 ${1}/version-manifest.txt | cut -d \" \" -f 2`";
+  else
+    chef_version="`${1}/bin/chef-solo -v | cut -d \" \" -f 2`";
+  fi
+
+  echo "$chef_version" | grep "^${2}" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    return 1;
+  else
+    echo "${2}" | grep "^$chef_version" 2>&1 >/dev/null;
+    if test $? -eq 0; then
+      return 1;
+    else
+      return 0;
+    fi
+  fi
+}
+
+# unable_to_download URL FILE
+unable_to_download() {
+  echo "Unable to download $1 to $2, aborting";
+
+  if test "x${stderr_results}" != "x"; then
+    echo "\nDEBUG OUTPUT FOLLOWS:\n${stderr_results}";
+  fi
+
+  exit 10;
+}
+
+# main
+main() {
+  should_update_chef "$chef_omnibus_root" "$version"
+  if test $? -eq 0; then
+    echo "-----> Installing Chef Omnibus (${pretty_version})";
+
+    # solaris 10 lacks recent enough credentials, so http url is used
+    platform="`/usr/bin/uname -s 2>/dev/null`";
+    platform_version="`/usr/bin/uname -r 2>/dev/null`";
+    if test "x${platform}" = "xSunOS" && test "x${platform_version}" = "x5.10"; then
+      chef_omnibus_url=`echo "$chef_omnibus_url" | sed -e "s/https/http/"`;
+    fi
+
+    do_download "$chef_omnibus_url" /tmp/install.sh;
+    $sudo_sh /tmp/install.sh $install_flags;
+  else
+    echo "-----> Chef Omnibus installation detected (${pretty_version})";
+  fi
+}
+
+# augment path in an attempt to find a download program
+PATH="${PATH}:/opt/local/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/sfw/bin";
+export PATH;
+
+main
+']
+E, [2017-07-01T13:42:56.577665 #23507] ERROR -- with-calc-centos-73: ----------------------
+E, [2017-07-01T13:42:56.577701 #23507] ERROR -- with-calc-centos-73: ------Backtrace-------
+E, [2017-07-01T13:42:56.577730 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:83:in `rescue in call'
+E, [2017-07-01T13:42:56.577765 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:86:in `call'
+E, [2017-07-01T13:42:56.577796 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:384:in `block in converge_action'
+E, [2017-07-01T13:42:56.577831 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:527:in `synchronize_or_call'
+E, [2017-07-01T13:42:56.577861 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:489:in `block in action'
+E, [2017-07-01T13:42:56.577908 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/2.3.0/benchmark.rb:293:in `measure'
+E, [2017-07-01T13:42:56.577950 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:488:in `action'
+E, [2017-07-01T13:42:56.578017 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:380:in `converge_action'
+E, [2017-07-01T13:42:56.578069 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:359:in `block in transition_to'
+E, [2017-07-01T13:42:56.578109 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `each'
+E, [2017-07-01T13:42:56.578144 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `transition_to'
+E, [2017-07-01T13:42:56.578183 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:135:in `converge'
+E, [2017-07-01T13:42:56.578218 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `public_send'
+E, [2017-07-01T13:42:56.578311 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `run_action_in_thread'
+E, [2017-07-01T13:42:56.578378 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'
+E, [2017-07-01T13:42:56.578419 #23507] ERROR -- with-calc-centos-73: ----End Backtrace-----
+E, [2017-07-01T13:42:56.578480 #23507] ERROR -- with-calc-centos-73: ---Nested Exception---
+E, [2017-07-01T13:42:56.578537 #23507] ERROR -- with-calc-centos-73: Class: Kitchen::Transport::SshFailed
+E, [2017-07-01T13:42:56.578581 #23507] ERROR -- with-calc-centos-73: Message: SSH exited (10) for command: [sudo -E sh -c '
+
+chef_omnibus_root="/opt/chef"
+chef_omnibus_url="https://omnitruck.chef.io/install.sh"
+install_flags="-d /tmp/omnibus/cache"
+pretty_version="install only if missing"
+sudo_sh="sudo -E sh"
+version="true"
+
+tmp_stderr="/tmp/stderr";
+
+# capture_tmp_stderr SOURCE
+capture_tmp_stderr() {
+  # spool up $tmp_stderr from all the commands we called
+  if test -f "$tmp_stderr"; then
+    output="`cat $tmp_stderr`";
+    stderr_results="${stderr_results}\nSTDERR from $1:\n\n${output}\n";
+    rm $tmp_stderr;
+  fi
+}
+
+# do_curl URL FILENAME
+do_curl() {
+  echo "Trying curl...";
+  curl -sL -D "$tmp_stderr" "$1" > "$2";
+  ec=$?;
+  # check for 404
+  grep "404 Not Found" "$tmp_stderr" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    http_404_error "$1";
+  fi
+
+  # check for bad return status or empty output
+  if test $ec -ne 0 || test ! -s "$2"; then
+    capture_tmp_stderr "curl";
+    return 1;
+  else
+    echo "Download complete.";
+    return 0;
+  fi
+}
+
+# do_download URL FILENAME
+do_download() {
+  echo "Downloading ${1} to file ${2}";
+
+  exists wget;
+  if test $? -eq 0; then
+    do_wget "$1" "$2" && return 0;
+  fi
+
+  exists curl;
+  if test $? -eq 0; then
+    do_curl "$1" "$2" && return 0;
+  fi
+
+  exists fetch;
+  if test $? -eq 0; then
+    do_fetch "$1" "$2" && return 0;
+  fi
+
+  exists python;
+  if test $? -eq 0; then
+    do_python "$1" "$2" && return 0;
+  fi
+
+  exists perl;
+  if test $? -eq 0; then
+    do_perl "$1" "$2" && return 0;
+  fi
+
+  unable_to_download "$1" "$2";
+}
+
+# do_fetch URL FILENAME
+do_fetch() {
+  echo "Trying fetch...";
+  fetch -o "$2" "$1" 2>"$tmp_stderr";
+  ec=$?;
+  # check for 404
+  grep "Not Found" "$tmp_stderr" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    http_404_error "$1";
+  fi
+
+  # check for bad return status or empty output
+  if test $ec -ne 0 || test ! -s "$2"; then
+    capture_tmp_stderr "fetch";
+    return 1;
+  else
+    echo "Download complete.";
+    return 0;
+  fi
+}
+
+# do_perl URL FILENAME
+do_perl() {
+  echo "Trying perl...";
+  perl -e "use LWP::Simple; getprint(\$ARGV[0]);" "$1" > "$2" 2>"$tmp_stderr";
+  ec=$?;
+  # check for 404
+  grep "404 Not Found" "$tmp_stderr" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    http_404_error "$1";
+  fi
+
+  # check for bad return status or empty output
+  if test $ec -ne 0 || test ! -s "$2"; then
+    capture_tmp_stderr "perl";
+    return 1;
+  else
+    echo "Download complete.";
+    return 0;
+  fi
+}
+
+# do_python URL FILENAME
+do_python() {
+  echo "Trying python...";
+  python -c "import sys,urllib2 ; sys.stdout.write(urllib2.urlopen(sys.argv[1]).read())" "$1" > "$2" 2>"$tmp_stderr";
+  ec=$?;
+  # check for 404
+  grep "HTTP Error 404" "$tmp_stderr" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    http_404_error "$1";
+  fi
+
+  # check for bad return status or empty output
+  if test $ec -ne 0 || test ! -s "$2"; then
+    capture_tmp_stderr "python";
+    return 1;
+  else
+    echo "Download complete.";
+    return 0;
+  fi
+}
+
+# do_wget URL FILENAME
+do_wget() {
+  echo "Trying wget...";
+  wget -O "$2" "$1" 2>"$tmp_stderr";
+  ec=$?;
+  # check for 404
+  grep "ERROR 404" "$tmp_stderr" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    http_404_error "$1";
+  fi
+
+  # check for bad return status or empty output
+  if test $ec -ne 0 || test ! -s "$2"; then
+    capture_tmp_stderr "wget";
+    return 1;
+  else
+    echo "Download complete.";
+    return 0;
+  fi
+}
+
+# exists COMMAND
+exists() {
+  if command -v "$1" >/dev/null 2>&1; then
+    return 0;
+  else
+    return 1;
+  fi
+}
+
+# http_404_error URL
+http_404_error() {
+  echo ">>>>>> Downloading ${1} resulted in an HTTP/404, aborting";
+  exit 40;
+}
+
+# should_update_chef ROOT VERSION
+should_update_chef() {
+  if test ! -d "$1"; then
+    return 0;
+  elif test "$2" = "true"; then
+    return 1;
+  elif test "$2" = "latest"; then
+    return 0;
+  fi
+
+  if test -f "${1}/version-manifest.txt"; then
+    chef_version="`head -n 1 ${1}/version-manifest.txt | cut -d \" \" -f 2`";
+  else
+    chef_version="`${1}/bin/chef-solo -v | cut -d \" \" -f 2`";
+  fi
+
+  echo "$chef_version" | grep "^${2}" 2>&1 >/dev/null;
+  if test $? -eq 0; then
+    return 1;
+  else
+    echo "${2}" | grep "^$chef_version" 2>&1 >/dev/null;
+    if test $? -eq 0; then
+      return 1;
+    else
+      return 0;
+    fi
+  fi
+}
+
+# unable_to_download URL FILE
+unable_to_download() {
+  echo "Unable to download $1 to $2, aborting";
+
+  if test "x${stderr_results}" != "x"; then
+    echo "\nDEBUG OUTPUT FOLLOWS:\n${stderr_results}";
+  fi
+
+  exit 10;
+}
+
+# main
+main() {
+  should_update_chef "$chef_omnibus_root" "$version"
+  if test $? -eq 0; then
+    echo "-----> Installing Chef Omnibus (${pretty_version})";
+
+    # solaris 10 lacks recent enough credentials, so http url is used
+    platform="`/usr/bin/uname -s 2>/dev/null`";
+    platform_version="`/usr/bin/uname -r 2>/dev/null`";
+    if test "x${platform}" = "xSunOS" && test "x${platform_version}" = "x5.10"; then
+      chef_omnibus_url=`echo "$chef_omnibus_url" | sed -e "s/https/http/"`;
+    fi
+
+    do_download "$chef_omnibus_url" /tmp/install.sh;
+    $sudo_sh /tmp/install.sh $install_flags;
+  else
+    echo "-----> Chef Omnibus installation detected (${pretty_version})";
+  fi
+}
+
+# augment path in an attempt to find a download program
+PATH="${PATH}:/opt/local/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/sfw/bin";
+export PATH;
+
+main
+']
+E, [2017-07-01T13:42:56.578645 #23507] ERROR -- with-calc-centos-73: ----------------------
+E, [2017-07-01T13:42:56.578694 #23507] ERROR -- with-calc-centos-73: ------Backtrace-------
+E, [2017-07-01T13:42:56.578736 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:83:in `rescue in call'
+E, [2017-07-01T13:42:56.578774 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/provisioner/base.rb:86:in `call'
+E, [2017-07-01T13:42:56.578807 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:384:in `block in converge_action'
+E, [2017-07-01T13:42:56.578840 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:527:in `synchronize_or_call'
+E, [2017-07-01T13:42:56.578874 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:489:in `block in action'
+E, [2017-07-01T13:42:56.578907 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/2.3.0/benchmark.rb:293:in `measure'
+E, [2017-07-01T13:42:56.578941 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:488:in `action'
+E, [2017-07-01T13:42:56.578975 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:380:in `converge_action'
+E, [2017-07-01T13:42:56.579005 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:359:in `block in transition_to'
+E, [2017-07-01T13:42:56.579039 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `each'
+E, [2017-07-01T13:42:56.579073 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:358:in `transition_to'
+E, [2017-07-01T13:42:56.579114 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/instance.rb:135:in `converge'
+E, [2017-07-01T13:42:56.579150 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `public_send'
+E, [2017-07-01T13:42:56.579184 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:197:in `run_action_in_thread'
+E, [2017-07-01T13:42:56.579215 #23507] ERROR -- with-calc-centos-73: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:169:in `block (2 levels) in run_action'
+E, [2017-07-01T13:42:56.579253 #23507] ERROR -- with-calc-centos-73: ----End Backtrace-----
diff --git a/cookbooks/my_cookbook/.kitchen/logs/with-calc-role-centos-73.log b/cookbooks/my_cookbook/.kitchen/logs/with-calc-role-centos-73.log
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/cookbooks/my_cookbook/.kitchen/logs/with-role-centos-73.log b/cookbooks/my_cookbook/.kitchen/logs/with-role-centos-73.log
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/cookbooks/my_cookbook/.kitchen/server-centos-73.yml b/cookbooks/my_cookbook/.kitchen/server-centos-73.yml
new file mode 100644
index 0000000000000000000000000000000000000000..0602fcd57db800045045087ef95f680b976c0d9e
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/server-centos-73.yml
@@ -0,0 +1,7 @@
+---
+hostname: 127.0.0.1
+port: '2200'
+username: vagrant
+ssh_key: "/home/ravi/chef-repo/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-centos-73/.vagrant/machines/default/virtualbox/private_key"
+last_action: create
+last_error: Kitchen::ActionFailed
diff --git a/cookbooks/my_cookbook/.kitchen/server-ubuntu-1604.yml b/cookbooks/my_cookbook/.kitchen/server-ubuntu-1604.yml
new file mode 100644
index 0000000000000000000000000000000000000000..e5277235d6be6b9dd1aa426c97873aa5118cc7fb
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/server-ubuntu-1604.yml
@@ -0,0 +1,7 @@
+---
+hostname: 127.0.0.1
+port: '2201'
+username: vagrant
+ssh_key: "/home/ravi/ravindra-chef/chef-repo/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-server-ubuntu-1604/.vagrant/machines/default/virtualbox/private_key"
+last_action: create
+last_error: Kitchen::ActionFailed
diff --git a/cookbooks/my_cookbook/.kitchen/with-calc-centos-73.yml b/cookbooks/my_cookbook/.kitchen/with-calc-centos-73.yml
new file mode 100644
index 0000000000000000000000000000000000000000..a107517351badcc88362ce86864c1270f177c59a
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/with-calc-centos-73.yml
@@ -0,0 +1,7 @@
+---
+hostname: 127.0.0.1
+port: '2222'
+username: vagrant
+ssh_key: "/home/ravi/chef-repo/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-centos-73/.vagrant/machines/default/virtualbox/private_key"
+last_action: create
+last_error: Kitchen::ActionFailed
diff --git a/cookbooks/my_cookbook/.kitchen/with-calc-role-centos-73.yml b/cookbooks/my_cookbook/.kitchen/with-calc-role-centos-73.yml
new file mode 100644
index 0000000000000000000000000000000000000000..48ed5b949e7185b56351b64b2d2dad50b2f5afdf
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/with-calc-role-centos-73.yml
@@ -0,0 +1,7 @@
+---
+hostname: 127.0.0.1
+port: '2202'
+username: vagrant
+ssh_key: "/home/ravi/chef-repo/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-calc-role-centos-73/.vagrant/machines/default/virtualbox/private_key"
+last_action: converge
+last_error: 
diff --git a/cookbooks/my_cookbook/.kitchen/with-role-centos-73.yml b/cookbooks/my_cookbook/.kitchen/with-role-centos-73.yml
new file mode 100644
index 0000000000000000000000000000000000000000..c0bebc108c714984431a5a27509b0370bd9b7e8d
--- /dev/null
+++ b/cookbooks/my_cookbook/.kitchen/with-role-centos-73.yml
@@ -0,0 +1,7 @@
+---
+hostname: 127.0.0.1
+port: '2201'
+username: vagrant
+ssh_key: "/home/ravi/chef-repo/cookbooks/my_cookbook/.kitchen/kitchen-vagrant/kitchen-my_cookbook-with-role-centos-73/.vagrant/machines/default/virtualbox/private_key"
+last_action: converge
+last_error: 
diff --git a/cookbooks/my_cookbook/Berksfile b/cookbooks/my_cookbook/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..34fea2166bafb6b6a62488907c532a9d4692d35e
--- /dev/null
+++ b/cookbooks/my_cookbook/Berksfile
@@ -0,0 +1,3 @@
+source 'https://supermarket.chef.io'
+
+metadata
diff --git a/cookbooks/my_cookbook/Berksfile.lock b/cookbooks/my_cookbook/Berksfile.lock
new file mode 100644
index 0000000000000000000000000000000000000000..42543f0f20cfe46cfc21a58118b8b261db55c4d3
--- /dev/null
+++ b/cookbooks/my_cookbook/Berksfile.lock
@@ -0,0 +1,7 @@
+DEPENDENCIES
+  my_cookbook
+    path: .
+    metadata: true
+
+GRAPH
+  my_cookbook (0.1.0)
diff --git a/cookbooks/my_cookbook/README.md b/cookbooks/my_cookbook/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..cf62bc9ed951d4872fcbaf2a9b4f3a98a6e9b2ad
--- /dev/null
+++ b/cookbooks/my_cookbook/README.md
@@ -0,0 +1,4 @@
+# my_cookbook
+
+TODO: Enter the cookbook description here.
+
diff --git a/cookbooks/my_cookbook/attributes/default.rb b/cookbooks/my_cookbook/attributes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..c6fafcc237b9568d496792c7e9ce0cff2df2d5a1
--- /dev/null
+++ b/cookbooks/my_cookbook/attributes/default.rb
@@ -0,0 +1,4 @@
+default['my_cookbook']['greeting'] = 'ohai, chef!'
+default['my_cookbook']['message'] = 'Hello World !!!!'
+default['my_cookbook']['calcvar'] = "#{node['my_cookbook']['Hi']} #{node['my_cookbook']['world']}"
+default['my_cookbook']['ipaddr'] = 'ravi'
diff --git a/cookbooks/my_cookbook/chefignore b/cookbooks/my_cookbook/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/cookbooks/my_cookbook/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/cookbooks/my_cookbook/libraries/ipaddress.rb b/cookbooks/my_cookbook/libraries/ipaddress.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7d2a7bad7174e7fadf7e92e6f5dc9644bf60c2e7
--- /dev/null
+++ b/cookbooks/my_cookbook/libraries/ipaddress.rb
@@ -0,0 +1,11 @@
+#class Chef::Recipe  
+#  def netmask(ipaddress)    
+#    IPAddress(ipaddress).netmask  
+#  end
+#end
+
+class Chef::Recipe::IPAddress      
+  def self.netmask(ipaddress)        
+    IPAddress(ipaddress).netmask      
+  end    
+end
diff --git a/cookbooks/my_cookbook/metadata.rb b/cookbooks/my_cookbook/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b28c08fc2ab127ed38c82c4fc1f8fa5212f220bc
--- /dev/null
+++ b/cookbooks/my_cookbook/metadata.rb
@@ -0,0 +1,20 @@
+name 'my_cookbook'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'All Rights Reserved'
+description 'Installs/Configures my_cookbook'
+long_description 'Installs/Configures my_cookbook'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+# The `issues_url` points to the location where issues for this cookbook are
+# tracked.  A `View Issues` link will be displayed on this cookbook's page when
+# uploaded to a Supermarket.
+#
+# issues_url 'https://github.com/<insert_org_here>/my_cookbook/issues'
+
+# The `source_url` points to the development reposiory for this cookbook.  A
+# `View Source` link will be displayed on this cookbook's page when uploaded to
+# a Supermarket.
+#
+# source_url 'https://github.com/<insert_org_here>/my_cookbook'
diff --git a/cookbooks/my_cookbook/recipes/.kitchen/logs/kitchen.log b/cookbooks/my_cookbook/recipes/.kitchen/logs/kitchen.log
new file mode 100644
index 0000000000000000000000000000000000000000..a6f7efa719d3b00685bd852714de83341d999d27
--- /dev/null
+++ b/cookbooks/my_cookbook/recipes/.kitchen/logs/kitchen.log
@@ -0,0 +1,30 @@
+I, [2017-06-20T17:03:52.222157 #23787]  INFO -- Kitchen: -----> Starting Kitchen (v1.16.0)
+E, [2017-06-20T17:03:52.222508 #23787] ERROR -- Kitchen: ------Exception-------
+E, [2017-06-20T17:03:52.222544 #23787] ERROR -- Kitchen: Class: Kitchen::UserError
+E, [2017-06-20T17:03:52.222568 #23787] ERROR -- Kitchen: Message: Kitchen YAML file /home/ravi/ravindra-chef/chef-repo/cookbooks/my_cookbook/recipes/.kitchen.yml does not exist.
+E, [2017-06-20T17:03:52.222600 #23787] ERROR -- Kitchen: ----------------------
+E, [2017-06-20T17:03:52.222619 #23787] ERROR -- Kitchen: ------Backtrace-------
+E, [2017-06-20T17:03:52.222643 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/loader/yaml.rb:71:in `read'
+E, [2017-06-20T17:03:52.222662 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/config.rb:152:in `data'
+E, [2017-06-20T17:03:52.222681 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/config.rb:131:in `suites'
+E, [2017-06-20T17:03:52.222699 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/config.rb:182:in `filter_instances'
+E, [2017-06-20T17:03:52.222718 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/config.rb:141:in `build_instances'
+E, [2017-06-20T17:03:52.222736 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/config.rb:117:in `instances'
+E, [2017-06-20T17:03:52.222754 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:112:in `filtered_instances'
+E, [2017-06-20T17:03:52.222773 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command.rb:142:in `parse_subcommand'
+E, [2017-06-20T17:03:52.222791 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command/test.rb:40:in `block in call'
+E, [2017-06-20T17:03:52.222859 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/2.3.0/benchmark.rb:293:in `measure'
+E, [2017-06-20T17:03:52.222881 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/command/test.rb:38:in `call'
+E, [2017-06-20T17:03:52.222913 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/cli.rb:53:in `perform'
+E, [2017-06-20T17:03:52.222929 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/cli.rb:234:in `test'
+E, [2017-06-20T17:03:52.222943 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/thor-0.19.1/lib/thor/command.rb:27:in `run'
+E, [2017-06-20T17:03:52.222961 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb:126:in `invoke_command'
+E, [2017-06-20T17:03:52.222980 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/cli.rb:334:in `invoke_task'
+E, [2017-06-20T17:03:52.222998 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/thor-0.19.1/lib/thor.rb:359:in `dispatch'
+E, [2017-06-20T17:03:52.223019 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/thor-0.19.1/lib/thor/base.rb:440:in `start'
+E, [2017-06-20T17:03:52.223051 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/bin/kitchen:13:in `block in <top (required)>'
+E, [2017-06-20T17:03:52.223069 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/lib/kitchen/errors.rb:171:in `with_friendly_errors'
+E, [2017-06-20T17:03:52.223087 #23787] ERROR -- Kitchen: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/test-kitchen-1.16.0/bin/kitchen:13:in `<top (required)>'
+E, [2017-06-20T17:03:52.223106 #23787] ERROR -- Kitchen: /bin/kitchen:21:in `load'
+E, [2017-06-20T17:03:52.223122 #23787] ERROR -- Kitchen: /bin/kitchen:21:in `<main>'
+E, [2017-06-20T17:03:52.223144 #23787] ERROR -- Kitchen: ----End Backtrace-----
diff --git a/cookbooks/my_cookbook/recipes/default.rb b/cookbooks/my_cookbook/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..6510a816b8f386d7e7a34bd7512fb6bd62b2fd82
--- /dev/null
+++ b/cookbooks/my_cookbook/recipes/default.rb
@@ -0,0 +1,19 @@
+file '/tmp/greeting.txt' do
+  content node['my_cookbook']['message']
+end
+
+file '/tmp/calc.txt' do
+  content node['my_cookbook']['calcvar']
+end
+
+chef_gem 'ipaddress' do
+  compile_time true
+end
+
+require 'ipaddress'
+ip = '10.10.0.0/24'
+#mask = netmask(ip)
+mask = IPAddress.netmask(ip)
+Chef::Log.info("Netmask of #{ip}: #{mask}")
+
+
diff --git a/cookbooks/my_cookbook/spec/spec_helper.rb b/cookbooks/my_cookbook/spec/spec_helper.rb
new file mode 100644
index 0000000000000000000000000000000000000000..1dd5126bf629c317834b3c7bb35842981fc93233
--- /dev/null
+++ b/cookbooks/my_cookbook/spec/spec_helper.rb
@@ -0,0 +1,2 @@
+require 'chefspec'
+require 'chefspec/berkshelf'
diff --git a/cookbooks/my_cookbook/spec/unit/recipes/default_spec.rb b/cookbooks/my_cookbook/spec/unit/recipes/default_spec.rb
new file mode 100644
index 0000000000000000000000000000000000000000..4fa3c1d3ab169a8da67650cf7cc06903fe059f27
--- /dev/null
+++ b/cookbooks/my_cookbook/spec/unit/recipes/default_spec.rb
@@ -0,0 +1,22 @@
+#
+# Cookbook:: my_cookbook
+# Spec:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+
+require 'spec_helper'
+
+describe 'my_cookbook::default' do
+  context 'When all attributes are default, on an Ubuntu 16.04' do
+    let(:chef_run) do
+      # for a complete list of available platforms and versions see:
+      # https://github.com/customink/fauxhai/blob/master/PLATFORMS.md
+      runner = ChefSpec::ServerRunner.new(platform: 'ubuntu', version: '16.04')
+      runner.converge(described_recipe)
+    end
+
+    it 'converges successfully' do
+      expect { chef_run }.to_not raise_error
+    end
+  end
+end
diff --git a/cookbooks/my_cookbook/test/integration/roles/calculator_role.rb b/cookbooks/my_cookbook/test/integration/roles/calculator_role.rb
new file mode 100644
index 0000000000000000000000000000000000000000..9169cd8bd17a3728227aa6721050730d80867bf0
--- /dev/null
+++ b/cookbooks/my_cookbook/test/integration/roles/calculator_role.rb
@@ -0,0 +1,7 @@
+name 'calculator_role'
+description 'setting of attributes from role'
+run_list 'recipe[my_cookbook]'
+default_attributes 'my_cookbook' => {
+  'Hi' => 'Bye',
+  'world' => 'duniya'
+}
diff --git a/cookbooks/my_cookbook/test/integration/roles/my_cookbook_role.rb b/cookbooks/my_cookbook/test/integration/roles/my_cookbook_role.rb
new file mode 100644
index 0000000000000000000000000000000000000000..bb671087e9547193d9f5e4d4908ef34a8b7c607c
--- /dev/null
+++ b/cookbooks/my_cookbook/test/integration/roles/my_cookbook_role.rb
@@ -0,0 +1,5 @@
+name 'my_cookbook_role'
+description 'role dedicated to my_cookbook'
+run_list 'recipe[my_cookbook]'
+default_attributes 'my_cookbook' => { 'message' => 'Hallo Welt!' }
+override_attributes 'my_cookbook' => { 'message' => 'I am overriding' }
diff --git a/cookbooks/my_cookbook/test/recipes/default_test.rb b/cookbooks/my_cookbook/test/recipes/default_test.rb
new file mode 100644
index 0000000000000000000000000000000000000000..3397934efb1f4876d1063c4b18858807227311e1
--- /dev/null
+++ b/cookbooks/my_cookbook/test/recipes/default_test.rb
@@ -0,0 +1,3 @@
+describe file('/tmp/greeting.txt') do
+  its('content') { should match 'ohai, chef!' }
+end
diff --git a/cookbooks/my_cookbook/test/smoke/default/default_test.rb b/cookbooks/my_cookbook/test/smoke/default/default_test.rb
new file mode 100644
index 0000000000000000000000000000000000000000..dd29f78869d8ea7d334304edeb1617b82093a547
--- /dev/null
+++ b/cookbooks/my_cookbook/test/smoke/default/default_test.rb
@@ -0,0 +1,10 @@
+# # encoding: utf-8
+
+# Inspec test for recipe my_cookbook::default
+
+# The Inspec reference, with examples and extensive documentation, can be
+# found at http://inspec.io/docs/reference/resources/
+
+describe package('git') do
+  it { should be_installed }
+end
diff --git a/cookbooks/my_cookbook/test/smoke/server/git_daemon_test.rb b/cookbooks/my_cookbook/test/smoke/server/git_daemon_test.rb
new file mode 100644
index 0000000000000000000000000000000000000000..a6883f235452b9ef283b7c8a9caeb66282f9ccab
--- /dev/null
+++ b/cookbooks/my_cookbook/test/smoke/server/git_daemon_test.rb
@@ -0,0 +1,8 @@
+describe port(9418) do
+  it { should be_listening }
+end
+
+describe service('git_daemon') do
+  it { should be_enabled }
+  it { sould  be_running }
+end
diff --git a/cookbooks/mysql-8.4.0/.foodcritic b/cookbooks/mysql-8.4.0/.foodcritic
new file mode 100644
index 0000000000000000000000000000000000000000..913f038a416e769b47e960ef729cff3b6f17e333
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/.foodcritic
@@ -0,0 +1 @@
+~FC005
diff --git a/cookbooks/mysql-8.4.0/CHANGELOG.md b/cookbooks/mysql-8.4.0/CHANGELOG.md
new file mode 100644
index 0000000000000000000000000000000000000000..0e01d0546741608c040b3f68903afbb0bc95f1ad
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/CHANGELOG.md
@@ -0,0 +1,682 @@
+# mysql Cookbook CHANGELOG
+
+This file is used to list changes made in each version of the mysql cookbook.
+
+## 8.4.0 (2017-05-30)
+
+- Fix client/server install on Amazon Linux and add testing
+- Remove support for Ubuntu Precise since it's EOL
+- Add Amazon Linux testing
+
+## 8.3.1 (2017-04-04)
+
+- Fix an ignoring of 'cookbook' attribute by 'mysql_config' resource
+- Remove unused helper method
+- Call out the supported platform versions in the metadata
+- Switch to Delivery Local and rename the docked config
+- Remove mention of the EOL opensuse 13.x in the readme
+
+## 8.3.0 (2017-03-20)
+- Refactor mysql_service_manager_upstart.rb to eliminate use of cloned resource
+
+## 8.2.0 (2016-12-03)
+
+- Include client development packages on RHEL/SUSE platforms
+
+## 8.1.1 (2016-10-31)
+- Fixing CVE-2016-6662 - Reverting execure bit on mysql config
+
+## 8.1.0 (2016-10-29)
+
+- Drop hardcoded, specific package version logic that broke many users
+
+## 8.0.4 (2016-09-26)
+- Bump debian version
+- Updated packages for 12.04 and 14.04 too
+- Add chef_version metadata
+- Update platforms in the kitchen file
+- Add selinux to the Berksfile for testing
+- Make sure yum repos are setup in local Test Kitchen
+
+## 8.0.3 (2016-09-14)
+- [GH-390] Fix #390 incorrect escaping of initial_root_password
+- Updated package versions for Ubuntu 16.04
+- Testing updates
+
+# v8.0.2 (2016-08-25)
+- Various bug fixed and updates to package version strings
+
+# v8.0.1 (2016-07-20)
+- Fixed a regression in the mysql_client resource where the action was changed from create to install in the 8.0 release
+- Added oracle, opensuse, and opensuseleap as supported platforms in the metadata
+
+# v8.0.0 (2016-07-11)
+
+- Converting from LWRP to custom resources
+- Removing yum-mysql and other dependencies.
+- ^ BREAKING CHANGE: RHELish users are now responsible
+  for including a recipe from the "yum-mysql" or equivalent
+  cookbook before utilizing the mysql_* resources.
+- More thoughtful ChefSpec
+- Renaming "replication" test suite to "smoke"
+- Moving to Inspec
+
+## v7.2.0 (2016-06-30)
+
+- Support openeSUSE leap
+- Support Fedora 24
+
+## v7.1.2 (2016-06-30)
+
+- Avoid deprecation warnings on the upcoming Chef 12.12 release
+
+## v7.1.1 (2016-06-03)
+
+- Fix apparmor blocking writes to non-default tmp_dirs
+- Updated apparmor config to allow read & write to sock.lock file
+- Use cookstyle instead of Rubocop directly
+
+## v7.1.0 (2016-05-11)
+
+- Added support for Ubuntu 16.04
+
+## v7.0.0 (2016-04-19)
+
+- Removed support for legacy distros: Ubuntu 10.04/13.04/14.10/15.04, Fedora 20/21, OmniOS r151006, opensuse 11.3/12.0
+- Added support for Fedora 23, suse 13.X, and Ubuntu 16.04
+- Updated the systemd support to create unit files in /etc/systemd and not /usr/lib/systemd
+- Adding umask to bash resource that sets root password PR #386 @gziskind
+- Cleaned up the Test Kitchen config to test the right platform version + mysql pairings
+- Added Travis CI Test Kitchen testing on Fedora 22/23 and removed Fedora 21
+- Updated the platforms used in the specs
+
+## v6.1.3 (2016-03-14)
+
+- Added support for Ubuntu 15.10
+- Added support for Amazon Linux 2016-03
+- Updated Kitchen testing configs
+
+## v6.1.2 (2015-10-05)
+
+- Added support for Amazon Linux 2015.09
+
+## v6.1.1 (2015-09-24)
+
+- Completing ChefSpec matchers
+
+## v6.1.0 (2015-07-17)
+
+- Adding tunables for tmp_dir, error_log, and pid_file
+- Adding mysqld_options hash interface for main my.cnf template
+
+## v6.0.31 (2015-07-13)
+
+- Reverting create_stop_system_service checks
+
+## v6.0.30 (2015-07-13)
+
+- Ubuntu 15.04 support
+- Check for scripts and unit files during create_stop_system_service
+
+## v6.0.29 (2015-07-12)
+
+- Patch to allow blank root password
+- Adding package information for Suse 12.0
+
+## v6.0.28 (2015-07-10)
+
+- Fixes for 12.4.x
+
+## v6.0.27 (2015-07-09)
+
+- Allowing integer value for port number
+
+## v6.0.26 (2015-07-07)
+
+- Reverting breaking changes introduced in 6.0.25
+
+## v6.0.25 (2015-07-06)
+
+- Fixes for 12.4.1
+
+## v6.0.24 (2015-06-27)
+
+- 341 - Changing default GRANT for root from '%' to 'localhost' and '127.0.0.1'
+
+## v6.0.23 (2015-06-21)
+
+- 354 Better handling of long MySQL startup times
+
+## v6.0.22 (2015-05-07)
+
+- Debian 8 (Jessie) support
+
+## v6.0.21 (2015-04-08)
+
+- Fix to Upstart prestart script when using custom socket
+- Adding --explicit_defaults_for_timestamp mysql_install_db_cmd for
+- 5.6 and above
+
+## v6.0.20 (2015-03-27)
+
+- 318 - Fixing Upstart pre-start script to handle custom socket paths
+
+## v6.0.19 (2015-03-25)
+
+- Adding support for Amazon Linux 2015.03
+
+## v6.0.18 (2015-03-24)
+
+- Adding support for 5.6 and 5.7 packages from dotdeb repos on Debian 7
+
+## v6.0.17 (2015-03-13)
+
+- Updated for MySQL 5.7.6.
+- Handing removal of mysql_install_db and mysqld_safe
+
+## v6.0.16 (2015-03-10)
+
+- Moved --defaults-file as first option to mysql_install_db_script
+
+## v6.0.15 (2015-02-26)
+
+- Updating docker detection fix to pass specs
+
+## v6.0.14 (2015-02-26)
+
+- Fixed debian system service :disable action. Now survives reboot
+- Fixing centos-7 instance :enable action. Now survives
+- Not applying Apparmor policy if running in a Docker container
+
+## v6.0.13 (2015-02-15)
+
+- Adding support for special characters in initial_root_password
+- Fixing failure status bug in sysvinit script
+
+## v6.0.12 (2015-02-30)
+
+- No changes. Released a 6.0.11 that was identical to 6.0.10.
+- Git before coffee.
+
+## v6.0.11 (2015-02-30)
+
+- Adding support for configurable socket files
+
+## v6.0.10 (2015-01-19)
+
+- Fix #282 - Fixing up data_dir template variable
+
+## v6.0.9 (2015-01-19)
+
+- Fix #282 - undefined method `parsed_data_dir' bug
+
+## v6.0.8 (2015-01-19)
+
+- Refactoring helper methods out of resource classes
+
+## v6.0.7 (2015-01-14)
+
+- Fixing timing issue with Upstart provider :restart and :reload
+- actions where service returns before being available
+
+## v6.0.6 (2014-12-26)
+
+- Fixing subtle bug where MysqlCookbook::Helper methods were polluting Chef::Resource
+
+## v6.0.5 (2014-12-25)
+
+- Using 'include_recipe' instead of 'recipe_eval' in LWRP
+- Fixing type checking on package_name attribute in mysql_client resource.
+
+## v6.0.4 (2014-12-21)
+
+- Suggest available versions if current is not available for current platform.
+
+## v6.0.3 (2014-12-17)
+
+- Adding bind_address parameter to mysql_service resource
+
+## v6.0.2 (2014-12-17)
+
+- Fixing sysvinit provider to survive reboots
+
+## v6.0.1 (2014-12-16)
+
+- Fixing Upstart template to survive reboots
+
+## v6.0.0 (2014-12-15)
+
+- Major version update
+- Cookbook now provides LWRPs instead of recipes
+- Platform providers re-factored into init system providers
+- Separated :create and :start actions for use in recipes that build containers
+- mysql_service now supports multiple instances on the same machine
+- mysql_service no longer attempts to manage user records
+- Removal of debian-sys-maint
+- Unified Sysvinit script that works on all platforms
+- mysql_config resource introduced
+- mysql_client fixed up
+- Refactored acceptance tests
+- Temporarily dropped FreeBSD support
+
+## v5.6.1 (2014-10-29)
+
+- Use Gem::Version instead of Chef::Version
+
+## v5.6.0 (2014-10-29)
+
+- Changing default charset to utf8
+- Quoting passwords in debian.cnf.erb
+- Amazon 2014.09 support
+- Ubuntu 14.10 support
+- Only hide passwords from STDOUT via "sensitive true" in chef-client higher than 11.14
+- Updating test harness
+
+## v5.5.4 (2014-10-07)
+
+- Adding sensitive flag to execute resources to protect passwords from logs
+
+## v5.5.3 (2014-09-24)
+
+- Reverting back to Upstart on Ubuntu 14.04
+
+## v5.5.2 (2014-09-8)
+
+- Reverting commit that broke Debian pass_string
+
+## v5.5.1 (2014-09-2)
+
+- Switching Ubuntu service provider to use SysVinit instead of Upstart
+
+## v5.5.0 (2014-08-27)
+
+- Adding package version and action parameters to mysql_service resource
+- Fixing Debian pass_string
+
+## v5.4.4 (2014-08-27)
+
+- Changing module namespace to MysqlCookbook
+
+## v5.4.3 (2014-08-25)
+
+- More refactoring. Moving helper function bits into resource parsed_parameters
+
+## v5.4.2 (2014-08-25)
+
+- Moving provider local variables into definitions for RHEL provider
+
+## v5.4.1 (2014-08-25)
+
+- Refactoring resources into the LWRP style with parsed parameters
+- Moving provider local variables into definitions
+
+## v5.4.0 (2014-08-25)
+
+- 212 - support for centos-7 (mysql55 and mysql56)
+- Adding (untested) Debian-6 support
+- Adding Suse support to metadata.rb
+- Adding ability to change MySQL root password
+- Added libmysqlclient-devel package to SuSE client provider
+- Appeasing AppArmor
+- Reducing duplication in client provider
+
+## v5.3.6 (2014-06-18)
+
+- Fixing pid path location. Updating tests to include real RHEL
+
+## v5.3.4 (2014-06-16)
+
+- Fixing specs for Amazon Linux server package names
+
+## v5.3.2 (2014-06-16)
+
+- Fixing Amazon Linux support
+
+## v5.3.0 (2014-06-11)
+
+- 189 - Fix server_repl_password description
+- 191 - Adding support for server55 and server56 on el-6
+- 193 - Fix syntax in mysql_service example
+- 199 - Adding Suse support
+
+## v5.2.12 (2014-05-19)
+
+PR #192 - recipes/server.rb should honor parameter node['mysql']['version']
+
+## v5.2.10 (2014-05-15)
+
+- COOK-4394 - restore freebsd support
+
+## v5.2.8 (2014-05-15)
+
+- [COOK-4653] - Missing mySQL 5.6 support for Ubuntu 14.04
+
+## v5.2.6 (2014-05-07)
+
+- [COOK-4625] - Fix password resource parameter consumption on Debian and Ubuntu
+- Fix up typos and version numbers in PLATFORMS.md
+- Fix up specs from COOK-4613 changes
+
+## v5.2.4 (2014-05-02)
+
+- [COOK-4613] - Fix permissions on mysql data_dir to allow global access to mysql.sock
+
+## v5.2.2 (2014-04-24)
+
+- [COOK-4564] - Using positive tests for datadir move
+
+## v5.2.0 (2014-04-22)
+
+- [COOK-4551] - power grants.sql from resource parameters
+
+## v5.1.12 (2014-04-21)
+
+- [COOK-4554] - Support for Debian Sid
+
+## v5.1.10 (2014-04-21)
+
+- [COOK-4565] Support for Ubuntu 14.04
+- [COOK-4565] Adding Specs and TK platform
+- Removing non-LTS 13.10 specs and TK platform
+
+## v5.1.8 (2014-04-12)
+
+Adding Ubuntu 13.04 to Platforminfo
+
+## v5.1.6 (2014-04-11)
+
+- [COOK-4548] - Add template[/etc/mysql/debian.cnf] to Ubuntu provider
+
+## v5.1.4 (2014-04-11)
+
+- [COOK-4547] - Shellescape server_root_password
+
+## v5.1.2 (2014-04-09)
+
+- [COOK-4519] - Fix error in run_dir for Ubuntu
+- [COOK-4531] - Fix pid and run_dir for Debian
+
+## v5.1.0 (2014-04-08)
+
+[COOK-4523] - Allow for both :restart and :reload
+
+## v5.0.6 (2014-04-07)
+
+- [COOK-4519] - Updating specs to reflect pid file change on Ubuntu
+
+## v5.0.4 (2014-04-07)
+
+- [COOK-4519] - Fix path to pid file on Ubuntu
+
+## v5.0.2 (2014-04-01)
+
+- Moving server_deprecated into recipes directory
+
+## v5.0.0 (2014-03-31)
+
+- Rewriting as a library cookbook
+- Exposing mysql_service and mysql_client resources
+- User now needs to supply configuration
+- Moving attribute driven recipe to server-deprecated
+
+## v4.1.2 (2014-02-28)
+
+- [COOK-4349] - Fix invalid platform check
+- [COOK-4184] - Better handling of Ubuntu upstart service
+- [COOK-2100] - Changing innodb_log_file_size tunable results in inability to start MySQL
+
+## v4.1.1 (2014-02-25)
+
+- **[COOK-2966] - Address foodcritic failures'
+- **[COOK-4182] - Template parse failure in /etc/init/mysql.conf (data_dir)'
+- **[COOK-4198] - Added missing tunable'
+- **[COOK-4206] - create root@127.0.0.1, as well as root@localhost'
+
+## v4.0.20 (2014-01-18)
+
+- [COOK-3931] - MySQL Server Recipe Regression for Non-LTS Ubuntu Versions
+- [COOK-3945] - MySQL cookbook fails on Ubuntu 13.04/13.10
+- [COOK-3966] - mysql::server recipe can't find a template with debian 7.x
+- [COOK-3985] - Missing /etc/mysql/debian.cnf template on mysql::_server_debian.rb recipe (mysql 4.0.4)
+- [COOK-3974] - debian.cnf not updated
+- [COOK-4001] - Pull request: Fixes for broken mysql::server on Debian
+- [COOK-4071] - Mysql cookbook doesn't work on debian 7.2
+
+## v4.0.14
+
+Fixing style cops
+
+## v4.0.12
+
+### Bug
+
+- **[COOK-4068](https://tickets.chef.io/browse/COOK-4068)** - rework MySQL Windows recipe
+
+### Improvement
+
+- **[COOK-3801](https://tickets.chef.io/browse/COOK-3801)** - Add innodb_adaptive_flushing_method and innodb_adaptive_checkpoint
+
+## v4.0.10
+
+fixing metadata version error. locking to 3.0
+
+## v4.0.8
+
+Locking yum dependency to '< 3'
+
+## v4.0.6
+
+# Bug
+
+- [COOK-3943] Notifying service restart on grants update
+
+## v4.0.4
+
+[COOK-3952] - Adding 'recursive true' to directory resources
+
+## v4.0.2
+
+### BUGS
+
+- Adding support for Amazon Linux in attributes/server_rhel.rb
+- Fixing bug where unprivileged users cannot connect over a local socket. Adding integration test.
+- Fixing bug in mysql_grants_cmd generation
+
+## v4.0.0
+
+- [COOK-3928] Heavily refactoring for readability. Moving platform implementation into separate recipes
+- Moving integration tests from minitest to serverspec, removing "improper" tests
+- Moving many attributes into the ['mysql']['server']['whatever'] namespace
+- [COOK-3481] - Merged Lucas Welsh's Windows bits and moved into own recipe
+- [COOK-3697] - Adding security hardening attributes
+- [COOK-3780] - Fixing data_dir on Debian and Ubuntu
+- [COOK-3807] - Don't use execute[assign-root-password] on Debian and Ubuntu
+- [COOK-3881] - Fixing /etc being owned by mysql user
+
+## v3.0.12
+
+### Bug
+
+- **[COOK-3752](https://tickets.chef.io/browse/COOK-3752)** - mysql service fails to start in mysql::server recipe
+
+## v3.0.10
+
+- Fix a failed release attempt for v3.0.8
+
+## v3.0.8
+
+### Bug
+
+- **[COOK-3749](https://tickets.chef.io/browse/COOK-3749)** - Fix a regression with Chef 11-specific features
+
+## v3.0.6
+
+### Bug
+
+- **[COOK-3674](https://tickets.chef.io/browse/COOK-3674)** - Fix an issue where the MySQL server fails to set the root password correctly when `data_dir` is a non-default value
+- **[COOK-3647](https://tickets.chef.io/browse/COOK-3647)** - Fix README typo (databas => database)
+- **[COOK-3477](https://tickets.chef.io/browse/COOK-3477)** - Fix log-queries-not-using-indexes not working
+- **[COOK-3436](https://tickets.chef.io/browse/COOK-3436)** - Pull percona repo in compilation phase
+- **[COOK-3208](https://tickets.chef.io/browse/COOK-3208)** - Fix README typo (LitenPort => ListenPort)
+- **[COOK-3149](https://tickets.chef.io/browse/COOK-3149)** - Create my.cnf before installing
+- **[COOK-2681](https://tickets.chef.io/browse/COOK-2681)** - Fix log_slow_queries for 5.5+
+- **[COOK-2606](https://tickets.chef.io/browse/COOK-2606)** - Use proper bind address on cloud providers
+
+### Improvement
+
+- **[COOK-3498](https://tickets.chef.io/browse/COOK-3498)** - Add support for replicate_* variables in my.cnf
+
+## v3.0.4
+
+### Bug
+
+- **[COOK-3310](https://tickets.chef.io/browse/COOK-3310)** - Fix missing `GRANT` option
+- **[COOK-3233](https://tickets.chef.io/browse/COOK-3233)** - Fix escaping special characters
+- **[COOK-3156](https://tickets.chef.io/browse/COOK-3156)** - Fix GRANTS file when `remote_root_acl` is specified
+- **[COOK-3134](https://tickets.chef.io/browse/COOK-3134)** - Fix Chef 11 support
+- **[COOK-2318](https://tickets.chef.io/browse/COOK-2318)** - Remove redundant `if` block around `node.mysql.tunable.log_bin`
+
+## v3.0.2
+
+### Bug
+
+- [COOK-2158]: apt-get update is run twice at compile time
+- [COOK-2832]: mysql grants.sql file has errors depending on attrs
+- [COOK-2995]: server.rb is missing a platform_family comparison value
+
+### Sub-task
+
+- [COOK-2102]: `innodb_flush_log_at_trx_commit` value is incorrectly set based on CPU count
+
+## v3.0.0
+
+**Note** This is a backwards incompatible version with previous versions of the cookbook. Tickets that introduce incompatibility are COOK-2615 and COOK-2617.
+
+- [COOK-2478] - Duplicate 'read_only' server attribute in base and tunable
+- [COOK-2471] - Add tunable to set slave_compressed_protocol for reduced network traffic
+- [COOK-1059] - Update attributes in mysql cookbook to support missing options for my.cnf usable by Percona
+- [COOK-2590] - Typo in server recipe to do with conf_dir and confd_dir
+- [COOK-2602] - Add `lower_case_table_names` tunable
+- [COOK-2430] - Add a tunable to create a network ACL when allowing `remote_root_access`
+- [COOK-2619] - mysql: isamchk deprecated
+- [COOK-2515] - Better support for SUSE distribution for mysql cookbook
+- [COOK-2557] - mysql::percona_repo attributes missing and key server typo
+- [COOK-2614] - Duplicate `innodb_file_per_table`
+- [COOK-2145] - MySQL cookbook should remove anonymous and password less accounts
+- [COOK-2553] - Enable include directory in my.cnf template for any platform
+- [COOK-2615] - Rename `key_buffer` to `key_buffer_size`
+- [COOK-2626] - Percona repo URL is being constructed incorrectly
+- [COOK-2616] - Unneeded attribute thread_cache
+- [COOK-2618] - myisam-recover not using attribute value
+- [COOK-2617] - open-files is a duplicate of open-files-limit
+
+## v2.1.2
+
+- [COOK-2172] - Mysql cookbook duplicates `binlog_format` configuration
+
+## v2.1.0
+
+- [COOK-1669] - Using platform("ubuntu") in default attributes always returns true
+- [COOK-1694] - Added additional my.cnf fields and reorganized cookbook to avoid race conditions with mysql startup and sql script execution
+- [COOK-1851] - Support server-id and binlog_format settings
+- [COOK-1929] - Update msyql server attributes file because setting attributes without specifying a precedence is deprecated
+- [COOK-1999] - Add read_only tunable useful for replication slave servers
+
+## v2.0.2
+
+- [COOK-1967] - mysql: trailing comma in server.rb platform family
+
+## v2.0.0
+
+**Important note for this release**
+
+Under Chef Solo, you must set the node attributes for the root, debian and repl passwords or the run will completely fail. See COOK-1737 for background on this.
+
+- [COOK-1390] - MySQL service cannot start after reboot
+- [COOK-1610] - Set root password outside preseed (blocker for drop-in mysql replacements)
+- [COOK-1624] - Mysql cookbook fails to even compile on windows
+- [COOK-1669] - Using platform("ubuntu") in default attributes always returns true
+- [COOK-1686] - Add mysql service start
+- [COOK-1687] - duplicate `innodb_buffer_pool_size` attribute
+- [COOK-1704] - mysql cookbook fails spec tests when minitest-handler cookbook enabled
+- [COOK-1737] - Fail a chef-solo run when `server_root_password`, `server_debian_password`, and/or `server_repl_password` is not set
+- [COOK-1769] - link to database recipe in mysql README goes to old chef/cookbooks repo instead of chef-cookbook organization
+- [COOK-1963] - use `platform_family`
+
+## v1.3.0
+
+**Important note for this release**
+
+This version no longer installs Ruby bindings in the client recipe by default. Use the ruby recipe if you'd like the RubyGem. If you'd like packages from your distribution, use them in your application's specific cookbook/recipe, or modify the client packages attribute. This resolves the following tickets:
+
+- COOK-932
+- COOK-1009
+- COOK-1384
+
+Additionally, this cookbook now has tests (COOK-1439) for use under test-kitchen.
+
+The following issues are also addressed in this release.
+
+- [COOK-1443] - MySQL (>= 5.1.24) does not support `innodb_flush_method` = fdatasync
+- [COOK-1175] - Add Mac OS X support
+- [COOK-1289] - handle additional tunable attributes
+- [COOK-1305] - add auto-increment-increment and auto-increment-offset attributes
+- [COOK-1397] - make the port an attribute
+- [COOK-1439] - Add MySQL cookbook tests for test-kitchen support
+- [COOK-1236] - Move package names into attributes to allow percona to free-ride
+- [COOK-934] - remove deprecated mysql/libraries/database.rb, use the database cookbook instead.
+- [COOK-1475] - fix restart on config change
+
+## v1.2.6
+
+- [COOK-1113] - Use an attribute to determine if upstart is used
+- [COOK-1121] - Add support for Windows
+- [COOK-1140] - Fix conf.d on Debian
+- [COOK-1151] - Fix server_ec2 handling /var/lib/mysql bind mount
+- [COOK-1321] - Document setting password attributes for solo
+
+## v1.2.4
+
+- [COOK-992] - fix FATAL nameerror
+- [COOK-827] - `mysql:server_ec2` recipe can't mount `data_dir`
+- [COOK-945] - FreeBSD support
+
+## v1.2.2
+
+- [COOK-826] mysql::server recipe doesn't quote password string
+- [COOK-834] Add 'scientific' and 'amazon' platforms to mysql cookbook
+
+## v1.2.1
+
+- [COOK-644] Mysql client cookbook 'package missing' error message is confusing
+- [COOK-645] RHEL6/CentOS6 - mysql cookbook contains 'skip-federated' directive which is unsupported on MySQL 5.1
+
+## v1.2.0
+
+- [COOK-684] remove mysql_database LWRP
+
+## v1.0.8
+
+- [COOK-633] ensure "cloud" attribute is available
+
+## v1.0.7
+
+- [COOK-614] expose all mysql tunable settings in config
+- [COOK-617] bind to private IP if available
+
+## v1.0.6
+
+- [COOK-605] install mysql-client package on ubuntu/debian
+
+## v1.0.5
+
+- [COOK-465] allow optional remote root connections to mysql
+- [COOK-455] improve platform version handling
+- externalize conf_dir attribute for easier cross platform support
+- change datadir attribute to data_dir for consistency
+
+## v1.0.4
+
+- fix regressions on debian platform
+- [COOK-578] wrap root password in quotes
+- [COOK-562] expose all tunables in my.cnf
diff --git a/cookbooks/mysql-8.4.0/CONTRIBUTING.md b/cookbooks/mysql-8.4.0/CONTRIBUTING.md
new file mode 100644
index 0000000000000000000000000000000000000000..ef2f2b80834ef516cc8c9f03a840f69f0d52d467
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/CONTRIBUTING.md
@@ -0,0 +1,2 @@
+Please refer to
+https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
diff --git a/cookbooks/mysql-8.4.0/MAINTAINERS.md b/cookbooks/mysql-8.4.0/MAINTAINERS.md
new file mode 100644
index 0000000000000000000000000000000000000000..b3548a46aea526eb415d06d93100e1d43b08678c
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/MAINTAINERS.md
@@ -0,0 +1,16 @@
+<!-- This is a generated file. Please do not edit directly -->
+
+# Maintainers
+
+This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.
+
+Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.
+
+# Project Maintainer
+* [Tim Smith](https://github.com/tas50)
+
+# Maintainers
+* [Jennifer Davis](https://github.com/sigje)
+* [Sean OMeara](https://github.com/someara)
+* [Tim Smith](https://github.com/tas50)
+* [Thom May](https://github.com/thommay)
diff --git a/cookbooks/mysql-8.4.0/README.md b/cookbooks/mysql-8.4.0/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..dc046f00731307b066a3f58ba6030a3a74e85ca1
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/README.md
@@ -0,0 +1,420 @@
+# MySQL Cookbook
+
+[![Build Status](https://travis-ci.org/chef-cookbooks/mysql.svg?branch=master)](https://travis-ci.org/chef-cookbooks/mysql) [![Cookbook Version](https://img.shields.io/cookbook/v/mysql.svg)](https://supermarket.chef.io/cookbooks/mysql)
+
+The MySQL Cookbook is a library cookbook that provides resource primitives (LWRPs) for use in recipes. It is designed to be a reference example for creating highly reusable cross-platform cookbooks.
+
+## Scope
+
+This cookbook is concerned with the "MySQL Community Server", particularly those shipped with F/OSS Unix and Linux distributions. It does not address forks or value-added repackaged MySQL distributions like MariaDB or Percona.
+
+## Requirements
+
+- Chef 12.5 or higher
+- Network accessible package repositories
+- 'recipe[selinux::disabled]' on RHEL platforms
+
+## Platform Support
+
+The following platforms have been tested with Test Kitchen:
+
+```
+|----------------+-----+-----+-----+-----|
+|                | 5.1 | 5.5 | 5.6 | 5.7 |
+|----------------+-----+-----+-----+-----|
+| debian-7       |     | X   |     |     |
+|----------------+-----+-----+-----+-----|
+| debian-8       |     | X   |     |     |
+|----------------+-----+-----+-----+-----|
+| ubuntu-14.04   |     | X   | X   |     |
+|----------------+-----+-----+-----+-----|
+| ubuntu-16.04   |     |     |     | X   |
+|----------------+-----+-----+-----+-----|
+| centos-6       | X   | X   | X   | X   |
+|----------------+-----+-----+-----+-----|
+| centos-7       |     | X   | X   | X   |
+|----------------+-----+-----+-----+-----|
+| fedora         |     |     | X   | X   |
+|----------------+-----+-----+-----+-----|
+| openSUSE Leap  |     |     | X   |     |
+|----------------+-----+-----+-----+-----|
+```
+
+## Cookbook Dependencies
+
+There are no hard coupled dependencies. However, there is a loose dependency on `yum-mysql-community` for RHEL/CentOS platforms. As of the 8.0 version of this cookbook, configuration of the package repos is now the responsibility of the user.
+
+## Usage
+
+Place a dependency on the mysql cookbook in your cookbook's metadata.rb
+
+```ruby
+depends 'mysql', '~> 8.0'
+```
+
+Then, in a recipe:
+
+```ruby
+mysql_service 'foo' do
+  port '3306'
+  version '5.5'
+  initial_root_password 'change me'
+  action [:create, :start]
+end
+```
+
+The service name on the OS is `mysql-foo`. You can manually start and stop it with `service mysql-foo start` and `service mysql-foo stop`.
+
+The configuration file is at `/etc/mysql-foo/my.cnf`. It contains the minimum options to get the service running. It looks like this.
+
+```
+# Chef generated my.cnf for instance mysql-foo
+
+[client]
+default-character-set          = utf8
+port                           = 3306
+socket                         = /var/run/mysql-foo/mysqld.sock
+
+[mysql]
+default-character-set          = utf8
+
+[mysqld]
+user                           = mysql
+pid-file                       = /var/run/mysql-foo/mysqld.pid
+socket                         = /var/run/mysql-foo/mysqld.sock
+port                           = 3306
+datadir                        = /var/lib/mysql-foo
+tmpdir                         = /tmp
+log-error                      = /var/log/mysql-foo/error.log
+!includedir /etc/mysql-foo/conf.d
+
+[mysqld_safe]
+socket                         = /var/run/mysql-foo/mysqld.sock
+```
+
+You can put extra configuration into the conf.d directory by using the `mysql_config` resource, like this:
+
+```ruby
+mysql_service 'foo' do
+  port '3306'
+  version '5.5'
+  initial_root_password 'change me'
+  action [:create, :start]
+end
+
+mysql_config 'foo' do
+  source 'my_extra_settings.erb'
+  notifies :restart, 'mysql_service[foo]'
+  action :create
+end
+```
+
+You are responsible for providing `my_extra_settings.erb` in your own cookbook's templates folder.
+
+## Connecting with the mysql CLI command
+
+Logging into the machine and typing `mysql` with no extra arguments will fail. You need to explicitly connect over the socket with `mysql -S /var/run/mysql-foo/mysqld.sock`, or over the network with `mysql -h 127.0.0.1`
+
+## Upgrading from older version of the mysql cookbook
+
+- It is strongly recommended that you rebuild the machine from scratch. This is easy if you have your `data_dir` on a dedicated mount point. If you _must_ upgrade in-place, follow the instructions below.
+- The 6.x series supports multiple service instances on a single machine. It dynamically names the support directories and service names. `/etc/mysql becomes /etc/mysql-instance_name`. Other support directories in `/var` `/run` etc work the same way. Make sure to specify the `data_dir` property on the `mysql_service` resource to point to the old `/var/lib/mysql` directory.
+
+## Resources Overview
+
+### mysql_service
+
+The `mysql_service` resource manages the basic plumbing needed to get a MySQL server instance running with minimal configuration.
+
+The `:create` action handles package installation, support directories, socket files, and other operating system level concerns. The internal configuration file contains just enough to get the service up and running, then loads extra configuration from a conf.d directory. Further configurations are managed with the `mysql_config` resource.
+
+- If the `data_dir` is empty, a database will be initialized, and a
+- root user will be set up with `initial_root_password`. If this
+- directory already contains database files, no action will be taken.
+
+The `:start` action starts the service on the machine using the appropriate provider for the platform. The `:start` action should be omitted when used in recipes designed to build containers.
+
+#### Example
+
+```ruby
+mysql_service 'default' do
+  version '5.7'
+  bind_address '0.0.0.0'
+  port '3306'
+  data_dir '/data'
+  initial_root_password 'Ch4ng3me'
+  action [:create, :start]
+end
+```
+
+Please note that when using `notifies` or `subscribes`, the resource to reference is `mysql_service[name]`, not `service[mysql]`.
+
+#### Parameters
+
+- `charset` - specifies the default character set. Defaults to `utf8`.
+- `data_dir` - determines where the actual data files are kept on the machine. This is useful when mounting external storage. When omitted, it will default to the platform's native location.
+- `error_log` - Tunable location of the error_log
+- `initial_root_password` - allows the user to specify the initial root password for mysql when initializing new databases. This can be set explicitly in a recipe, driven from a node attribute, or from data_bags. When omitted, it defaults to `ilikerandompasswords`. Please be sure to change it.
+- `instance` - A string to identify the MySQL service. By convention, to allow for multiple instances of the `mysql_service`, directories and files on disk are named `mysql-<instance_name>`. Defaults to the resource name.
+- `package_action` - Defaults to `:install`.
+- `package_name` - Defaults to a value looked up in an internal map.
+- `package_version` - Specific version of the package to install,passed onto the underlying package manager. Defaults to `nil`.
+- `bind_address` - determines the listen IP address for the mysqld service. When omitted, it will be determined by MySQL. If the address is "regular" IPv4/IPv6address (e.g 127.0.0.1 or ::1), the server accepts TCP/IP connections only for that particular address. If the address is "0.0.0.0" (IPv4) or "::" (IPv6), the server accepts TCP/IP connections on all IPv4 or IPv6 interfaces.
+- `mysqld_options` - A key value hash of options to be rendered into the main my.cnf. WARNING - It is highly recommended that you use the `mysql_config` resource instead of sending extra config into a `mysql_service` resource. This will allow you to set up notifications and subscriptions between the service and its configuration. That being said, this can be useful for adding extra options needed for database initialization at first run.
+- `port` - determines the listen port for the mysqld service. When omitted, it will default to '3306'.
+- `run_group` - The name of the system group the `mysql_service` should run as. Defaults to 'mysql'.
+- `run_user` - The name of the system user the `mysql_service` should run as. Defaults to 'mysql'.
+- `pid_file` - Tunable location of the pid file.
+- `socket` - determines where to write the socket file for the `mysql_service` instance. Useful when configuring clients on the same machine to talk over socket and skip the networking stack. Defaults to a calculated value based on platform and instance name.
+- `tmp_dir` - Tunable location of the tmp_dir
+- `version` - allows the user to select from the versions available for the platform, where applicable. When omitted, it will install the default MySQL version for the target platform. Available version numbers are `5.0`, `5.1`, `5.5`, `5.6`, and `5.7`, depending on platform.
+
+#### Actions
+
+- `:create` - Configures everything but the underlying operating system service.
+- `:delete` - Removes everything but the package and data_dir.
+- `:start` - Starts the underlying operating system service
+- `:stop`- Stops the underlying operating system service
+- `:restart` - Restarts the underlying operating system service
+- `:reload` - Reloads the underlying operating system service
+
+#### Providers
+
+Chef selects the appropriate provider based on platform and version, but you can specify one if your platform support it.
+
+```ruby
+mysql_service[instance-1] do
+  port '1234'
+  data_dir '/mnt/lottadisk'
+  provider Chef::Provider::MysqlServiceSysvinit
+  action [:create, :start]
+end
+```
+
+- `Chef::Provider::MysqlServiceBase` - Configures everything needed to run a MySQL service except the platform service facility. This provider should never be used directly. The `:start`, `:stop`, `:restart`, and `:reload` actions are stubs meant to be overridden by the providers below.
+- `Chef::Provider::MysqlServiceSmf` - Starts a `mysql_service` using the Service Management Facility, used by Solaris and Illumos. Manages the FMRI and method script.
+- `Chef::Provider::MysqlServiceSystemd` - Starts a `mysql_service` using SystemD. Manages the unit file and activation state
+- `Chef::Provider::MysqlServiceSysvinit` - Starts a `mysql_service` using SysVinit. Manages the init script and status.
+- `Chef::Provider::MysqlServiceUpstart` - Starts a `mysql_service` using Upstart. Manages job definitions and status.
+
+### mysql_config
+
+The `mysql_config` resource is a wrapper around the core Chef `template` resource. Instead of a `path` parameter, it uses the `instance` parameter to calculate the path on the filesystem where file is rendered.
+
+#### Example
+
+```ruby
+mysql_config[default] do
+  source 'site.cnf.erb'
+  action :create
+end
+```
+
+#### Parameters
+
+- `config_name` - The base name of the configuration file to be rendered into the conf.d directory on disk. Defaults to the resource name.
+- `cookbook` - The name of the cookbook to look for the template source. Defaults to nil
+- `group` - System group for file ownership. Defaults to 'mysql'.
+- `instance` - Name of the `mysql_service` instance the config is meant for. Defaults to 'default'.
+- `owner` - System user for file ownership. Defaults to 'mysql'.
+- `source` - Template in cookbook to be rendered.
+- `variables` - Variables to be passed to the underlying `template` resource.
+- `version` - Version of the `mysql_service` instance the config is meant for. Used to calculate path. Only necessary when using packages with unique configuration paths, such as RHEL Software Collections or OmniOS. Defaults to 'nil'
+
+#### Actions
+
+- `:create` - Renders the template to disk at a path calculated using the instance parameter.
+- `:delete` - Deletes the file from the conf.d directory calculated using the instance parameter.
+
+#### More Examples
+
+```ruby
+mysql_service 'instance-1' do
+  action [:create, :start]
+end
+
+mysql_service 'instance-2' do
+  action [:create, :start]
+end
+
+mysql_config 'logging' do
+  instance 'instance-1'
+  source 'logging.cnf.erb'
+  action :create
+  notifies :restart, 'mysql_service[instance-1]'
+end
+
+mysql_config 'security settings for instance-2' do
+  config_name 'security'
+  instance 'instance-2'
+  source 'security_stuff.cnf.erb'
+  variables(:foo => 'bar')
+  action :create
+  notifies :restart, 'mysql_service[instance-2]'
+end
+```
+
+### mysql_client
+
+The `mysql_client` resource manages the MySQL client binaries and development libraries.
+
+It is an example of a "singleton" resource. Declaring two `mysql_client` resources on a machine usually won't yield two separate copies of the client binaries, except for platforms that support multiple versions (RHEL SCL, OmniOS).
+
+#### Example
+
+```ruby
+mysql_client 'default' do
+  action :create
+end
+```
+
+#### Properties
+
+- `package_name` - An array of packages to be installed. Defaults to a value looked up in an internal map.
+- `package_version` - Specific versions of the package to install, passed onto the underlying package manager. Defaults to `nil`.
+- `version` - Major MySQL version number of client packages. Only valid on for platforms that support multiple versions, such as RHEL via Software Collections and OmniOS.
+
+#### Actions
+
+- `:create` - Installs the client software
+- `:delete` - Removes the client software
+
+## Advanced Usage Examples
+
+There are a number of configuration scenarios supported by the use of resource primitives in recipes. For example, you might want to run multiple MySQL services, as different users, and mount block devices that contain pre-existing databases.
+
+### Multiple Instances as Different Users
+
+```ruby
+# instance-1
+user 'alice' do
+  action :create
+end
+
+directory '/mnt/data/mysql/instance-1' do
+  owner 'alice'
+  action :create
+end
+
+mount '/mnt/data/mysql/instance-1' do
+  device '/dev/sdb1'
+  fstype 'ext4'
+  action [:mount, :enable]
+end
+
+mysql_service 'instance-1' do
+  port '3307'
+  run_user 'alice'
+  data_dir '/mnt/data/mysql/instance-1'
+  action [:create, :start]
+end
+
+mysql_config 'site config for instance-1' do
+  instance 'instance-1'
+  source 'instance-1.cnf.erb'
+  notifies :restart, 'mysql_service[instance-1]'
+end
+
+# instance-2
+user 'bob' do
+  action :create
+end
+
+directory '/mnt/data/mysql/instance-2' do
+  owner 'bob'
+  action :create
+end
+
+mount '/mnt/data/mysql/instance-2' do
+  device '/dev/sdc1'
+  fstype 'ext3'
+  action [:mount, :enable]
+end
+
+mysql_service 'instance-2' do
+  port '3308'
+  run_user 'bob'
+  data_dir '/mnt/data/mysql/instance-2'
+  action [:create, :start]
+end
+
+mysql_config 'site config for instance-2' do
+  instance 'instance-2'
+  source 'instance-2.cnf.erb'
+  notifies :restart, 'mysql_service[instance-2]'
+end
+```
+
+### Replication Testing
+
+Use multiple `mysql_service` instances to test a replication setup. This particular example serves as a smoke test in Test Kitchen because it exercises different resources and requires service restarts.
+
+<https://github.com/chef-cookbooks/mysql/blob/master/test/fixtures/cookbooks/mysql_replication_test/recipes/default.rb>
+
+## Frequently Asked Questions
+
+### How do I run this behind my firewall?
+
+On Linux, the `mysql_service` resource uses the platform's underlying package manager to install software. For this to work behind firewalls, you'll need to either:
+
+- Configure the system yum/apt utilities to use a proxy server that
+- can reach the Internet
+- Host a package repository on a network that the machine can talk to
+
+On the RHEL platform_family, applying the `yum::default` recipe will allow you to drive the `yum_globalconfig` resource with attributes to change the global yum proxy settings.
+
+If hosting repository mirrors, applying one of the following recipes and adjust the settings with node attributes.
+
+- `recipe[yum-centos::default]` from the Supermarket
+
+  <https://supermarket.chef.io/cookbooks/yum-centos>
+
+  <https://github.com/chef-cookbooks/yum-centos>
+
+- `recipe[yum-mysql-community::default]` from the Supermarket
+
+  <https://supermarket.chef.io/cookbooks/yum-mysql-community>
+
+  <https://github.com/chef-cookbooks/yum-mysql-community>
+
+### The mysql command line doesn't work
+
+If you log into the machine and type `mysql`, you may see an error like this one:
+
+`Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock'`
+
+This is because MySQL is hardcoded to read the defined default my.cnf file, typically at /etc/my.cnf, and this LWRP deletes it to prevent overlap among multiple MySQL configurations.
+
+To connect to the socket from the command line, check the socket in the relevant my.cnf file and use something like this:
+
+`mysql -S /var/run/mysql-foo/mysqld.sock -Pwhatever`
+
+Or to connect over the network, use something like this: connect over the network..
+
+`mysql -h 127.0.0.1 -Pwhatever`
+
+These network or socket ssettings can also be put in you $HOME/.my.cnf, if preferred.
+
+### What about MariaDB, Percona, etc.
+
+MySQL forks are purposefully out of scope for this cookbook. This is mostly to reduce the testing matrix to a manageable size. Cookbooks for these technologies can easily be created by copying and adapting this cookbook. However, there will be differences.
+
+Package repository locations, package version names, software major version numbers, supported platform matrices, and the availability of software such as XtraDB and Galera are the main reasons that creating multiple cookbooks to make sense.
+
+## License
+
+```text
+Copyright:: 2009-2017 Chef Software, Inc
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+```
diff --git a/cookbooks/mysql-8.4.0/libraries/helpers.rb b/cookbooks/mysql-8.4.0/libraries/helpers.rb
new file mode 100644
index 0000000000000000000000000000000000000000..72899fc1b1e384ca130370220754e408c98faaa2
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/libraries/helpers.rb
@@ -0,0 +1,286 @@
+module MysqlCookbook
+  module HelpersBase
+    require 'shellwords'
+
+    def el6?
+      return true if node['platform_family'] == 'rhel' && node['platform_version'].to_i == 6
+      false
+    end
+
+    def el7?
+      return true if node['platform_family'] == 'rhel' && node['platform_version'].to_i == 7
+      false
+    end
+
+    def wheezy?
+      return true if node['platform'] == 'debian' && node['platform_version'].to_i == 7
+      false
+    end
+
+    def jessie?
+      return true if node['platform'] == 'debian' && node['platform_version'].to_i == 8
+      false
+    end
+
+    def trusty?
+      return true if node['platform'] == 'ubuntu' && node['platform_version'] == '14.04'
+      return true if node['platform'] == 'linuxmint' && node['platform_version'] =~ /^17\.[0-9]$/
+      false
+    end
+
+    def xenial?
+      return true if node['platform'] == 'ubuntu' && node['platform_version'] == '16.04'
+      false
+    end
+
+    def defaults_file
+      "#{etc_dir}/my.cnf"
+    end
+
+    def default_data_dir
+      return "/var/lib/#{mysql_name}" if node['os'] == 'linux'
+      return "/opt/local/lib/#{mysql_name}" if node['os'] == 'solaris2'
+      return "/var/db/#{mysql_name}" if node['os'] == 'freebsd'
+    end
+
+    def default_error_log
+      "#{log_dir}/error.log"
+    end
+
+    def default_pid_file
+      "#{run_dir}/mysqld.pid"
+    end
+
+    def default_major_version
+      # rhelish
+      return '5.1' if el6?
+      return '5.6' if el7?
+      return '5.6' if node['platform'] == 'amazon'
+
+      # debian
+      return '5.5' if wheezy?
+      return '5.5' if jessie?
+
+      # ubuntu
+      return '5.5' if trusty?
+      return '5.7' if xenial?
+
+      # misc
+      return '5.6' if node['platform'] == 'freebsd'
+      return '5.6' if node['platform'] == 'fedora'
+      return '5.6' if node['platform_family'] == 'suse'
+    end
+
+    def major_from_full(v)
+      v.split('.').shift(2).join('.')
+    end
+
+    def mysql_name
+      "mysql-#{instance}"
+    end
+
+    def default_socket_file
+      "#{run_dir}/mysqld.sock"
+    end
+
+    def default_client_package_name
+      return ['mysql', 'mysql-devel'] if major_version == '5.1' && el6?
+      return ['mysql55', 'mysql55-devel.x86_64'] if major_version == '5.5' && node['platform'] == 'amazon'
+      return ['mysql56', 'mysql56-devel.x86_64'] if major_version == '5.6' && node['platform'] == 'amazon'
+      return ['mysql-client-5.5', 'libmysqlclient-dev'] if major_version == '5.5' && node['platform_family'] == 'debian'
+      return ['mysql-client-5.6', 'libmysqlclient-dev'] if major_version == '5.6' && node['platform_family'] == 'debian'
+      return ['mysql-client-5.7', 'libmysqlclient-dev'] if major_version == '5.7' && node['platform_family'] == 'debian'
+      return 'mysql-community-server-client' if major_version == '5.6' && node['platform_family'] == 'suse'
+      ['mysql-community-client', 'mysql-community-devel']
+    end
+
+    def default_server_package_name
+      return 'mysql-server' if major_version == '5.1' && el6?
+      return 'mysql55-server' if major_version == '5.5' && node['platform'] == 'amazon'
+      return 'mysql56-server' if major_version == '5.6' && node['platform'] == 'amazon'
+      return 'mysql-server-5.5' if major_version == '5.5' && node['platform_family'] == 'debian'
+      return 'mysql-server-5.6' if major_version == '5.6' && node['platform_family'] == 'debian'
+      return 'mysql-server-5.7' if major_version == '5.7' && node['platform_family'] == 'debian'
+      return 'mysql-community-server' if major_version == '5.6' && node['platform_family'] == 'suse'
+      'mysql-community-server'
+    end
+
+    def socket_dir
+      File.dirname(socket)
+    end
+
+    def run_dir
+      return "#{prefix_dir}/var/run/#{mysql_name}" if node['platform_family'] == 'rhel'
+      return "/run/#{mysql_name}" if node['platform_family'] == 'debian'
+      "/var/run/#{mysql_name}"
+    end
+
+    def prefix_dir
+      return "/opt/mysql#{pkg_ver_string}" if node['platform_family'] == 'omnios'
+      return '/opt/local' if node['platform_family'] == 'smartos'
+      return "/opt/rh/#{scl_name}/root" if scl_package?
+    end
+
+    def scl_name
+      return unless node['platform_family'] == 'rhel'
+      return 'mysql51' if version == '5.1' && node['platform_version'].to_i == 5
+      return 'mysql55' if version == '5.5' && node['platform_version'].to_i == 5
+    end
+
+    def scl_package?
+      return unless node['platform_family'] == 'rhel'
+      return true if version == '5.1' && node['platform_version'].to_i == 5
+      return true if version == '5.5' && node['platform_version'].to_i == 5
+      false
+    end
+
+    def etc_dir
+      return "/opt/mysql#{pkg_ver_string}/etc/#{mysql_name}" if node['platform_family'] == 'omnios'
+      return "#{prefix_dir}/etc/#{mysql_name}" if node['platform_family'] == 'smartos'
+      "#{prefix_dir}/etc/#{mysql_name}"
+    end
+
+    def base_dir
+      prefix_dir || '/usr'
+    end
+
+    def system_service_name
+      return 'mysql51-mysqld' if node['platform_family'] == 'rhel' && scl_name == 'mysql51'
+      return 'mysql55-mysqld' if node['platform_family'] == 'rhel' && scl_name == 'mysql55'
+      return 'mysqld' if node['platform_family'] == 'rhel'
+      return 'mysqld' if node['platform_family'] == 'fedora'
+      'mysql' # not one of the above
+    end
+
+    def v56plus
+      return false if version.split('.')[0].to_i < 5
+      return false if version.split('.')[1].to_i < 6
+      true
+    end
+
+    def v57plus
+      return false if version.split('.')[0].to_i < 5
+      return false if version.split('.')[1].to_i < 7
+      true
+    end
+
+    def default_include_dir
+      "#{etc_dir}/conf.d"
+    end
+
+    def log_dir
+      return "/var/adm/log/#{mysql_name}" if node['platform_family'] == 'omnios'
+      "#{prefix_dir}/var/log/#{mysql_name}"
+    end
+
+    def lc_messages_dir; end
+
+    def init_records_script
+      # Note: shell-escaping passwords in a SQL file may cause corruption - eg
+      # mysql will read \& as &, but \% as \%. Just escape bare-minimum \ and '
+      sql_escaped_password = root_password.gsub('\\') { '\\\\' }.gsub("'") { '\\\'' }
+
+      <<-EOS
+        set -e
+        rm -rf /tmp/#{mysql_name}
+        mkdir /tmp/#{mysql_name}
+
+        cat > /tmp/#{mysql_name}/my.sql <<-'EOSQL'
+UPDATE mysql.user SET #{password_column_name}=PASSWORD('#{sql_escaped_password}')#{password_expired} WHERE user = 'root';
+DELETE FROM mysql.user WHERE USER LIKE '';
+DELETE FROM mysql.user WHERE user = 'root' and host NOT IN ('127.0.0.1', 'localhost');
+FLUSH PRIVILEGES;
+DELETE FROM mysql.db WHERE db LIKE 'test%';
+DROP DATABASE IF EXISTS test ;
+EOSQL
+
+       #{db_init}
+       #{record_init}
+
+       while [ ! -f #{pid_file} ] ; do sleep 1 ; done
+       kill `cat #{pid_file}`
+       while [ -f #{pid_file} ] ; do sleep 1 ; done
+       rm -rf /tmp/#{mysql_name}
+       EOS
+    end
+
+    def password_column_name
+      return 'authentication_string' if v57plus
+      'password'
+    end
+
+    def root_password
+      if initial_root_password == ''
+        Chef::Log.info('Root password is empty')
+        return ''
+      end
+      initial_root_password
+    end
+
+    def password_expired
+      return ", password_expired='N'" if v57plus
+      ''
+    end
+
+    def db_init
+      return mysqld_initialize_cmd if v57plus
+      mysql_install_db_cmd
+    end
+
+    def mysql_install_db_bin
+      return "#{base_dir}/scripts/mysql_install_db" if node['platform_family'] == 'omnios'
+      return "#{prefix_dir}/bin/mysql_install_db" if node['platform_family'] == 'smartos'
+      'mysql_install_db'
+    end
+
+    def mysql_install_db_cmd
+      cmd = mysql_install_db_bin
+      cmd << " --defaults-file=#{etc_dir}/my.cnf"
+      cmd << " --datadir=#{data_dir}"
+      cmd << ' --explicit_defaults_for_timestamp' if v56plus && !v57plus
+      return "scl enable #{scl_name} \"#{cmd}\"" if scl_package?
+      cmd
+    end
+
+    def mysqladmin_bin
+      return "#{prefix_dir}/bin/mysqladmin" if node['platform_family'] == 'smartos'
+      return 'mysqladmin' if scl_package?
+      "#{prefix_dir}/usr/bin/mysqladmin"
+    end
+
+    def mysqld_bin
+      return "#{prefix_dir}/libexec/mysqld" if node['platform_family'] == 'smartos'
+      return "#{base_dir}/bin/mysqld" if node['platform_family'] == 'omnios'
+      return '/usr/sbin/mysqld' if node['platform_family'] == 'fedora' && v56plus
+      return '/usr/libexec/mysqld' if node['platform_family'] == 'fedora'
+      return 'mysqld' if scl_package?
+      "#{prefix_dir}/usr/sbin/mysqld"
+    end
+
+    def mysqld_initialize_cmd
+      cmd = mysqld_bin
+      cmd << " --defaults-file=#{etc_dir}/my.cnf"
+      cmd << ' --initialize'
+      cmd << ' --explicit_defaults_for_timestamp' if v56plus
+      return "scl enable #{scl_name} \"#{cmd}\"" if scl_package?
+      cmd
+    end
+
+    def mysqld_safe_bin
+      return "#{prefix_dir}/bin/mysqld_safe" if node['platform_family'] == 'smartos'
+      return "#{base_dir}/bin/mysqld_safe" if node['platform_family'] == 'omnios'
+      return 'mysqld_safe' if scl_package?
+      "#{prefix_dir}/usr/bin/mysqld_safe"
+    end
+
+    def record_init
+      cmd = v56plus ? mysqld_bin : mysqld_safe_bin
+      cmd << " --defaults-file=#{etc_dir}/my.cnf"
+      cmd << " --init-file=/tmp/#{mysql_name}/my.sql"
+      cmd << ' --explicit_defaults_for_timestamp' if v56plus
+      cmd << ' &'
+      return "scl enable #{scl_name} \"#{cmd}\"" if scl_package?
+      cmd
+    end
+  end
+end
diff --git a/cookbooks/mysql-8.4.0/libraries/matchers.rb b/cookbooks/mysql-8.4.0/libraries/matchers.rb
new file mode 100644
index 0000000000000000000000000000000000000000..adf5e73011809e2709dc8aaa7e3388091437212b
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/libraries/matchers.rb
@@ -0,0 +1,71 @@
+if defined?(ChefSpec)
+  ChefSpec.define_matcher :mysql_config
+  ChefSpec.define_matcher :mysql_service
+  ChefSpec.define_matcher :mysql_client
+
+  # mysql_client_client_installation_package
+  def install_mysql_client_installation_package(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_client_installation_package, :create, resource_name)
+  end
+
+  def remove_mysql_client_installation_package(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_client_installation_package, :remove, resource_name)
+  end
+
+  # mysql_server_server_installation_package
+  def install_mysql_server_installation_package(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_server_installation_package, :install, resource_name)
+  end
+
+  def remove_mysql_server_installation_package(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_server_installation_package, :remove, resource_name)
+  end
+
+  #####
+  # old
+  #####
+
+  # client
+  def create_mysql_client(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_client, :create, resource_name)
+  end
+
+  def delete_mysql_client(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_client, :delete, resource_name)
+  end
+
+  # mysql_config
+  def create_mysql_config(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_config, :create, resource_name)
+  end
+
+  def delete_mysql_config(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_config, :delete, resource_name)
+  end
+
+  # service
+  def create_mysql_service(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_service, :create, resource_name)
+  end
+
+  def delete_mysql_service(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_service, :delete, resource_name)
+  end
+
+  def start_mysql_service(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_service, :start, resource_name)
+  end
+
+  def stop_mysql_service(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_service, :stop, resource_name)
+  end
+
+  def restart_mysql_service(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_service, :restart, resource_name)
+  end
+
+  def reload_mysql_service(resource_name)
+    ChefSpec::Matchers::ResourceMatcher.new(:mysql_service, :reload, resource_name)
+  end
+
+end
diff --git a/cookbooks/mysql-8.4.0/libraries/mysql_base.rb b/cookbooks/mysql-8.4.0/libraries/mysql_base.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b04a129a9e316b7f687f105ab3d1b201b3a7fd9e
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/libraries/mysql_base.rb
@@ -0,0 +1,30 @@
+module MysqlCookbook
+  class MysqlBase < Chef::Resource
+    require_relative 'helpers'
+
+    # All resources are composites
+    def whyrun_supported?
+      true
+    end
+
+    ################
+    # Type Constants
+    ################
+
+    Boolean = property_type(
+      is: [true, false],
+      default: false
+    ) unless defined?(Boolean)
+
+    ###################
+    # Common Properties
+    ###################
+    property :run_group, String, default: 'mysql', desired_state: false
+    property :run_user, String, default: 'mysql', desired_state: false
+    property :version, String, default: lazy { default_major_version }, desired_state: false
+    property :include_dir, String, default: lazy { default_include_dir }, desired_state: false
+    property :major_version, String, default: lazy { major_from_full(version) }, desired_state: false
+
+    declare_action_class
+  end
+end
diff --git a/cookbooks/mysql-8.4.0/libraries/mysql_client_installation_package.rb b/cookbooks/mysql-8.4.0/libraries/mysql_client_installation_package.rb
new file mode 100644
index 0000000000000000000000000000000000000000..1e1d9463756472ab6ee3d084950e41aa39995781
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/libraries/mysql_client_installation_package.rb
@@ -0,0 +1,31 @@
+module MysqlCookbook
+  class MysqlClientInstallationPackage < MysqlBase
+    # helper methods
+    require_relative 'helpers'
+    include MysqlCookbook::HelpersBase
+
+    # Resource properties
+    resource_name :mysql_client_installation_package
+    provides :mysql_client_installation, os: 'linux'
+    provides :mysql_client, os: 'linux'
+
+    property :package_name, [String, Array], default: lazy { default_client_package_name }, desired_state: false
+    property :package_options, [String, nil], desired_state: false
+    property :package_version, [String, nil], default: nil, desired_state: false
+
+    # Actions
+    action :create do
+      package package_name do
+        version package_version if package_version
+        options package_options if package_options
+        action :install
+      end
+    end
+
+    action :delete do
+      package package_name do
+        action :remove
+      end
+    end
+  end
+end
diff --git a/cookbooks/mysql-8.4.0/libraries/mysql_config.rb b/cookbooks/mysql-8.4.0/libraries/mysql_config.rb
new file mode 100644
index 0000000000000000000000000000000000000000..be5eee0ce1e386b2094263415e4a5ba039937ade
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/libraries/mysql_config.rb
@@ -0,0 +1,56 @@
+module MysqlCookbook
+  class MysqlConfig < MysqlBase
+    resource_name :mysql_config
+
+    property :config_name, String, name_property: true, desired_state: false
+    property :cookbook, String, desired_state: false
+    property :group, String, default: 'mysql', desired_state: false
+    property :instance, String, default: 'default', desired_state: false
+    property :owner, String, default: 'mysql', desired_state: false
+    property :source, String, desired_state: false
+    property :variables, [Hash], desired_state: false
+    property :version, String, default: lazy { default_major_version }, desired_state: false
+
+    require_relative 'helpers'
+    include MysqlCookbook::HelpersBase
+
+    provides :mysql_config
+
+    action :create do
+      # hax because group property
+      g = Chef::Resource::Group.new(new_resource.group, run_context)
+      g.system true if name == 'mysql'
+      resource_collection.insert g
+
+      user owner do
+        gid owner
+        system true if name == 'mysql'
+        action :create
+      end
+
+      directory include_dir do
+        owner new_resource.owner
+        group new_resource.group
+        mode '0750'
+        recursive true
+        action :create
+      end
+
+      template "#{include_dir}/#{config_name}.cnf" do
+        owner new_resource.owner
+        group new_resource.group
+        mode '0640'
+        variables(new_resource.variables)
+        source new_resource.source
+        cookbook new_resource.cookbook
+        action :create
+      end
+    end
+
+    action :delete do
+      file "#{include_dir}/#{config_name}.cnf" do
+        action :delete
+      end
+    end
+  end
+end
diff --git a/cookbooks/mysql-8.4.0/libraries/mysql_server_installation_package.rb b/cookbooks/mysql-8.4.0/libraries/mysql_server_installation_package.rb
new file mode 100644
index 0000000000000000000000000000000000000000..385e2023dc669d8cbc145d9e879643287c38d622
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/libraries/mysql_server_installation_package.rb
@@ -0,0 +1,42 @@
+module MysqlCookbook
+  class MysqlServerInstallationPackage < MysqlBase
+    # Resource properties
+    resource_name :mysql_server_installation_package
+    provides :mysql_server_installation, os: 'linux'
+
+    property :package_name, String, default: lazy { default_server_package_name }, desired_state: false
+    property :package_options, [String, nil], desired_state: false
+    property :package_version, [String, nil], default: nil, desired_state: false
+
+    # helper methods
+    require_relative 'helpers'
+    include MysqlCookbook::HelpersBase
+
+    # Actions
+    action :install do
+      package package_name do
+        version package_version if package_version
+        options package_options if package_options
+        notifies :install, 'package[perl-Sys-Hostname-Long]', :immediately if platform_family?('suse')
+        notifies :run, 'execute[Initial DB setup script]', :immediately if platform_family?('suse')
+        action :install
+      end
+
+      package 'perl-Sys-Hostname-Long' do
+        action :nothing
+      end
+
+      execute 'Initial DB setup script' do
+        environment 'INSTANCE' => new_resource.name
+        command '/usr/lib/mysql/mysql-systemd-helper install'
+        action :nothing
+      end
+    end
+
+    action :delete do
+      package package_name do
+        action :remove
+      end
+    end
+  end
+end
diff --git a/cookbooks/mysql-8.4.0/libraries/mysql_service.rb b/cookbooks/mysql-8.4.0/libraries/mysql_service.rb
new file mode 100644
index 0000000000000000000000000000000000000000..80fb7c33bae5a8cfb179d5f5cf1d874e74c91fd6
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/libraries/mysql_service.rb
@@ -0,0 +1,105 @@
+module MysqlCookbook
+  require_relative 'mysql_service_base'
+  class MysqlService < MysqlServiceBase
+    resource_name :mysql_service
+
+    # installation type and service_manager
+    property :install_method, %w(package auto), default: 'auto', desired_state: false
+    property :service_manager, %w(sysvinit upstart systemd auto), default: 'auto', desired_state: false
+
+    # mysql_server_installation
+    property :version, String, default: lazy { default_major_version }, desired_state: false
+    property :major_version, String, default: lazy { major_from_full(version) }, desired_state: false
+    property :package_name, String, default: lazy { default_package_name }, desired_state: false
+    property :package_options, [String, nil], desired_state: false
+    property :package_version, [String, nil], default: nil, desired_state: false
+
+    ################
+    # Helper Methods
+    ################
+
+    def copy_properties_to(to, *properties)
+      properties = self.class.properties.keys if properties.empty?
+      properties.each do |p|
+        # If the property is set on from, and exists on to, set the
+        # property on to
+        if to.class.properties.include?(p) && property_is_set?(p)
+          to.send(p, send(p))
+        end
+      end
+    end
+
+    action_class.class_eval do
+      def installation(&block)
+        case install_method
+        when 'auto'
+          install = mysql_server_installation(name, &block)
+        when 'package'
+          install = mysql_server_installation_package(name, &block)
+        when 'none'
+          Chef::Log.info('Skipping MySQL installation. Assuming it was handled previously.')
+          return
+        end
+        copy_properties_to(install)
+        install
+      end
+
+      def svc_manager(&block)
+        case service_manager
+        when 'auto'
+          svc = mysql_service_manager(name, &block)
+        when 'sysvinit'
+          svc = mysql_service_manager_sysvinit(name, &block)
+        when 'upstart'
+          svc = mysql_service_manager_upstart(name, &block)
+        when 'systemd'
+          svc = mysql_service_manager_systemd(name, &block)
+        end
+        copy_properties_to(svc)
+        svc
+      end
+    end
+
+    #########
+    # Actions
+    #########
+
+    action :create do
+      installation do
+        action :install
+      end
+
+      svc_manager do
+        action :create
+      end
+    end
+
+    action :start do
+      svc_manager do
+        action :start
+      end
+    end
+
+    action :delete do
+      svc_manager do
+        action :delete
+      end
+
+      installation do
+        action :delete
+      end
+    end
+
+    action :restart do
+      svc_manager do
+        action :restart
+      end
+    end
+
+    action :stop do
+      svc_manager do
+        action :stop
+      end
+    end
+  end
+end
diff --git a/cookbooks/mysql-8.4.0/libraries/mysql_service_base.rb b/cookbooks/mysql-8.4.0/libraries/mysql_service_base.rb
new file mode 100644
index 0000000000000000000000000000000000000000..01f26c7b83031e79c3e25e5ac4b545eab13ccc31
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/libraries/mysql_service_base.rb
@@ -0,0 +1,203 @@
+module MysqlCookbook
+  class MysqlServiceBase < MysqlBase
+    property :bind_address, String, desired_state: false
+    property :charset, String, default: 'utf8', desired_state: false
+    property :data_dir, String, default: lazy { default_data_dir }, desired_state: false
+    property :error_log, String, default: lazy { default_error_log }, desired_state: false
+    property :initial_root_password, String, default: 'ilikerandompasswords', desired_state: false
+    property :instance, String, name_property: true, desired_state: false
+    property :mysqld_options, Hash, default: {}, desired_state: false
+    property :pid_file, String, default: lazy { default_pid_file }, desired_state: false
+    property :port, [String, Integer], default: '3306', desired_state: false
+    property :socket, String, default: lazy { default_socket_file }, desired_state: false
+    property :tmp_dir, String, desired_state: false
+
+    alias socket_file socket
+
+    require_relative 'helpers'
+    include MysqlCookbook::HelpersBase
+
+    # action class methods are available within the actions and work as if the coded
+    # was inline the action. No messing with classes or passing in the new_resource
+    declare_action_class.class_eval do
+      def create_system_user
+        group 'mysql' do
+          action :create
+        end
+
+        user 'mysql' do
+          gid 'mysql'
+          action :create
+        end
+      end
+
+      def create_config
+        # require 'pry' ; binding.pry
+
+        # Yak shaving secion. Account for random errata.
+        #
+        # Turns out that mysqld is hard coded to try and read
+        # /etc/mysql/my.cnf, and its presence causes problems when
+        # setting up multiple services.
+        file "#{prefix_dir}/etc/mysql/my.cnf" do
+          action :delete
+        end
+
+        file "#{prefix_dir}/etc/my.cnf" do
+          action :delete
+        end
+
+        # mysql_install_db is broken on 5.6.13
+        link "#{prefix_dir}/usr/share/my-default.cnf" do
+          to "#{etc_dir}/my.cnf"
+          not_if { ::File.exist? "#{prefix_dir}/usr/share/my-default.cnf" } # FIXME: Chef bug?
+          action :create
+        end
+
+        # Support directories
+        directory etc_dir do
+          owner run_user
+          group run_group
+          mode '0750'
+          recursive true
+          action :create
+        end
+
+        directory include_dir do
+          owner run_user
+          group run_group
+          mode '0750'
+          recursive true
+          action :create
+        end
+
+        directory run_dir do
+          owner run_user
+          group run_group
+          mode '0755'
+          recursive true
+          action :create
+        end
+
+        directory log_dir do
+          owner run_user
+          group run_group
+          mode '0750'
+          recursive true
+          action :create
+        end
+
+        directory data_dir do
+          owner run_user
+          group run_group
+          mode '0750'
+          recursive true
+          action :create
+        end
+
+        # Main configuration file
+        template "#{etc_dir}/my.cnf" do
+          source 'my.cnf.erb'
+          cookbook 'mysql'
+          owner run_user
+          group run_group
+          mode '0600'
+          variables(config: new_resource)
+          action :create
+        end
+      end
+
+      def initialize_database
+        # initialize database and create initial records
+        bash "#{name} initial records" do
+          code init_records_script
+          umask '022'
+          returns [0, 1, 2] # facepalm
+          not_if "/usr/bin/test -f #{data_dir}/mysql/user.frm"
+          action :run
+        end
+      end
+
+      def delete_support_directories
+        # Stop the service before removing support directories
+        delete_stop_service
+
+        directory etc_dir do
+          recursive true
+          action :delete
+        end
+
+        directory run_dir do
+          recursive true
+          action :delete
+        end
+
+        directory log_dir do
+          recursive true
+          action :delete
+        end
+      end
+
+      #
+      # Platform specific bits
+      #
+      def configure_apparmor
+        # Do not add these resource if inside a container
+        # Only valid on Ubuntu
+        return if ::File.exist?('/.dockerenv') || ::File.exist?('/.dockerinit') || node['platform'] != 'ubuntu'
+
+        # Apparmor
+        package 'apparmor' do
+          action :install
+        end
+
+        directory '/etc/apparmor.d/local/mysql' do
+          owner 'root'
+          group 'root'
+          mode '0755'
+          recursive true
+          action :create
+        end
+
+        template '/etc/apparmor.d/local/usr.sbin.mysqld' do
+          cookbook 'mysql'
+          source 'apparmor/usr.sbin.mysqld-local.erb'
+          owner 'root'
+          group 'root'
+          mode '0644'
+          action :create
+          notifies :restart, "service[#{instance} apparmor]", :immediately
+        end
+
+        template '/etc/apparmor.d/usr.sbin.mysqld' do
+          cookbook 'mysql'
+          source 'apparmor/usr.sbin.mysqld.erb'
+          owner 'root'
+          group 'root'
+          mode '0644'
+          action :create
+          notifies :restart, "service[#{instance} apparmor]", :immediately
+        end
+
+        template "/etc/apparmor.d/local/mysql/#{instance}" do
+          cookbook 'mysql'
+          source 'apparmor/usr.sbin.mysqld-instance.erb'
+          owner 'root'
+          group 'root'
+          mode '0644'
+          variables(
+            config: new_resource,
+            mysql_name: mysql_name
+          )
+          action :create
+          notifies :restart, "service[#{instance} apparmor]", :immediately
+        end
+
+        service "#{instance} apparmor" do
+          service_name 'apparmor'
+          action :nothing
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/mysql-8.4.0/libraries/mysql_service_manager_systemd.rb b/cookbooks/mysql-8.4.0/libraries/mysql_service_manager_systemd.rb
new file mode 100644
index 0000000000000000000000000000000000000000..e18fe749ba7fc3b04498806a4570d1f847035312
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/libraries/mysql_service_manager_systemd.rb
@@ -0,0 +1,142 @@
+module MysqlCookbook
+  class MysqlServiceManagerSystemd < MysqlServiceBase
+    resource_name :mysql_service_manager_systemd
+
+    provides :mysql_service_manager, os: 'linux' do |_node|
+      Chef::Platform::ServiceHelpers.service_resource_providers.include?(:systemd)
+    end
+
+    action :create do
+      # from base
+      create_system_user
+      stop_system_service
+      create_config
+      configure_apparmor
+      initialize_database
+    end
+
+    action :start do
+      # Needed for Debian / Ubuntu
+      directory '/usr/libexec' do
+        owner 'root'
+        group 'root'
+        mode '0755'
+        action :create
+      end
+
+      # this script is called by the main systemd unit file, and
+      # spins around until the service is actually up and running.
+      template "/usr/libexec/#{mysql_name}-wait-ready" do
+        path "/usr/libexec/#{mysql_name}-wait-ready"
+        source 'systemd/mysqld-wait-ready.erb'
+        owner 'root'
+        group 'root'
+        mode '0755'
+        variables(socket_file: socket_file)
+        cookbook 'mysql'
+        action :create
+      end
+
+      # this is the main systemd unit file
+      template "/etc/systemd/system/#{mysql_name}.service" do
+        path "/etc/systemd/system/#{mysql_name}.service"
+        source 'systemd/mysqld.service.erb'
+        owner 'root'
+        group 'root'
+        mode '0644'
+        variables(
+          config: new_resource,
+          etc_dir: etc_dir,
+          base_dir: base_dir,
+          mysqld_bin: mysqld_bin
+        )
+        cookbook 'mysql'
+        notifies :run, "execute[#{instance} systemctl daemon-reload]", :immediately
+        action :create
+      end
+
+      # avoid 'Unit file changed on disk' warning
+      execute "#{instance} systemctl daemon-reload" do
+        command '/bin/systemctl daemon-reload'
+        action :nothing
+      end
+
+      # tmpfiles.d config so the service survives reboot
+      template "/usr/lib/tmpfiles.d/#{mysql_name}.conf" do
+        path "/usr/lib/tmpfiles.d/#{mysql_name}.conf"
+        source 'tmpfiles.d.conf.erb'
+        owner 'root'
+        group 'root'
+        mode '0644'
+        variables(
+          run_dir: run_dir,
+          run_user: run_user,
+          run_group: run_group
+        )
+        cookbook 'mysql'
+        action :create
+      end
+
+      # service management resource
+      service mysql_name.to_s do
+        service_name mysql_name
+        provider Chef::Provider::Service::Systemd
+        supports restart: true, status: true
+        action [:enable, :start]
+      end
+    end
+
+    action :stop do
+      # service management resource
+      service mysql_name.to_s do
+        service_name mysql_name
+        provider Chef::Provider::Service::Systemd
+        supports status: true
+        action [:disable, :stop]
+        only_if { ::File.exist?("/usr/lib/systemd/system/#{mysql_name}.service") }
+      end
+    end
+
+    action :restart do
+      # service management resource
+      service mysql_name.to_s do
+        service_name mysql_name
+        provider Chef::Provider::Service::Systemd
+        supports restart: true
+        action :restart
+      end
+    end
+
+    action :reload do
+      # service management resource
+      service mysql_name.to_s do
+        service_name mysql_name
+        provider Chef::Provider::Service::Systemd
+        action :reload
+      end
+    end
+
+    declare_action_class.class_eval do
+      def stop_system_service
+        # service management resource
+        service 'mysql' do
+          service_name system_service_name
+          provider Chef::Provider::Service::Systemd
+          supports status: true
+          action [:stop, :disable]
+        end
+      end
+
+      def delete_stop_service
+        # service management resource
+        service mysql_name.to_s do
+          service_name mysql_name
+          provider Chef::Provider::Service::Systemd
+          supports status: true
+          action [:disable, :stop]
+          only_if { ::File.exist?("/usr/lib/systemd/system/#{mysql_name}.service") }
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/mysql-8.4.0/libraries/mysql_service_manager_sysvinit.rb b/cookbooks/mysql-8.4.0/libraries/mysql_service_manager_sysvinit.rb
new file mode 100644
index 0000000000000000000000000000000000000000..1b760642bbd5de0e92606ada2acb0bc0ea2a2984
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/libraries/mysql_service_manager_sysvinit.rb
@@ -0,0 +1,79 @@
+module MysqlCookbook
+  class MysqlServiceManagerSysvinit < MysqlServiceBase
+    resource_name :mysql_service_manager_sysvinit
+
+    provides :mysql_service_manager, os: 'linux'
+
+    action :create do
+      # from base
+      create_system_user
+      stop_system_service
+      create_config
+      initialize_database
+      configure_apparmor
+    end
+
+    action :start do
+      template "/etc/init.d/#{mysql_name}" do
+        source 'sysvinit/mysqld.erb'
+        owner 'root'
+        group 'root'
+        mode '0755'
+        variables(
+          config: new_resource,
+          defaults_file: defaults_file,
+          error_log: error_log,
+          mysql_name: mysql_name,
+          mysqladmin_bin: mysqladmin_bin,
+          mysqld_safe_bin: mysqld_safe_bin,
+          pid_file: pid_file,
+          scl_name: scl_name
+        )
+        cookbook 'mysql'
+        action :create
+      end
+
+      service mysql_name do
+        supports restart: true, status: true
+        action [:enable, :start]
+      end
+    end
+
+    action :stop do
+      service mysql_name do
+        supports restart: true, status: true
+        action [:stop]
+      end
+    end
+
+    action :restart do
+      service mysql_name do
+        supports restart: true
+        action :restart
+      end
+    end
+
+    action :reload do
+      service mysql_name do
+        action :reload
+      end
+    end
+
+    declare_action_class.class_eval do
+      def stop_system_service
+        service system_service_name do
+          supports status: true
+          action [:stop, :disable]
+        end
+      end
+
+      def delete_stop_service
+        service mysql_name do
+          supports status: true
+          action [:disable, :stop]
+          only_if { ::File.exist?("#{etc_dir}/init.d/#{mysql_name}") }
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/mysql-8.4.0/libraries/mysql_service_manager_upstart.rb b/cookbooks/mysql-8.4.0/libraries/mysql_service_manager_upstart.rb
new file mode 100644
index 0000000000000000000000000000000000000000..90d4172f5f5b0b3ff9b232a213d39ebc2e5a2989
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/libraries/mysql_service_manager_upstart.rb
@@ -0,0 +1,103 @@
+module MysqlCookbook
+  class MysqlServiceManagerUpstart < MysqlServiceBase
+    resource_name :mysql_service_manager_upstart
+
+    provides :mysql_service_manager, platform_family: 'debian' do |_node|
+      Chef::Platform::ServiceHelpers.service_resource_providers.include?(:upstart) &&
+        !Chef::Platform::ServiceHelpers.service_resource_providers.include?(:systemd) &&
+        !Chef::Platform::ServiceHelpers.service_resource_providers.include?(:redhat) &&
+        ::File.exist?('/sbin/status') # Fix for Docker, in 7 and 8 images /sbin/status doesn't exists and Upstart provider doesn't work
+    end
+
+    action :create do
+      # from base
+      create_system_user
+      stop_system_service
+      create_config
+      configure_apparmor
+      initialize_database
+    end
+
+    action :start do
+      template "/usr/sbin/#{mysql_name}-wait-ready" do
+        source 'upstart/mysqld-wait-ready.erb'
+        owner 'root'
+        group 'root'
+        mode '0755'
+        variables(socket_file: socket_file)
+        cookbook 'mysql'
+        action :create
+      end
+
+      template "/etc/init/#{mysql_name}.conf" do
+        source 'upstart/mysqld.erb'
+        owner 'root'
+        group 'root'
+        mode '0644'
+        variables(
+          defaults_file: defaults_file,
+          mysql_name: mysql_name,
+          run_group: run_group,
+          run_user: run_user,
+          socket_dir: socket_dir
+        )
+        cookbook 'mysql'
+        action :create
+      end
+
+      service mysql_name do
+        provider Chef::Provider::Service::Upstart
+        supports status: true
+        action [:start]
+      end
+    end
+
+    action :stop do
+      service mysql_name do
+        provider Chef::Provider::Service::Upstart
+        supports restart: true, status: true
+        action [:stop]
+      end
+    end
+
+    action :restart do
+      # With Upstart, restarting the service doesn't behave "as expected".
+      # We want the post-start stanzas, which wait until the
+      # service is available before returning
+      #
+      # http://upstart.ubuntu.com/cookbook/#restart
+      service mysql_name do
+        provider Chef::Provider::Service::Upstart
+        action [:stop, :start]
+      end
+    end
+
+    action :reload do
+      # With Upstart, reload just sends a HUP signal to the process.
+      # As far as I can tell, this doesn't work the way it's
+      # supposed to, so we need to actually restart the service.
+      service mysql_name do
+        provider Chef::Provider::Service::Upstart
+        action [:stop, :start]
+      end
+    end
+
+    declare_action_class.class_eval do
+      def stop_system_service
+        service system_service_name do
+          provider Chef::Provider::Service::Upstart
+          supports status: true
+          action [:stop, :disable]
+        end
+      end
+
+      def delete_stop_service
+        service mysql_name do
+          provider Chef::Provider::Service::Upstart
+          action [:disable, :stop]
+          only_if { ::File.exist?("#{etc_dir}/init/#{mysql_name}") }
+        end
+      end
+    end
+  end
+end
diff --git a/cookbooks/mysql-8.4.0/metadata.json b/cookbooks/mysql-8.4.0/metadata.json
new file mode 100644
index 0000000000000000000000000000000000000000..22bd441645ec440380d368cb5c2e76fd3e236b4a
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/metadata.json
@@ -0,0 +1 @@
+{"name":"mysql","version":"8.4.0","description":"Provides mysql_service, mysql_config, and mysql_client resources","long_description":"","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache-2.0","platforms":{"redhat":">= 6.0","centos":">= 6.0","scientific":">= 6.0","oracle":">= 6.0","amazon":">= 0.0.0","fedora":">= 0.0.0","debian":">= 7.0","ubuntu":">= 12.04","opensuse":">= 13.0","opensuseleap":">= 0.0.0","suse":">= 12.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/mysql","issues_url":"https://github.com/chef-cookbooks/mysql/issues","chef_version":[[">= 12.1"]],"ohai_version":[]}
\ No newline at end of file
diff --git a/cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld-instance.erb b/cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld-instance.erb
new file mode 100644
index 0000000000000000000000000000000000000000..130beb7b8af52d84cc695f5000355d53f3ba1f94
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld-instance.erb
@@ -0,0 +1,14 @@
+/etc/<%= @mysql_name %>/*.pem r,
+/etc/<%= @mysql_name %>/conf.d/ r,
+/etc/<%= @mysql_name %>/conf.d/* r,
+/etc/<%= @mysql_name %>/my.cnf r,
+<%= @config.log_dir %>/ r,
+<%= @config.log_dir %>/* rw,
+<%= @config.data_dir %>/ r,
+<%= @config.data_dir %>/** rwk,
+<%= @config.run_dir %>/** rw,
+<%= @config.pid_file %> rw,
+<%= @config.socket_file %> rw,
+/tmp/<%= @mysql_name %>/ r,
+/tmp/<%= @mysql_name %>/my.sql r,
+<%= @config.tmp_dir %>/* rw,
diff --git a/cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld-local.erb b/cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld-local.erb
new file mode 100644
index 0000000000000000000000000000000000000000..b261920a2a65a3d5017944b0d67bfaede175cee7
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld-local.erb
@@ -0,0 +1 @@
+#include <local/mysql>
diff --git a/cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld.erb b/cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld.erb
new file mode 100644
index 0000000000000000000000000000000000000000..19ddbf59b37aaea7a9ac9a2c63ba8043cd6b3a4d
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/templates/default/apparmor/usr.sbin.mysqld.erb
@@ -0,0 +1,47 @@
+# vim:syntax=apparmor
+# Last Modified: Tue Jun 19 17:37:30 2007
+#include <tunables/global>
+
+/usr/sbin/mysqld {
+  #include <abstractions/base>
+  #include <abstractions/nameservice>
+  #include <abstractions/user-tmp>
+  #include <abstractions/mysql>
+  #include <abstractions/winbind>
+
+  capability dac_override,
+  capability sys_resource,
+  capability setgid,
+  capability setuid,
+
+  network tcp,
+
+  /etc/hosts.allow r,
+  /etc/hosts.deny r,
+
+  /etc/mysql/*.pem r,
+  /etc/mysql/conf.d/ r,
+  /etc/mysql/conf.d/* r,
+  /etc/mysql/*.cnf r,
+  /usr/lib/mysql/plugin/ r,
+  /usr/lib/mysql/plugin/*.so* mr,
+  /usr/sbin/mysqld mr,
+  /usr/share/mysql/** r,
+  /var/log/mysql.log rw,
+  /var/log/mysql.err rw,
+  /var/lib/mysql/ r,
+  /var/lib/mysql/** rwk,
+  /var/log/mysql/ r,
+  /var/log/mysql/* rw,
+  /var/run/mysqld/mysqld.pid rw,
+  /var/run/mysqld/mysqld.sock w,
+  /var/run/mysqld/mysqld.sock.lock rw,
+  /run/mysqld/mysqld.pid rw,
+  /run/mysqld/mysqld.sock w,
+  /run/mysqld/mysqld.sock.lock rw,
+
+  /sys/devices/system/cpu/ r,
+
+  # Site-specific additions and overrides. See local/README for details.
+  #include <local/usr.sbin.mysqld>
+}
diff --git a/cookbooks/mysql-8.4.0/templates/default/my.cnf.erb b/cookbooks/mysql-8.4.0/templates/default/my.cnf.erb
new file mode 100644
index 0000000000000000000000000000000000000000..ff10156837fef1529843fa5afe53b22d3f795d61
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/templates/default/my.cnf.erb
@@ -0,0 +1,57 @@
+# Chef generated my.cnf for instance mysql-<%= @config.name %>
+
+[client]
+<% if @config.charset %>
+default-character-set          = <%= @config.charset %>
+<% end %>
+<% if @config.port %>
+port                           = <%= @config.port %>
+<% end %>
+<% if @config.socket_file %>
+socket                         = <%= @config.socket_file %>
+<% end %>
+
+[mysql]
+<% if @config.charset %>
+default-character-set          = <%= @config.charset %>
+<% end %>
+
+[mysqld]
+<% if @config.run_user %>
+user                           = <%= @config.run_user %>
+<% end %>
+<% if @config.pid_file %>
+pid-file                       = <%= @config.pid_file %>
+<% end %>
+<% if @config.socket_file %>
+socket                         = <%= @config.socket_file %>
+<% end %>
+<% if @config.bind_address %>
+bind-address                   = <%= @config.bind_address %>
+<% end %>
+<% if @config.port %>
+port                           = <%= @config.port %>
+<% end %>
+<% if @config.data_dir %>
+datadir                        = <%= @config.data_dir %>
+<% end %>
+<% if @config.tmp_dir %>
+tmpdir                         = <%= @config.tmp_dir %>
+<% end %>
+<% @config.mysqld_options.each do |option,value| %>
+<%= option %>                  = <%= value %>
+<% end %>
+<% if @config.lc_messages_dir %>
+lc-messages-dir                = <%= @config.lc_messages_dir %>
+<% end %>
+<% if @config.error_log %>
+log-error                      = <%= @config.error_log %>
+<% end %>
+<% if @config.include_dir %>
+!includedir <%= @config.include_dir %>
+<% end %>
+
+[mysqld_safe]
+<% if @config.socket_file %>
+socket                         = <%= @config.socket_file %>
+<% end %>
diff --git a/cookbooks/mysql-8.4.0/templates/default/smf/svc.method.mysqld.erb b/cookbooks/mysql-8.4.0/templates/default/smf/svc.method.mysqld.erb
new file mode 100644
index 0000000000000000000000000000000000000000..5cc178a99eea6eedb27eb9bc96c9f4b93bd1965b
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/templates/default/smf/svc.method.mysqld.erb
@@ -0,0 +1,28 @@
+#!/sbin/sh
+#
+# Generated by Chef
+# 
+
+. /lib/svc/share/smf_include.sh
+
+ulimit -n 10240
+
+case "$1" in
+start)
+        <%= @mysqld_bin %> \
+            --defaults-file=<%= @defaults_file %> \
+            --basedir=<%= @base_dir %> \
+            --datadir=<%= @data_dir %> \
+            --pid-file=<%= @pid_file %> \
+            --log-error=<%= @error_log %> &
+        ;;
+stop)
+        [ -f <%= @pid_file %> ] && kill `/usr/bin/head -1 <%= @pid_file %>`
+        ;;
+*)
+        echo "Usage: $0 {start|stop}" >&2
+        exit 1
+        ;;
+esac
+
+exit $SMF_EXIT_OK
diff --git a/cookbooks/mysql-8.4.0/templates/default/systemd/mysqld-wait-ready.erb b/cookbooks/mysql-8.4.0/templates/default/systemd/mysqld-wait-ready.erb
new file mode 100644
index 0000000000000000000000000000000000000000..a566bf3ab364182a808eba454a81dfae70644ff2
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/templates/default/systemd/mysqld-wait-ready.erb
@@ -0,0 +1,30 @@
+#!/bin/sh
+
+daemon_pid="$1"
+
+# Wait for the server to come up or for the mysqld process to disappear
+ret=0
+while /bin/true; do
+        RESPONSE=`/usr/bin/mysqladmin --no-defaults --socket="<%= @socket_file %>" --user=UNKNOWN_MYSQL_USER ping 2>&1`
+        mret=$?
+        if [ $mret -eq 0 ]; then
+            break
+        fi
+        # exit codes 1, 11 (EXIT_CANNOT_CONNECT_TO_SERVICE) are expected,
+        # anything else suggests a configuration error
+        if [ $mret -ne 1 -a $mret -ne 11 ]; then
+            ret=1
+            break
+        fi
+        # "Access denied" also means the server is alive
+        echo "$RESPONSE" | grep -q "Access denied for user" && break
+
+        # Check process still exists
+        if ! /bin/kill -0 $daemon_pid 2>/dev/null; then
+            ret=1
+            break
+        fi
+        sleep 1
+done
+
+exit $ret
diff --git a/cookbooks/mysql-8.4.0/templates/default/systemd/mysqld.service.erb b/cookbooks/mysql-8.4.0/templates/default/systemd/mysqld.service.erb
new file mode 100644
index 0000000000000000000000000000000000000000..f1fb6c138a1ae387475852595561d7b43ca189a1
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/templates/default/systemd/mysqld.service.erb
@@ -0,0 +1,16 @@
+[Unit]
+Description=mysql_service[mysql-<%= @config.instance %>]
+After=syslog.target
+After=network.target
+
+[Service]
+Type=simple
+User=<%= @config.run_user %>
+Group=<%= @config.run_group %>
+ExecStart=<%= @mysqld_bin %> --defaults-file=<%= @etc_dir %>/my.cnf --basedir=<%= @base_dir %>
+ExecStartPost=/usr/libexec/mysql-<%= @config.instance %>-wait-ready $MAINPID
+TimeoutSec=300
+PrivateTmp=true
+
+[Install]
+WantedBy=multi-user.target
diff --git a/cookbooks/mysql-8.4.0/templates/default/sysvinit/mysqld.erb b/cookbooks/mysql-8.4.0/templates/default/sysvinit/mysqld.erb
new file mode 100644
index 0000000000000000000000000000000000000000..45b952d01bb9ad35261bd9dd7909b87fe1f51cbe
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/templates/default/sysvinit/mysqld.erb
@@ -0,0 +1,279 @@
+#!/bin/bash
+#
+### BEGIN INIT INFO
+# Provides:          <%= @mysql_name %>
+# Required-Start:    $remote_fs $syslog
+# Required-Stop:     $remote_fs $syslog
+# Should-Start:      $network $time
+# Should-Stop:       $network $time
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
+# Short-Description: Start and stop the mysql database server daemon
+# Description:       Controls the main MySQL database server daemon "mysqld"
+#                    and its wrapper script "mysqld_safe".
+### END INIT INFO
+
+# set -e
+# set -u
+
+### Exit code reference
+# http://fedoraproject.org/wiki/Packaging:SysVInitScript
+# http://refspecs.linuxbase.org/LSB_3.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html
+
+# Source functions
+<% if node['platform_family'] == 'rhel' %>
+# Source RHEL function library.
+. /etc/rc.d/init.d/functions
+<% end %>
+
+####
+# Variables
+####
+
+STARTTIMEOUT=900
+STOPTIMEOUT=900
+PID_DELAY=60
+
+####
+# Helper functions
+###
+
+# Boolean function to see if MYSQL_PID exists and is a number
+pid_exists() {
+    PID_EXISTS=1
+    if [ -f <%= @pid_file %> ]; then
+        MYSQLD_PID=`cat <%= @pid_file %> 2>/dev/null`
+	      if [ -n "$MYSQLD_PID" ] && [ -d "/proc/$MYSQLD_PID" ] ; then
+	          PID_EXISTS=0
+	      fi
+    fi
+    return $PID_EXISTS
+}
+
+# Use mysqladmin to ping the service as an invalid user over a socket
+running() {
+    RUNNING=1
+    RESPONSE=`<%= @mysqladmin_bin %> --defaults-file=<%= @defaults_file %> --user=UNKNOWN_MYSQL_USER ping 2>&1`
+    local mret=$?
+    if pid_exists \
+        && [ $mret -eq 0 ] \
+        || [ `echo $RESPONSE | grep -q "Access denied for user"` ]; then
+        RUNNING=0
+    fi
+    return $RUNNING
+}
+
+writable_error_log() {
+    WRITABLE_ERROR_LOG=1
+	  touch "<%= @error_log %>" 2>/dev/null
+    touchret=$?
+	  if [ $touchret -eq 0 ]; then
+        chown <%= @config.run_user %>:<%= @config.run_group %> <%= @error_log %>
+        return 0
+    else
+        return $WRITABLE_ERROR_LOG
+    fi
+}
+
+print_start_success() {
+    <% if node['platform_family'] == 'rhel' %>
+    action $"Starting <%= @mysql_name %>: " /bin/true
+    <% else %>
+    echo "Staring MySQL instance <%= @mysql_name %>"
+    <% end %>
+    return 0;
+}
+
+print_start_failure() {
+    <% if node['platform_family'] == 'rhel' %>
+    action $"Starting <%= @mysql_name %>: " /bin/false
+    <% else %>
+    echo "Could not start MySQL instance <%= @mysql_name %>"
+    <% end %>
+    return 0;
+}
+
+print_reload_success() {
+    <% if node['platform_family'] == 'rhel' %>
+    action $"Reloading <%= @mysql_name %>" /bin/true
+    <% else %>
+    echo "Reload success for <%= @mysql_name %>"
+    <% end %>
+    return 0;
+}
+
+print_reload_failure() {
+    <% if node['platform_family'] == 'rhel' %>
+    action $"Reloading <%= @mysql_name %>" /bin/false
+    <% else %>
+    echo "Reload failed for <%= @mysql_name %>"
+    <% end %>
+    return 0;
+}
+
+print_stop_success() {
+    <% if node['platform_family'] == 'rhel' %>
+    action $"Stopping <%= @mysql_name %>: " /bin/true
+    <% else %>
+    echo "Stopping MySQL instance <%= @mysql_name %>"
+    <% end %>
+    return 0;
+}
+
+print_stop_failure() {
+    <% if node['platform_family'] == 'rhel' %>
+    action $"Stopping <%= @mysql_name %>: " /bin/false
+    <% else %>
+    echo "Could not stop MySQL instance <%= @mysql_name %>"
+    <% end %>
+    return 0;
+}
+
+start_command() {
+    # Attempt to start <%= @mysql_name %>
+    echo "Starting MySQL instance <%= @mysql_name %>"
+
+    local scl_name="<%= @scl_name %>"
+
+    if [ -z $scl_name ]; then
+        <%= @mysqld_safe_bin %> \
+            --defaults-file=<%= @defaults_file %> \
+            >/dev/null 2>&1 &
+        local pid=$!
+    else
+        scl enable $scl_name "<%= @mysqld_safe_bin %> \
+            --defaults-file=<%= @defaults_file %> \
+            >/dev/null 2>&1 &"
+        local pid=$!
+    fi
+
+    return $pid
+}
+
+####
+# Init script actions
+###
+
+# Start <%= @mysql_name %>
+start() {
+    # exit 0 if already running.
+    if running; then
+        print_start_success
+        return 0;
+    fi
+
+    # exit 4 if we can't write to error_log
+    if ! writable_error_log; then
+        print_start_failure
+        return 4
+    fi
+
+    # run program
+    start_command;
+    start_pid=$?
+
+    # Timeout loop
+    local TIMEOUT=$STARTTIMEOUT
+    while [ $TIMEOUT -gt 0 ]; do
+        if running; then
+            break
+        fi
+
+        let CURRENT_DELAY=${STARTTIMEOUT}-${TIMEOUT}
+        if [ $CURRENT_DELAY -gt $PID_DELAY ] \
+          && ! pid_exists; then
+            break
+        fi
+
+        sleep 1
+	      let TIMEOUT=${TIMEOUT}-1
+    done
+
+    if running; then
+        # successbaby.gif
+        print_start_success
+        return 0
+    elif ! pid_exists; then
+        # Handle startup failure
+        print_start_failure
+        return 3
+	  elif [ $TIMEOUT -eq 0 ]; then
+        # Handle timeout
+        print_start_failure
+        # clean up
+        kill $start_pid 2>/dev/null
+	      return 1
+	  fi
+}
+
+# Reload <%= @mysql_name %>
+reload() {
+    <%= @mysqladmin_bin %> reload
+    local ret=$?
+    if [ $ret -eq 0 ]; then
+        print_reload_success;
+    else
+        print_reload_failure;
+    fi
+    return $ret
+}
+
+# Status of <%= @mysql_name %>
+status() {
+    if running; then
+        echo "<%= @mysql_name %> is running"
+        return 0
+    else
+        echo "<%= @mysql_name %> is not running"
+        return 1
+    fi
+}
+
+# Stop <%= @mysql_name %>
+stop() {
+    if running; then
+        echo "Stopping MySQL instance <%= @mysql_name %>"
+        if [ -f <%= @pid_file %> ]; then
+            /bin/kill `cat <%= @pid_file %> 2>/dev/null`
+            kstat=$?
+        fi
+
+        # Timeout loop
+        local TIMEOUT=$STARTTIMEOUT
+        while [ $TIMEOUT -gt 0 ]; do
+            if [ -e <%= @pid_file %> ]; then
+            sleep 1
+            fi
+	          let TIMEOUT=${TIMEOUT}-1
+        done
+
+        return $kstat
+    else
+        echo "MySQL instance <%= @mysql_name %> Stopped."
+        return 0
+    fi
+}
+
+# main()
+case "$1" in
+    start)
+        start
+        ;;
+    stop)
+        stop
+        ;;
+    status)
+        status
+        ;;
+    restart)
+        stop ; start
+        ;;
+    reload)
+        reload
+        ;;
+    *)
+        echo $"Usage: $0 {start|stop|status|restart|reload}"
+        exit 2
+esac
+
+exit $?
diff --git a/cookbooks/mysql-8.4.0/templates/default/tmpfiles.d.conf.erb b/cookbooks/mysql-8.4.0/templates/default/tmpfiles.d.conf.erb
new file mode 100644
index 0000000000000000000000000000000000000000..59d0426a969c146e837bce365c4202c55b8ae94b
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/templates/default/tmpfiles.d.conf.erb
@@ -0,0 +1 @@
+d <%= @run_dir %> 0755 <%= @run_user %> <%= @run_group %> -
diff --git a/cookbooks/mysql-8.4.0/templates/default/upstart/mysqld-wait-ready.erb b/cookbooks/mysql-8.4.0/templates/default/upstart/mysqld-wait-ready.erb
new file mode 100644
index 0000000000000000000000000000000000000000..f99308f696431e3c927f720af723c8e166b73ab0
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/templates/default/upstart/mysqld-wait-ready.erb
@@ -0,0 +1,22 @@
+#!/bin/sh
+
+# Wait for the server to come up
+ret=0
+while /bin/true; do
+        RESPONSE=`/usr/bin/mysqladmin --no-defaults --socket="<%= @socket_file %>" --user=UNKNOWN_MYSQL_USER ping 2>&1`
+        mret=$?
+        if [ $mret -eq 0 ]; then
+            break
+        fi
+        # exit codes 1, 11 (EXIT_CANNOT_CONNECT_TO_SERVICE) are expected,
+        # anything else suggests a configuration error
+        if [ $mret -ne 1 -a $mret -ne 11 ]; then
+            ret=1
+            break
+        fi
+        # "Access denied" also means the server is alive
+        echo "$RESPONSE" | grep -q "Access denied for user" && break
+        sleep 1
+done
+
+exit $ret
diff --git a/cookbooks/mysql-8.4.0/templates/default/upstart/mysqld.erb b/cookbooks/mysql-8.4.0/templates/default/upstart/mysqld.erb
new file mode 100644
index 0000000000000000000000000000000000000000..4ac214c9208c4355ad8c43033241ffce686a09a1
--- /dev/null
+++ b/cookbooks/mysql-8.4.0/templates/default/upstart/mysqld.erb
@@ -0,0 +1,26 @@
+# <%= @mysql_name %> Service
+
+description     "MySQL service <%= @mysql_name %>"
+author          "chef-client"
+
+start on runlevel [2345]
+stop on starting rc RUNLEVEL=[016]
+
+respawn
+respawn limit 2 5
+
+env HOME=/etc/<%= @mysql_name %>
+umask 007
+
+kill timeout 300
+
+pre-start script
+[ -d /run/<%= @mysql_name %> ] || install -m 755 -o <%= @run_user %> -g <%= @run_group %> -d /run/<%= @mysql_name %>
+[ -d <%= @socket_dir %> ] || install -m 755 -o <%= @run_user %> -g <%= @run_group %> -d <%= @socket_dir %>
+end script
+
+exec /usr/sbin/mysqld --defaults-file=<%= @defaults_file %>
+
+post-start script
+/usr/sbin/<%= @mysql_name %>-wait-ready
+end script
diff --git a/cookbooks/ntp-3.4.0/CHANGELOG.md b/cookbooks/ntp-3.4.0/CHANGELOG.md
new file mode 100644
index 0000000000000000000000000000000000000000..290eb680621fb2d9992cb831735e32d00d51a0e6
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/CHANGELOG.md
@@ -0,0 +1,274 @@
+# ntp Cookbook CHANGELOG
+
+This file is used to list changes made in each version of the ntp cookbook.
+
+## 3.4.0 (2017-05-06)
+
+- Ensure metadata compatibility with older Chef 12 releases
+- Testing updates for Chef 13
+- Test with Delivery local mode instead of a Rakefile
+- Use a SPDX standard license string
+- Remove xcp as a platform in the metadata
+- Added requestkey attribute
+
+## 3.3.1 (2016-12-21)
+
+- Fix resource cloning warning in recipe[default]
+
+## 3.3.0 (2016-12-16)
+
+- Add Mac OS X client config support
+
+## 3.2.1 (2016-11-23)
+
+- Update leap seconds file to version 3676924800
+
+## 3.2.0 (2016-09-28)
+
+- Remove support for Arch
+- Remove legacy apparmor config that wasn't used
+- Don't install ntpdate (and uninstall it) on Ubuntu 16.04+
+- Expand specs and avoid deprecation warnings
+
+## 3.1.0 (2016-09-16)
+
+- Require Chef 12.1 not 12.0
+- Remove the dependency on the Windows cookbook
+
+## 3.0.0 (2016-09-07)
+
+- Require Chef 12+
+
+## 2.0.3 (2016-08-31)
+
+- Remove minitest tests from the undo recipe
+
+## 2.0.2 (2016-08-30)
+
+- Replace node.set with node.normal to avoid deprecation notices
+
+## 2.0.1 (2016-08-29)
+
+- Update the leap seconds file
+- Remove node name from configs
+- Switch to cookstyle and use the Rakefile directly for testing in Travis CI
+- Update platforms we test on
+- Fix failing Chefspecs and avoid deprecation warnings during spec runs
+
+## v2.0.0 (2016-05-18)
+
+- Remove the undo recipe. This functionality is better suited for a custom cookbook that matches the needs of individual organizations
+- Removed the installation of the visual studio 2008 runtime that was only necessary for Windows 2003.
+- Fixed the forced clock syncing on FreeBSD hosts
+
+## v1.11.1 (2016-05-12)
+
+- Ownership of this cookbook has been transferred back to Chef Software.
+
+## v1.11.0 (2016-03-29)
+
+- When force setting the clock run ntp as the ntp user to ensure we don't set file ownership to root
+- Added optional support for orphan mode
+- Require windows cookbook 1.38.0 to resolve several issues with the older cookbook versions
+- Add support for using keys
+
+## v1.10.1 (2016-02-04)
+
+- Update the Readme to include openSUSE and Arch Linux
+- Guard the timeout set in the service to prevent failures on old chef releases
+
+## v1.10.0 (2016-02-04)
+
+- Fixed compatibility with FreeBSD hosts by skipping the sync with the hardware clock and using the proper path to the "true" command
+- Fixed compatibility with Windows by extending the service start timeout, introducing retries, and excluding Windows from the hardware sync logic
+- Changed the default array of packages to install from ntp and ntpdate to just ntp. ntpdate is used on Debian and modern RHEL/Fedora hosts only. This gives us out of the box support for Arch and Suse
+- Ensure that Fedora systems also install ntpdate
+- Updated test dependencies to the latest
+- Updated test documentation to point to the official Chef testing documentation
+- Expanded the Test Kitchen config with better support for FreeBSD/Fedora and new Windows boxes
+
+## v1.9.2 (2016-02-04)
+
+- **PR [#121]** - Remove nomodify config from loopback
+
+## v1.9.1 (2016-01-07)
+
+- **PR [#132]** - Update ntp.leapseconds
+
+## v1.9.0 (2015-12-16)
+
+- **PR [#111]** - Fix duplication of localhost listen directive in template
+- **PR [#127]** - Set `var_owner` on FreeBSD to root instead of default ntp
+- **PR [#117]** - Document node['ntp']['ignore']
+- **PR [#118]** - Add attributes to support pld-linux
+- **PR [#120]** - Fix links to Github PRs in the Changelog
+- **PR [#124]** - Additional fix for apparmor issue gmiranda23#103
+- Depend on windows cookbook instead of suggesting. Suggests doesn't actually do anything
+- Fix / expand apparmor specs to pass and test the auto apparmor config logic
+- Enable Travis CI and update the travis.yml file to run full integration tests with Kitchen Docker so we test all PRs on Ubuntu 12.04/14.04 and CentOS 6.7 / 7.1
+- Reformat all markdown files
+- Update all references to Opscode to be Chef Software.
+- Update copyright dates and contact e-mails
+- Expanded platforms in the Test Kitchen config
+- Added new supermarket issues_url and source_url metadata
+- Update the Berkfile API url and removed version pins on the testing cookbooks
+- Remove yum from the Berksfile as it isn't actually used
+- Use the standard Chef testing Rakefile
+- Remove the attribute documentation from the metadata as it is quickly out of sync
+- Resolve rubocop warnings and include the standard Chef rubocop.yml file
+- Update development deps in the Gemfile to the latest releases
+- Remove the outdated contributing.md doc from the Opscode days
+
+## v1.8.6 (2015-05-14)
+
+- **PR [#102](102)** - Update leapseconds file to 3660249600 (through C49)
+- Gemfile parity with ChefDK 0.5.1
+- .kitchen.yml platform updates to current bento boxes
+
+## v1.8.4 (2015-04-17)
+
+- **PR [#101]** - add logfile attribute
+
+## v1.8.2 (2015-04-15)
+
+- **PR [#100]** - Sort peers & servers for consistency
+
+## v1.8.0 (2015-04-13)
+
+- Chefspec 4.0 updates
+- Rubocop updates
+- **PR [#85]** - Update leapseconds for June 2015 leapsecond
+- **PR [#70]** - Allow setting tinker options in attributes
+- **PR [#84]** - Add attributes for tinker option customization
+- **PR [#88]** - Attribute sets noquery for localhost lines
+- **PR [#89]** - ntp.leapseconds notifies ntp service with delayed restart
+- **PR [#91]** - Allow ntp.conf update to restart immediate
+- **PR [#95]** - Add preferred ntp server support
+- **PR [#96]** - Add restrict default attribute
+- **PR [#72]** - Move high stratum real CMOs to an attribute
+- **PR [#98]** - Bump test-kitchen gem version
+- **PR [#99]** - Lazy attribute for leapfile_enabled
+
+## v1.7.0 (2014-12-10)
+
+- Added CentOS 7 support for test-kitchen
+- **PR [#37]** - Check that apparmor exists before enabling service
+- **PR [#45]** - Statistics logging switch (not available for Windows)
+- **PR [#57]** - Move include statement on helper outside 'windows?' check
+- **PR [#71]** - Ability to listen more than one interface
+- **PR [#73]** - Fix appamor configuration for Ubuntu
+- **PR [#74]** - Remove is_server from example
+- **PR [#75]** - Add more settings for server and peer declarations
+- **PR [#83]** - Fix apparmor spec tests
+
+## v1.6.8 (2014-12-04)
+
+- **PR [#81]** - Update to berkshelf3
+
+## v1.6.6 (2014-12-02)
+
+- **PR [#76]** - Overhauled Testing
+- **PR [#68]** - Updated Leapseconds
+- **PR [#51]** - Berksfile source deprecation
+
+## v1.6.5 (2014-09-25)
+
+- Ensure that ntp version is captured
+
+## v1.6.4 (2014-07-02)
+
+- Leapseconds File Expired, update to 3626380800
+- **[COOK-3887](https://tickets.opscode.com/browse/COOK-3887)** - Trivial changes to achieve Gentoo support
+- **[COOK-1876](https://tickets.opscode.com/browse/COOK-1876)** - ntp leapfile assumes ntpd >= 4.2.6 syntax
+
+## v1.6.2 (2014-03-19)
+
+- [COOK-4162] - change "No NTP servers specified" message to :debug
+
+## v1.6.0 (2014-02-21)
+
+### Improvement
+
+- **[COOK-4346](https://tickets.opscode.com/browse/COOK-4346)** - Solaris 11 support for ntp
+- **[COOK-4339](https://tickets.opscode.com/browse/COOK-4339)** - Disable Monitoring by Default
+- **[COOK-3604](https://tickets.opscode.com/browse/COOK-3604)** - Enable listening on specific interfaces
+
+### Bug
+
+- **[COOK-4106](https://tickets.opscode.com/browse/COOK-4106)** - Check for default content in ntp.conf
+- **[COOK-4087](https://tickets.opscode.com/browse/COOK-4087)** - quote option in readme
+- **[COOK-3797](https://tickets.opscode.com/browse/COOK-3797)** - Cookbook fails to upload due to 1.9.x syntax
+- **[COOK-3023](https://tickets.opscode.com/browse/COOK-3023)** - NTP leapseconds file denied by Ubuntu apparmor profile
+
+## v1.5.4 (2013-12-29)
+
+[COOK-4007]- update to 3612902400
+
+## v1.5.2
+
+### Bug
+
+- **[COOK-3797](https://tickets.opscode.com/browse/COOK-3797)** - Add /spec to Chefignore
+
+## v1.5.0
+
+### Improvement
+
+- **[COOK-3651](https://tickets.opscode.com/browse/COOK-3651)** - Refactor and clean up
+- **[COOK-3630](https://tickets.opscode.com/browse/COOK-3630)** - Switch NTP cookbook linting from Tailor to Rubocop
+- **[COOK-3273](https://tickets.opscode.com/browse/COOK-3273)** - Add tests
+
+### New Feature
+
+- **[COOK-3636](https://tickets.opscode.com/browse/COOK-3636)** - Allow ntp cookbook to update clock to ntp servers
+
+### Bug
+
+- **[COOK-3410](https://tickets.opscode.com/browse/COOK-3410)** - Remove redundant ntpdate/disable recipes
+- **[COOK-1170](https://tickets.opscode.com/browse/COOK-1170)** - Allow redefining NTP servers in a role
+
+## v1.4.0
+
+### Improvement
+
+- **[COOK-3365](https://tickets.opscode.com/browse/COOK-3365)** - Update ntp leapseconds file to version 3597177600
+- **[COOK-1674](https://tickets.opscode.com/browse/COOK-1674)** - Add Windows support
+
+## v1.3.2
+
+- [COOK-2024] - update leapfile for IERS Bulletin C
+
+## v1.3.0
+
+- [COOK-1404] - add leapfile for handling leap seconds
+
+## v1.2.0
+
+- [COOK-1184] - Add recipe to disable NTP completely
+- [COOK-1298] - Refactor into a reference cookbook for testing
+
+## v1.1.8
+
+- [COOK-1158] - RHEL family >= 6 has ntpdate package
+
+## v1.1.6
+
+- Related to changes in COOK-1124, fix group for freebsd and else
+
+## v1.1.4
+
+- [COOK-1124] - parameterised driftfile and statsdir to be configurable by platform
+
+## v1.1.2
+
+- [COOK-952] - freebsd support
+- [COOK-949] - check for any virtual system not just vmware
+
+## v1.1.0
+
+- Fixes COOK-376 (use LAN peers, iburst option, LAN restriction attribute)
+
+## v1.0.1
+
+- Support scientific linux
+- Use service name attribute in resource (fixes EL derivatives)
diff --git a/cookbooks/ntp-3.4.0/CONTRIBUTING.md b/cookbooks/ntp-3.4.0/CONTRIBUTING.md
new file mode 100644
index 0000000000000000000000000000000000000000..ef2f2b80834ef516cc8c9f03a840f69f0d52d467
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/CONTRIBUTING.md
@@ -0,0 +1,2 @@
+Please refer to
+https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
diff --git a/cookbooks/ntp-3.4.0/MAINTAINERS.md b/cookbooks/ntp-3.4.0/MAINTAINERS.md
new file mode 100644
index 0000000000000000000000000000000000000000..645ed14161311b9665b3f9c02f9498f5d76a0b2f
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/MAINTAINERS.md
@@ -0,0 +1,15 @@
+<!-- This is a generated file. Please do not edit directly -->
+
+# Maintainers
+
+This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.
+
+Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.
+
+# Project Maintainer
+* [Tim Smith](https://github.com/tas50)
+
+# Maintainers
+* [Jennifer Davis](https://github.com/sigje)
+* [Tim Smith](https://github.com/tas50)
+* [Thom May](https://github.com/thommay)
diff --git a/cookbooks/ntp-3.4.0/README.md b/cookbooks/ntp-3.4.0/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..af671cbf2164fc225647b97b25a6aed6e76921c6
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/README.md
@@ -0,0 +1,305 @@
+# NTP Cookbook
+
+[![Build Status](https://travis-ci.org/chef-cookbooks/ntp.svg?branch=master)](http://travis-ci.org/chef-cookbooks/ntp) [![Cookbook Version](https://img.shields.io/cookbook/v/ntp.svg)](https://supermarket.chef.io/cookbooks/ntp)
+
+Installs and configures ntp. On Windows systems it uses the Meinberg port of the standard NTPd client to Windows.
+
+## Requirements
+
+### Platforms
+
+- Debian-family Linux Distributions
+- RedHat-family Linux Distributions
+- Fedora
+- Gentoo Linux
+- openSUSE
+- FreeBSD
+- Windows 2008 R2+
+- Mac OS X 10.11+
+
+### Chef
+
+- Chef 12.1+
+
+### Cookbooks
+
+- none
+
+## Attributes
+
+### Recommended tunables
+
+- `ntp['servers']` - (applies to NTP Servers and Clients)
+
+  - Array, should be a list of upstream NTP servers that will be considered authoritative by the local NTP daemon. The local NTP daemon will act as a client, adjusting local time to match time data retrieved from the upstream NTP servers.
+
+  The NTP protocol works best with at least 4 servers. The ntp daemon will disregard any server after the 10th listed, but will continue monitoring all listed servers. For more information, see [Upstream Server Time Quantity](http://support.ntp.org/bin/view/Support/SelectingOffsiteNTPServers#Section_5.3.3.) at [support.ntp.org](http://support.ntp.org).
+
+- `ntp['peers']` - (applies to NTP Servers ONLY)
+
+  - Array, should be a list of local NTP peers. For more information, see [Designing Your NTP Network](http://support.ntp.org/bin/view/Support/DesigningYourNTPNetwork) at [support.ntp.org](http://support.ntp.org).
+
+- `ntp['restrictions']` - (applies to NTP Servers only)
+
+  - Array, should be a list of restrict lines to define access to NTP clients on your LAN.
+
+- `ntp['sync_clock']` (applies to NTP Servers and Clients)
+
+  - Boolean. Defaults to false. Forces the ntp daemon to be halted, an ntp -q command to be issued, and the ntp daemon to be restarted again on every Chef-client run. Will have no effect if drift is over 1000 seconds.
+
+- `ntp['sync_hw_clock']` (applies to NTP Servers and Clients)
+
+  - Boolean. Defaults to false. On *nix-based systems, forces the 'hwclock --systohc' command to be issued on every Chef-client run. This will sync the hardware clock to the system clock.
+  - Not available on Windows.
+
+- `ntp['restrict_default']`
+
+  - String. Defaults to 'kod notrap nomodify nopeer noquery'. Set to 'ignore' to [further lock down access](http://support.ntp.org/bin/view/Support/AccessRestrictions#Section_6.5.1.1.2.).
+
+- `ntp["listen_network"]` / `ntp["listen"]`
+
+  - String, optional attribute. Default is for NTP to listen on all addresses.
+  - `ntp["listen_network"]` should be set to 'primary' to listen on the node's primary IP address as determined by ohai, or set to a CIDR (eg: '192.168.4.0/24') to listen on the last node address on that CIDR.
+  - `ntp["listen"]` can be set to a specific address (eg: '192.168.4.10') instead of `ntp["listen_network"]` to force listening on a specific address.
+  - If both `ntp["listen"]` and `ntp["listen_network"]` are set then `ntp["listen"]` will always win.
+
+- `ntp["ignore"]`
+
+  - Array, interface names to ignore from listening. Can be used to disable listening wildcard interfaces (eg: ['wildcard', '::1']), can be combined with `ntp["listen"]`
+
+- `ntp["statistics"]`
+
+  - Boolean. Default to true. Enable/disable statistics data logging into `ntp['statsdir']`.
+  - Not available on Windows.
+
+- `ntp['conf_restart_immediate']`
+
+  - Boolean. Defaults to false. Restarts NTP service immediately after a config update if true. Otherwise it is a delayed restart.
+
+- `ntp['peer']['disable_tinker_panic_on_virtualization_guest']` (applies to virtualized hosts only)
+
+  - Boolean. Defaults to true. Sets tinker panic to 0\. NTP default it 1000\. (See <http://www.vmware.com/vmtn/resources/238> p. 23 for explanation on disabling panic) (Note: this overrides `ntp['tinker']['panic']` attribute)
+
+- `ntp['peer']['use_iburst']` (applies to NTP Servers ONLY)
+
+  - Boolean. Defaults to true. Enables iburst in peer declaration.
+
+- `ntp['peer']['use_burst']` (applies to NTP Servers ONLY)
+
+  - Boolean. Defaults to false. Enables burst in peer declaration.
+
+- `ntp['peer']['minpoll']` (applies to NTP Servers ONLY)
+
+  - Boolean. Defaults to 6 (ntp default). Specify the minimum poll intervals for NTP messages, in seconds to the power of two.
+
+- `ntp['peer']['maxpoll']` (applies to NTP Servers ONLY)
+
+  - Boolean. Defaults to 10 (ntp default). Specify the maximum poll intervals for NTP messages, in seconds to the power of two.
+
+- `ntp['server']['prefer']` (applies to NTP Servers and Clients)
+
+  - String. Defaults to emtpy string. The server from `ntp['servers']` to prefer getting the time from.
+
+- `ntp['server']['use_iburst']` (applies to NTP Servers and Clients)
+
+  - Boolean. Defaults to true. Enables iburst in server declaration.
+
+- `ntp['server']['use_burst']` (applies to NTP Servers and Clients)
+
+  - Boolean. Defaults to false. Enables burst in server declaration.
+
+- `ntp['server']['minpoll']` (applies to NTP Servers and Clients)
+
+  - Boolean. Defaults to 6 (ntp default). Specify the minimum poll intervals for NTP messages, in seconds to the power of two.
+
+- `ntp['server']['maxpoll']` (applies to NTP Servers and Clients)
+
+  - Boolean. Defaults to 10 (ntp default). Specify the maximum poll intervals for NTP messages, in seconds to the power of two.
+
+- `ntp['tinker']['allan']`
+
+  - Number. Defaults to 1500 (ntp default). Spedifies the Allan intercept, which is a parameter of the PLL/FLL clock discipline algorithm, in seconds.
+
+- `ntp['tinker']['dispersion']`
+
+  - Number. Defaults to 15 (ntp default). Specifies the dispersion increase rate in parts-per-million (PPM).
+
+- `ntp['tinker']['panic']`
+
+  - Number. Defaults to 1000 (ntp default). Spedifies the panic threshold in seconds. If set to zero, the panic sanity check is disabled and a clock offset of any value will be accepted.
+
+- `ntp['tinker']['step']`
+
+  - Number. Defaults to 0.128 (ntp default). Spedifies the step threshold in seconds. If set to zero, step adjustments will never occur. Note: The kernel time discipline is disabled if the step threshold is set to zero or greater than 0.5 s.
+
+- `ntp['tinker']['stepout']`
+
+  - Number. Defaults to 900 (ntp default). Specifies the stepout threshold in seconds. If set to zero, popcorn spikes will not be suppressed.
+
+- `ntp['localhost']['noquery']` (applies to NTP Servers and Clients)
+
+  - Boolean. Defaults to false. Set to true if using ntp < 4.2.8 or any unpatched ntp version to mitigate CVE-2014-9293 / CVE-2014-9294 / CVE-2014-9295
+
+- `ntp['orphan']['enabled']`
+
+  - Boolean, enables orphan mode if set to true
+
+- `ntp['orphan']['stratum']`
+
+  - Number. Defaults to 5, recommended value for stratum is 2 more than the worst-case externally-reachable source of time
+
+### Automatically Set Attributes
+
+These attributes are set based on platform / system information provided by Ohai
+
+- `ntp['packages']`
+
+  - Array, the packages to install
+  - Default, ntp for everything, ntpdate depending on platform. Not applicable for
+  - Windows nodes
+
+- `ntp['service']`
+
+  - String, the service to act on
+  - Default, ntp, NTP, or ntpd, depending on platform
+
+- `ntp['varlibdir']`
+
+  - String, the path to /var/lib files such as the driftfile.
+  - Default, platform-specific location. Not applicable for Windows nodes
+
+- `ntp['driftfile']`
+
+  - String, the path to the frequency file.
+  - Default, platform-specific location.
+
+- `ntp['conffile']`
+
+  - String, the path to the ntp configuration file.
+  - Default, platform-specific location.
+
+- `ntp['statsdir']`
+
+  - String, the directory path for files created by the statistics facility.
+  - Default, platform-specific location. Not applicable for Windows nodes
+
+- `ntp['conf_owner'] and ntp['conf_group']`
+
+  - String, the owner and group of the sysconf directory files, such as /etc/ntp.conf.
+  - Default, platform-specific root:root or root:wheel.
+
+- `ntp['var_owner'] and ntp['var_group']`
+
+  - String, the owner and group of the /var/lib directory files, such as /var/lib/ntp.
+  - Default, platform-specific ntp:ntp or root:wheel. Not applicable for Windows nodes
+
+- `ntp['leapfile']`
+
+  - String, the path to the ntp leapfile.
+  - Default, /etc/ntp.leapseconds.
+
+- `ntp['package_url']`
+
+  - String, the URL to the the Meinberg NTPd client installation package.
+  - Default, Meinberg site download URL
+  - Windows platform only
+
+- `ntp['vs_runtime_url']`
+
+  - String, the URL to the the Visual Studio C++ 2008 runtime libraries that are required for the Meinberg NTP client.
+  - Default, Microsoft site download URL
+  - Windows platform only
+
+- `ntp['vs_runtime_productname']`
+
+  - String, the installation name of the Visual Studio C++ Runtimes file.
+  - Default, "Microsoft Visual C++ 2008 Redistributable - x86 9.0.21022"
+  - Windows platform only
+
+- `ntp['sync_hw_clock']`
+
+  - Boolean, determines if the ntpdate command is issued to sync the hardware clock
+  - Default, false
+  - Not applicable for Windows nodes
+
+- `ntp['apparmor_enabled']`
+
+  - Boolean, enables configuration of apparmor if set to true
+  - Defaults to false and will make no provisions for apparmor.
+  - If a platform has apparmor enabled (currently Ubuntu) default will become true.
+
+- `ntp['use_cmos']`
+
+  - Boolean, uses a high stratum undisciplined clock for machines with real CMOS clock.
+  - Defaults to true unless a platform appears to be virtualized according to Ohai.
+
+## Usage
+
+### default recipe
+
+Set up the ntp attributes in a role. For example in a base.rb role applied to all nodes:
+
+```ruby
+name 'base'
+description 'Role applied to all systems'
+default_attributes(
+  'ntp' => {
+    'servers' => ['time0.int.example.org', 'time1.int.example.org']
+  }
+)
+```
+
+Then in an ntpserver.rb role that is applied to NTP servers (e.g., time.int.example.org):
+
+```ruby
+name 'ntp_server'
+description 'Role applied to the system that should be an NTP server.'
+default_attributes(
+  'ntp' => {
+    'servers'      => ['0.pool.ntp.org', '1.pool.ntp.org'],
+    'peers'        => ['time0.int.example.org', 'time1.int.example.org'],
+    'restrictions' => ['10.0.0.0 mask 255.0.0.0 nomodify notrap']
+  }
+)
+```
+
+The timeX.int.example.org used in these roles should be the names or IP addresses of internal NTP servers. Then simply add ntp, or `ntp::default` to your run_list to apply the ntp daemon's configuration.
+
+### windows_client recipe
+
+Windows only. Apply on a Windows host to install the Meinberg NTPd client.
+
+### mac_os_x_client recipe
+
+Mac OS X only. Apply on a Mac OS X host to configure NTP.
+
+## License & Authors
+
+- Author:: Joshua Timberman ([joshua@chef.io](mailto:joshua@chef.io))
+- Contributor:: Eric G. Wolfe ([wolfe21@marshall.edu](mailto:wolfe21@marshall.edu))
+- Contributor:: Fletcher Nichol ([fletcher@nichol.ca](mailto:fletcher@nichol.ca))
+- Contributor:: Tim Smith ([tsmith@chef.io](mailto:tsmith@chef.io))
+- Contributor:: Charles Johnson ([charles@chef.io](mailto:charles@chef.io))
+- Contributor:: Brad Knowles ([bknowles@momentumsi.com](mailto:bknowles@momentumsi.com))
+
+```text
+Copyright 2009-2016, Chef Software, Inc.
+Copyright 2012, Eric G. Wolfe
+Copyright 2012, Fletcher Nichol
+Copyright 2012, Webtrends, Inc.
+Copyright 2013, Limelight Networks, Inc.
+Copyright 2013, Brad Knowles
+Copyright 2013, Brad Beam
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+```
diff --git a/cookbooks/ntp-3.4.0/attributes/default.rb b/cookbooks/ntp-3.4.0/attributes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..671a9742221a9bd9ce2eb27188868d3bedcee411
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/attributes/default.rb
@@ -0,0 +1,130 @@
+#
+# Cookbook:: ntp
+# Attributes:: default
+#
+# Author:: Joshua Timberman (<joshua@chef.io>)
+# Author:: Tim Smith (<tsmith@chef.io>)
+# Author:: Charles Johnson (<charles@chef.io>)
+#
+# Copyright:: 2009-2017, Chef Software, Inc.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+# default attributes for all platforms
+default['ntp']['servers'] = [] # The default recipe sets a list of common NTP servers (COOK-1170)
+default['ntp']['peers'] = []
+default['ntp']['restrictions'] = []
+default['ntp']['tinker'] = { 'panic' => 0 }
+
+# set `restrict default` for IPv4 and IPv6
+default['ntp']['restrict_default'] = 'kod notrap nomodify nopeer noquery'
+
+# internal attributes
+default['ntp']['packages'] = %w(ntp)
+default['ntp']['service'] = 'ntpd'
+default['ntp']['varlibdir'] = '/var/lib/ntp'
+default['ntp']['driftfile'] = "#{node['ntp']['varlibdir']}/ntp.drift"
+default['ntp']['logfile'] = nil
+default['ntp']['conffile'] = '/etc/ntp.conf'
+default['ntp']['statsdir'] = '/var/log/ntpstats/'
+default['ntp']['conf_owner'] = 'root'
+default['ntp']['conf_group'] = 'root'
+default['ntp']['var_owner'] = 'ntp'
+default['ntp']['var_group'] = 'ntp'
+default['ntp']['leapfile'] = '/etc/ntp.leapseconds'
+default['ntp']['sync_clock'] = false
+default['ntp']['sync_hw_clock'] = false
+default['ntp']['listen'] = nil
+default['ntp']['listen_network'] = nil
+default['ntp']['ignore'] = nil
+default['ntp']['apparmor_enabled'] = false
+default['ntp']['monitor'] = false
+default['ntp']['statistics'] = true
+default['ntp']['conf_restart_immediate'] = false
+default['ntp']['keys'] = nil
+default['ntp']['trustedkey'] = nil
+default['ntp']['requestkey'] = nil
+
+# See http://www.vmware.com/vmtn/resources/238 p. 23 for explanation
+default['ntp']['disable_tinker_panic_on_virtualization_guest'] = true
+
+default['ntp']['peer']['key'] = nil
+default['ntp']['peer']['use_iburst'] = true
+default['ntp']['peer']['use_burst'] = false
+default['ntp']['peer']['minpoll'] = 6
+default['ntp']['peer']['maxpoll'] = 10
+
+default['ntp']['server']['prefer'] = ''
+default['ntp']['server']['use_iburst'] = true
+default['ntp']['server']['use_burst'] = false
+default['ntp']['server']['minpoll'] = 6
+default['ntp']['server']['maxpoll'] = 10
+
+default['ntp']['tinker']['allan'] = 1500
+default['ntp']['tinker']['dispersion'] = 15
+default['ntp']['tinker']['panic'] = 1000
+default['ntp']['tinker']['step'] = 0.128
+default['ntp']['tinker']['stepout'] = 900
+
+default['ntp']['orphan']['enabled'] = false
+default['ntp']['orphan']['stratum'] = 5 # ntp recommends 2 more than the worst-case externally-reachable source of time
+
+# Set to true if using ntp < 4.2.8 or any unpatched ntp version to mitigate CVE-2014-9293 / CVE-2014-9294 / CVE-2014-9295
+default['ntp']['localhost']['noquery'] = false
+
+# overrides on a platform-by-platform basis
+case node['platform_family']
+when 'debian'
+  default['ntp']['service'] = 'ntp'
+  default['ntp']['apparmor_enabled'] = true if File.exist? '/etc/init.d/apparmor'
+when 'rhel', 'fedora'
+  default['ntp']['packages'] = %w(ntp ntpdate) if node['platform_version'].to_i >= 7
+when 'windows'
+  default['ntp']['service'] = 'NTP'
+  default['ntp']['driftfile'] = 'C:\\NTP\\ntp.drift'
+  default['ntp']['conffile'] = 'C:\\NTP\\etc\\ntp.conf'
+  default['ntp']['conf_owner'] = 'Administrators'
+  default['ntp']['conf_group'] = 'Administrators'
+  default['ntp']['package_url'] = 'https://www.meinbergglobal.com/download/ntp/windows/ntp-4.2.8p5-win32-setup.exe'
+  default['ntp']['statistics'] = false
+when 'freebsd'
+  default['ntp']['varlibdir'] = '/var/db'
+  default['ntp']['driftfile'] = "#{node['ntp']['varlibdir']}/ntpd.drift"
+  default['ntp']['statsdir'] = "#{node['ntp']['varlibdir']}/ntpstats"
+  default['ntp']['conf_group'] = 'wheel'
+  default['ntp']['var_owner'] = 'root'
+  default['ntp']['var_group'] = 'wheel'
+when 'gentoo'
+  default['ntp']['leapfile'] = "#{node['ntp']['varlibdir']}/ntp.leapseconds"
+when 'solaris2'
+  default['ntp']['service'] = 'ntp'
+  default['ntp']['varlibdir'] = '/var/ntp'
+  default['ntp']['conffile'] = '/etc/inet/ntp.conf'
+  default['ntp']['statsdir'] = "#{node['ntp']['varlibdir']}/ntpstats/"
+  default['ntp']['conf_owner'] = 'root'
+  default['ntp']['conf_group'] = 'root'
+  default['ntp']['var_owner'] = 'root'
+  default['ntp']['var_group'] = 'sys'
+  default['ntp']['leapfile'] = '/etc/inet/ntp.leap'
+when 'pld'
+  default['ntp']['packages'] = %w(ntpd)
+  default['ntp']['conffile'] = '/etc/ntp/ntp.conf'
+  default['ntp']['leapfile'] = '/etc/ntp/ntp.leapseconds'
+  default['ntp']['driftfile'] = "#{node['ntp']['varlibdir']}/drift"
+  default['ntp']['var_owner'] = 'root'
+end
+
+unless node['platform'] == 'windows'
+  default['ntp']['use_cmos'] = !node['virtualization'] || node['virtualization']['role'] != 'guest' ? true : false
+end
diff --git a/cookbooks/ntp-3.4.0/files/default/ntp.ini b/cookbooks/ntp-3.4.0/files/default/ntp.ini
new file mode 100644
index 0000000000000000000000000000000000000000..11498b461704ad62a5968134031aaa4a2f3ce893
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/files/default/ntp.ini
@@ -0,0 +1,23 @@
+[Installer]
+InstallDir=C:\NTP
+UpgradeMode=Reinstall
+Logfile=C:\NTP\install.log
+Silent=yes
+
+[Components]
+InstallDocs=yes
+InstallTools=yes
+InstallOpenSSL=yes
+CreateStartMenuEntries=yes
+
+[Service]
+ModifyFirewall=yes
+ServiceAccount=@SYSTEM
+DisableOthers=yes
+AllowBigInitialTimestep=yes
+EnableMMTimer=yes
+AutoStart=yes
+StartAfterInstallation=yes
+
+[Configuration]
+UseConfigFile=C:\NTP\ntp.conf
diff --git a/cookbooks/ntp-3.4.0/files/default/ntp.leapseconds b/cookbooks/ntp-3.4.0/files/default/ntp.leapseconds
new file mode 100644
index 0000000000000000000000000000000000000000..22fa785751053fbc9e26c4587f51d06667af0a82
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/files/default/ntp.leapseconds
@@ -0,0 +1,250 @@
+#
+#	In the following text, the symbol '#' introduces
+#	a comment, which continues from that symbol until
+#	the end of the line. A plain comment line has a
+#	whitespace character following the comment indicator.
+#	There are also special comment lines defined below.
+#	A special comment will always have a non-whitespace
+#	character in column 2.
+#
+#	A blank line should be ignored.
+#
+#	The following table shows the corrections that must
+#	be applied to compute International Atomic Time (TAI)
+#	from the Coordinated Universal Time (UTC) values that
+#	are transmitted by almost all time services.
+#
+#	The first column shows an epoch as a number of seconds
+#	since 1 January 1900, 00:00:00 (1900.0 is also used to
+#	indicate the same epoch.) Both of these time stamp formats
+#	ignore the complexities of the time scales that were
+#	used before the current definition of UTC at the start
+#	of 1972. (See note 3 below.)
+#	The second column shows the number of seconds that
+#	must be added to UTC to compute TAI for any timestamp
+#	at or after that epoch. The value on each line is
+#	valid from the indicated initial instant until the
+#	epoch given on the next one or indefinitely into the
+#	future if there is no next line.
+#	(The comment on each line shows the representation of
+#	the corresponding initial epoch in the usual
+#	day-month-year format. The epoch always begins at
+#	00:00:00 UTC on the indicated day. See Note 5 below.)
+#
+#	Important notes:
+#
+#	1. Coordinated Universal Time (UTC) is often referred to
+#	as Greenwich Mean Time (GMT). The GMT time scale is no
+#	longer used, and the use of GMT to designate UTC is
+#	discouraged.
+#
+#	2. The UTC time scale is realized by many national
+#	laboratories and timing centers. Each laboratory
+#	identifies its realization with its name: Thus
+#	UTC(NIST), UTC(USNO), etc. The differences among
+#	these different realizations are typically on the
+#	order of a few nanoseconds (i.e., 0.000 000 00x s)
+#	and can be ignored for many purposes. These differences
+#	are tabulated in Circular T, which is published monthly
+#	by the International Bureau of Weights and Measures
+#	(BIPM). See www.bipm.org for more information.
+#
+#	3. The current definition of the relationship between UTC
+#	and TAI dates from 1 January 1972. A number of different
+#	time scales were in use before that epoch, and it can be
+#	quite difficult to compute precise timestamps and time
+#	intervals in those "prehistoric" days. For more information,
+#	consult:
+#
+#		The Explanatory Supplement to the Astronomical
+#		Ephemeris.
+#	or
+#		Terry Quinn, "The BIPM and the Accurate Measurement
+#		of Time," Proc. of the IEEE, Vol. 79, pp. 894-905,
+#		July, 1991.
+#
+#	4. The decision to insert a leap second into UTC is currently
+#	the responsibility of the International Earth Rotation and
+#	Reference Systems Service. (The name was changed from the
+#	International Earth Rotation Service, but the acronym IERS
+#	is still used.)
+#
+#	Leap seconds are announced by the IERS in its Bulletin C.
+#
+#	See www.iers.org for more details.
+#
+#	Every national laboratory and timing center uses the
+#	data from the BIPM and the IERS to construct UTC(lab),
+#	their local realization of UTC.
+#
+#	Although the definition also includes the possibility
+#	of dropping seconds ("negative" leap seconds), this has
+#	never been done and is unlikely to be necessary in the
+#	foreseeable future.
+#
+#	5. If your system keeps time as the number of seconds since
+#	some epoch (e.g., NTP timestamps), then the algorithm for
+#	assigning a UTC time stamp to an event that happens during a positive
+#	leap second is not well defined. The official name of that leap
+#	second is 23:59:60, but there is no way of representing that time
+#	in these systems.
+#	Many systems of this type effectively stop the system clock for
+#	one second during the leap second and use a time that is equivalent
+#	to 23:59:59 UTC twice. For these systems, the corresponding TAI
+#	timestamp would be obtained by advancing to the next entry in the
+#	following table when the time equivalent to 23:59:59 UTC
+#	is used for the second time. Thus the leap second which
+#	occurred on 30 June 1972 at 23:59:59 UTC would have TAI
+#	timestamps computed as follows:
+#
+#	...
+#	30 June 1972 23:59:59 (2287785599, first time):	TAI= UTC + 10 seconds
+#	30 June 1972 23:59:60 (2287785599,second time):	TAI= UTC + 11 seconds
+#	1  July 1972 00:00:00 (2287785600)		TAI= UTC + 11 seconds
+#	...
+#
+#	If your system realizes the leap second by repeating 00:00:00 UTC twice
+#	(this is possible but not usual), then the advance to the next entry
+#	in the table must occur the second time that a time equivalent to
+#	00:00:00 UTC is used. Thus, using the same example as above:
+#
+#	...
+#       30 June 1972 23:59:59 (2287785599):		TAI= UTC + 10 seconds
+#       30 June 1972 23:59:60 (2287785600, first time):	TAI= UTC + 10 seconds
+#       1  July 1972 00:00:00 (2287785600,second time):	TAI= UTC + 11 seconds
+#	...
+#
+#	in both cases the use of timestamps based on TAI produces a smooth
+#	time scale with no discontinuity in the time interval. However,
+#	although the long-term behavior of the time scale is correct in both
+#	methods, the second method is technically not correct because it adds
+#	the extra second to the wrong day.
+#
+#	This complexity would not be needed for negative leap seconds (if they
+#	are ever used). The UTC time would skip 23:59:59 and advance from
+#	23:59:58 to 00:00:00 in that case. The TAI offset would decrease by
+#	1 second at the same instant. This is a much easier situation to deal
+#	with, since the difficulty of unambiguously representing the epoch
+#	during the leap second does not arise.
+#
+#	Some systems implement leap seconds by amortizing the leap second
+#	over the last few minutes of the day. The frequency of the local
+#	clock is decreased (or increased) to realize the positive (or
+#	negative) leap second. This method removes the time step described
+#	above. Although the long-term behavior of the time scale is correct
+#	in this case, this method introduces an error during the adjustment
+#	period both in time and in frequency with respect to the official
+#	definition of UTC.
+#
+#	Questions or comments to:
+#		Judah Levine
+#		Time and Frequency Division
+#		NIST
+#		Boulder, Colorado
+#		Judah.Levine@nist.gov
+#
+#	Last Update of leap second values:   8 July 2016
+#
+#	The following line shows this last update date in NTP timestamp
+#	format. This is the date on which the most recent change to
+#	the leap second data was added to the file. This line can
+#	be identified by the unique pair of characters in the first two
+#	columns as shown below.
+#
+#$	 3676924800
+#
+#	The NTP timestamps are in units of seconds since the NTP epoch,
+#	which is 1 January 1900, 00:00:00. The Modified Julian Day number
+#	corresponding to the NTP time stamp, X, can be computed as
+#
+#	X/86400 + 15020
+#
+#	where the first term converts seconds to days and the second
+#	term adds the MJD corresponding to the time origin defined above.
+#	The integer portion of the result is the integer MJD for that
+#	day, and any remainder is the time of day, expressed as the
+#	fraction of the day since 0 hours UTC. The conversion from day
+#	fraction to seconds or to hours, minutes, and seconds may involve
+#	rounding or truncation, depending on the method used in the
+#	computation.
+#
+#	The data in this file will be updated periodically as new leap
+#	seconds are announced. In addition to being entered on the line
+#	above, the update time (in NTP format) will be added to the basic
+#	file name leap-seconds to form the name leap-seconds.<NTP TIME>.
+#	In addition, the generic name leap-seconds.list will always point to
+#	the most recent version of the file.
+#
+#	This update procedure will be performed only when a new leap second
+#	is announced.
+#
+#	The following entry specifies the expiration date of the data
+#	in this file in units of seconds since the origin at the instant
+#	1 January 1900, 00:00:00. This expiration date will be changed
+#	at least twice per year whether or not a new leap second is
+#	announced. These semi-annual changes will be made no later
+#	than 1 June and 1 December of each year to indicate what
+#	action (if any) is to be taken on 30 June and 31 December,
+#	respectively. (These are the customary effective dates for new
+#	leap seconds.) This expiration date will be identified by a
+#	unique pair of characters in columns 1 and 2 as shown below.
+#	In the unlikely event that a leap second is announced with an
+#	effective date other than 30 June or 31 December, then this
+#	file will be edited to include that leap second as soon as it is
+#	announced or at least one month before the effective date
+#	(whichever is later).
+#	If an announcement by the IERS specifies that no leap second is
+#	scheduled, then only the expiration date of the file will
+#	be advanced to show that the information in the file is still
+#	current -- the update time stamp, the data and the name of the file
+#	will not change.
+#
+#	Updated through IERS Bulletin C52
+#	File expires on:  28 June 2017
+#
+#@	3707596800
+#
+2272060800	10	# 1 Jan 1972
+2287785600	11	# 1 Jul 1972
+2303683200	12	# 1 Jan 1973
+2335219200	13	# 1 Jan 1974
+2366755200	14	# 1 Jan 1975
+2398291200	15	# 1 Jan 1976
+2429913600	16	# 1 Jan 1977
+2461449600	17	# 1 Jan 1978
+2492985600	18	# 1 Jan 1979
+2524521600	19	# 1 Jan 1980
+2571782400	20	# 1 Jul 1981
+2603318400	21	# 1 Jul 1982
+2634854400	22	# 1 Jul 1983
+2698012800	23	# 1 Jul 1985
+2776982400	24	# 1 Jan 1988
+2840140800	25	# 1 Jan 1990
+2871676800	26	# 1 Jan 1991
+2918937600	27	# 1 Jul 1992
+2950473600	28	# 1 Jul 1993
+2982009600	29	# 1 Jul 1994
+3029443200	30	# 1 Jan 1996
+3076704000	31	# 1 Jul 1997
+3124137600	32	# 1 Jan 1999
+3345062400	33	# 1 Jan 2006
+3439756800	34	# 1 Jan 2009
+3550089600	35	# 1 Jul 2012
+3644697600	36	# 1 Jul 2015
+3692217600	37	# 1 Jan 2017
+#
+#	the following special comment contains the
+#	hash value of the data in this file computed
+#	use the secure hash algorithm as specified
+#	by FIPS 180-1. See the files in ~/pub/sha for
+#	the details of how this hash value is
+#	computed. Note that the hash computation
+#	ignores comments and whitespace characters
+#	in data lines. It includes the NTP values
+#	of both the last modification time and the
+#	expiration time of the file, but not the
+#	white space on those lines.
+#	the hash line is also ignored in the
+#	computation.
+#
+#h	dacf2c42 2c4765d6 3c797af8 2cf630eb 699c8c67
diff --git a/cookbooks/ntp-3.4.0/files/default/usr.sbin.ntpd.apparmor b/cookbooks/ntp-3.4.0/files/default/usr.sbin.ntpd.apparmor
new file mode 100644
index 0000000000000000000000000000000000000000..7dfbeb0ce0d296bce5c48b172c3e2fc148c4159f
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/files/default/usr.sbin.ntpd.apparmor
@@ -0,0 +1,88 @@
+# vim:syntax=apparmor
+#
+# Maintained by Chef
+#
+# Updated for Ubuntu by: Jamie Strandboge <jamie@canonical.com>
+# ------------------------------------------------------------------
+#
+#    Copyright (C) 2002-2005 Novell/SUSE
+#    Copyright (C) 2009-2012 Canonical Ltd.
+#
+#    This program is free software; you can redistribute it and/or
+#    modify it under the terms of version 2 of the GNU General Public
+#    License published by the Free Software Foundation.
+#
+# ------------------------------------------------------------------
+
+#include <tunables/global>
+#include <tunables/ntpd>
+/usr/sbin/ntpd {
+  #include <abstractions/base>
+  #include <abstractions/nameservice>
+  #include <abstractions/user-tmp>
+
+  capability ipc_lock,
+  capability net_bind_service,
+  capability setgid,
+  capability setuid,
+  capability sys_chroot,
+  capability sys_resource,
+  capability sys_time,
+  capability sys_nice,
+
+  network inet dgram,
+  network inet6 dgram,
+  network inet stream,
+  network inet6 stream,
+
+  @{PROC}/net/if_inet6 r,
+  @{PROC}/*/net/if_inet6 r,
+  @{NTPD_DEVICE} rw,
+
+  /{,s}bin/      r,
+  /usr/{,s}bin/  r,
+  /usr/local/{,s}bin/  r,
+  /usr/sbin/ntpd rmix,
+
+  /opt/chef/embedded/bin/ r,
+
+  /etc/ntp.conf r,
+  /etc/ntp.conf.dhcp r,
+  /etc/ntpd.conf r,
+  /etc/ntpd.conf.tmp r,
+  /var/lib/ntp/ntp.conf.dhcp r,
+
+  /etc/ntp.leapseconds r,
+
+  /etc/ntp.keys r,
+  /etc/ntp/** r,
+
+  /etc/ntp.drift rwl,
+  /etc/ntp.drift.TEMP rwl,
+  /etc/ntp/drift* rwl,
+  /var/lib/ntp/*drift rw,
+  /var/lib/ntp/*drift.TEMP rw,
+
+  /var/log/ntp w,
+  /var/log/ntp.log w,
+  /var/log/ntpd w,
+  /var/log/ntpstats/clockstats* rwl,
+  /var/log/ntpstats/loopstats*  rwl,
+  /var/log/ntpstats/peerstats*  rwl,
+  /var/log/ntpstats/rawstats*   rwl,
+  /var/log/ntpstats/sysstats*   rwl,
+
+  /{,var/}run/ntpd.pid w,
+
+  # samba4 ntp signing socket
+  /{,var/}run/samba/ntp_signd/socket rw,
+
+  # For use with clocks that report via shared memory (e.g. gpsd),
+  # you may need to give ntpd access to all of shared memory, though
+  # this can be considered dangerous. See https://launchpad.net/bugs/722815
+  # for details. To enable, add this to local/usr.sbin.ntpd:
+  #     capability ipc_owner,
+
+  # Site-specific additions and overrides. See local/README for details.
+  #include <local/usr.sbin.ntpd>
+}
diff --git a/cookbooks/ntp-3.4.0/libraries/ntp_helper.rb b/cookbooks/ntp-3.4.0/libraries/ntp_helper.rb
new file mode 100644
index 0000000000000000000000000000000000000000..8560994856907e40bb43d2751c44d6d78bc25be4
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/libraries/ntp_helper.rb
@@ -0,0 +1,49 @@
+#
+# Author:: Julian C. Dunn (<jdunn@chef.io>)
+# Cookbook:: ntp
+# Library:: helper
+#
+# Copyright:: 2014-2017, Chef Software, Inc.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+require 'chef/mixin/shell_out'
+
+module Opscode
+  module Ntp
+    # Helper methods for ntp
+    module Helper
+      include Chef::Mixin::ShellOut
+
+      def ntpd_supports_native_leapfiles
+        ntpd_version = determine_ntpd_version
+        if ntpd_version
+          ntpd_version =~ /ntpd.*(\d+\.\d+\.\d+)/
+          # Abuse of Gem::Requirement, but it works
+          Gem::Requirement.new('>= 4.2.6').satisfied_by?(Gem::Version.new(Regexp.last_match(1)))
+        else
+          false
+        end
+      end
+
+      private
+
+      def determine_ntpd_version
+        cmd = shell_out!('ntpd --version 2>&1')
+        cmd.stdout.strip
+      rescue Errno::ENOENT, Mixlib::ShellOut::ShellCommandFailed
+        nil
+      end
+    end
+  end
+end
diff --git a/cookbooks/ntp-3.4.0/metadata.json b/cookbooks/ntp-3.4.0/metadata.json
new file mode 100644
index 0000000000000000000000000000000000000000..533cb49f828a51415d9b62ebcd22f67006007b70
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/metadata.json
@@ -0,0 +1 @@
+{"name":"ntp","version":"3.4.1","description":"Installs and configures ntp as a client or server","long_description":"# NTP Cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/ntp.svg?branch=master)](http://travis-ci.org/chef-cookbooks/ntp) [![Cookbook Version](https://img.shields.io/cookbook/v/ntp.svg)](https://supermarket.chef.io/cookbooks/ntp)\n\nInstalls and configures ntp. On Windows systems it uses the Meinberg port of the standard NTPd client to Windows.\n\n## Requirements\n\n### Platforms\n\n- Debian-family Linux Distributions\n- RedHat-family Linux Distributions\n- Fedora\n- Gentoo Linux\n- openSUSE\n- FreeBSD\n- Windows 2008 R2+\n- Mac OS X 10.11+\n\n### Chef\n\n- Chef 12.1+\n\n### Cookbooks\n\n- none\n\n## Attributes\n\n### Recommended tunables\n\n- `ntp['servers']` - (applies to NTP Servers and Clients)\n\n  - Array, should be a list of upstream NTP servers that will be considered authoritative by the local NTP daemon. The local NTP daemon will act as a client, adjusting local time to match time data retrieved from the upstream NTP servers.\n\n  The NTP protocol works best with at least 4 servers. The ntp daemon will disregard any server after the 10th listed, but will continue monitoring all listed servers. For more information, see [Upstream Server Time Quantity](http://support.ntp.org/bin/view/Support/SelectingOffsiteNTPServers#Section_5.3.3.) at [support.ntp.org](http://support.ntp.org).\n\n- `ntp['peers']` - (applies to NTP Servers ONLY)\n\n  - Array, should be a list of local NTP peers. For more information, see [Designing Your NTP Network](http://support.ntp.org/bin/view/Support/DesigningYourNTPNetwork) at [support.ntp.org](http://support.ntp.org).\n\n- `ntp['restrictions']` - (applies to NTP Servers only)\n\n  - Array, should be a list of restrict lines to define access to NTP clients on your LAN.\n\n- `ntp['sync_clock']` (applies to NTP Servers and Clients)\n\n  - Boolean. Defaults to false. Forces the ntp daemon to be halted, an ntp -q command to be issued, and the ntp daemon to be restarted again on every Chef-client run. Will have no effect if drift is over 1000 seconds.\n\n- `ntp['sync_hw_clock']` (applies to NTP Servers and Clients)\n\n  - Boolean. Defaults to false. On *nix-based systems, forces the 'hwclock --systohc' command to be issued on every Chef-client run. This will sync the hardware clock to the system clock.\n  - Not available on Windows.\n\n- `ntp['restrict_default']`\n\n  - String. Defaults to 'kod notrap nomodify nopeer noquery'. Set to 'ignore' to [further lock down access](http://support.ntp.org/bin/view/Support/AccessRestrictions#Section_6.5.1.1.2.).\n\n- `ntp[\"listen_network\"]` / `ntp[\"listen\"]`\n\n  - String, optional attribute. Default is for NTP to listen on all addresses.\n  - `ntp[\"listen_network\"]` should be set to 'primary' to listen on the node's primary IP address as determined by ohai, or set to a CIDR (eg: '192.168.4.0/24') to listen on the last node address on that CIDR.\n  - `ntp[\"listen\"]` can be set to a specific address (eg: '192.168.4.10') instead of `ntp[\"listen_network\"]` to force listening on a specific address.\n  - If both `ntp[\"listen\"]` and `ntp[\"listen_network\"]` are set then `ntp[\"listen\"]` will always win.\n\n- `ntp[\"ignore\"]`\n\n  - Array, interface names to ignore from listening. Can be used to disable listening wildcard interfaces (eg: ['wildcard', '::1']), can be combined with `ntp[\"listen\"]`\n\n- `ntp[\"statistics\"]`\n\n  - Boolean. Default to true. Enable/disable statistics data logging into `ntp['statsdir']`.\n  - Not available on Windows.\n\n- `ntp['conf_restart_immediate']`\n\n  - Boolean. Defaults to false. Restarts NTP service immediately after a config update if true. Otherwise it is a delayed restart.\n\n- `ntp['peer']['disable_tinker_panic_on_virtualization_guest']` (applies to virtualized hosts only)\n\n  - Boolean. Defaults to true. Sets tinker panic to 0\\. NTP default it 1000\\. (See <http://www.vmware.com/vmtn/resources/238> p. 23 for explanation on disabling panic) (Note: this overrides `ntp['tinker']['panic']` attribute)\n\n- `ntp['peer']['use_iburst']` (applies to NTP Servers ONLY)\n\n  - Boolean. Defaults to true. Enables iburst in peer declaration.\n\n- `ntp['peer']['use_burst']` (applies to NTP Servers ONLY)\n\n  - Boolean. Defaults to false. Enables burst in peer declaration.\n\n- `ntp['peer']['minpoll']` (applies to NTP Servers ONLY)\n\n  - Boolean. Defaults to 6 (ntp default). Specify the minimum poll intervals for NTP messages, in seconds to the power of two.\n\n- `ntp['peer']['maxpoll']` (applies to NTP Servers ONLY)\n\n  - Boolean. Defaults to 10 (ntp default). Specify the maximum poll intervals for NTP messages, in seconds to the power of two.\n\n- `ntp['server']['prefer']` (applies to NTP Servers and Clients)\n\n  - String. Defaults to emtpy string. The server from `ntp['servers']` to prefer getting the time from.\n\n- `ntp['server']['use_iburst']` (applies to NTP Servers and Clients)\n\n  - Boolean. Defaults to true. Enables iburst in server declaration.\n\n- `ntp['server']['use_burst']` (applies to NTP Servers and Clients)\n\n  - Boolean. Defaults to false. Enables burst in server declaration.\n\n- `ntp['server']['minpoll']` (applies to NTP Servers and Clients)\n\n  - Boolean. Defaults to 6 (ntp default). Specify the minimum poll intervals for NTP messages, in seconds to the power of two.\n\n- `ntp['server']['maxpoll']` (applies to NTP Servers and Clients)\n\n  - Boolean. Defaults to 10 (ntp default). Specify the maximum poll intervals for NTP messages, in seconds to the power of two.\n\n- `ntp['tinker']['allan']`\n\n  - Number. Defaults to 1500 (ntp default). Spedifies the Allan intercept, which is a parameter of the PLL/FLL clock discipline algorithm, in seconds.\n\n- `ntp['tinker']['dispersion']`\n\n  - Number. Defaults to 15 (ntp default). Specifies the dispersion increase rate in parts-per-million (PPM).\n\n- `ntp['tinker']['panic']`\n\n  - Number. Defaults to 1000 (ntp default). Spedifies the panic threshold in seconds. If set to zero, the panic sanity check is disabled and a clock offset of any value will be accepted.\n\n- `ntp['tinker']['step']`\n\n  - Number. Defaults to 0.128 (ntp default). Spedifies the step threshold in seconds. If set to zero, step adjustments will never occur. Note: The kernel time discipline is disabled if the step threshold is set to zero or greater than 0.5 s.\n\n- `ntp['tinker']['stepout']`\n\n  - Number. Defaults to 900 (ntp default). Specifies the stepout threshold in seconds. If set to zero, popcorn spikes will not be suppressed.\n\n- `ntp['localhost']['noquery']` (applies to NTP Servers and Clients)\n\n  - Boolean. Defaults to false. Set to true if using ntp < 4.2.8 or any unpatched ntp version to mitigate CVE-2014-9293 / CVE-2014-9294 / CVE-2014-9295\n\n- `ntp['orphan']['enabled']`\n\n  - Boolean, enables orphan mode if set to true\n\n- `ntp['orphan']['stratum']`\n\n  - Number. Defaults to 5, recommended value for stratum is 2 more than the worst-case externally-reachable source of time\n\n### Automatically Set Attributes\n\nThese attributes are set based on platform / system information provided by Ohai\n\n- `ntp['packages']`\n\n  - Array, the packages to install\n  - Default, ntp for everything, ntpdate depending on platform. Not applicable for\n  - Windows nodes\n\n- `ntp['service']`\n\n  - String, the service to act on\n  - Default, ntp, NTP, or ntpd, depending on platform\n\n- `ntp['varlibdir']`\n\n  - String, the path to /var/lib files such as the driftfile.\n  - Default, platform-specific location. Not applicable for Windows nodes\n\n- `ntp['driftfile']`\n\n  - String, the path to the frequency file.\n  - Default, platform-specific location.\n\n- `ntp['conffile']`\n\n  - String, the path to the ntp configuration file.\n  - Default, platform-specific location.\n\n- `ntp['statsdir']`\n\n  - String, the directory path for files created by the statistics facility.\n  - Default, platform-specific location. Not applicable for Windows nodes\n\n- `ntp['conf_owner'] and ntp['conf_group']`\n\n  - String, the owner and group of the sysconf directory files, such as /etc/ntp.conf.\n  - Default, platform-specific root:root or root:wheel.\n\n- `ntp['var_owner'] and ntp['var_group']`\n\n  - String, the owner and group of the /var/lib directory files, such as /var/lib/ntp.\n  - Default, platform-specific ntp:ntp or root:wheel. Not applicable for Windows nodes\n\n- `ntp['leapfile']`\n\n  - String, the path to the ntp leapfile.\n  - Default, /etc/ntp.leapseconds.\n\n- `ntp['package_url']`\n\n  - String, the URL to the the Meinberg NTPd client installation package.\n  - Default, Meinberg site download URL\n  - Windows platform only\n\n- `ntp['vs_runtime_url']`\n\n  - String, the URL to the the Visual Studio C++ 2008 runtime libraries that are required for the Meinberg NTP client.\n  - Default, Microsoft site download URL\n  - Windows platform only\n\n- `ntp['vs_runtime_productname']`\n\n  - String, the installation name of the Visual Studio C++ Runtimes file.\n  - Default, \"Microsoft Visual C++ 2008 Redistributable - x86 9.0.21022\"\n  - Windows platform only\n\n- `ntp['sync_hw_clock']`\n\n  - Boolean, determines if the ntpdate command is issued to sync the hardware clock\n  - Default, false\n  - Not applicable for Windows nodes\n\n- `ntp['apparmor_enabled']`\n\n  - Boolean, enables configuration of apparmor if set to true\n  - Defaults to false and will make no provisions for apparmor.\n  - If a platform has apparmor enabled (currently Ubuntu) default will become true.\n\n- `ntp['use_cmos']`\n\n  - Boolean, uses a high stratum undisciplined clock for machines with real CMOS clock.\n  - Defaults to true unless a platform appears to be virtualized according to Ohai.\n\n## Usage\n\n### default recipe\n\nSet up the ntp attributes in a role. For example in a base.rb role applied to all nodes:\n\n```ruby\nname 'base'\ndescription 'Role applied to all systems'\ndefault_attributes(\n  'ntp' => {\n    'servers' => ['time0.int.example.org', 'time1.int.example.org']\n  }\n)\n```\n\nThen in an ntpserver.rb role that is applied to NTP servers (e.g., time.int.example.org):\n\n```ruby\nname 'ntp_server'\ndescription 'Role applied to the system that should be an NTP server.'\ndefault_attributes(\n  'ntp' => {\n    'servers'      => ['0.pool.ntp.org', '1.pool.ntp.org'],\n    'peers'        => ['time0.int.example.org', 'time1.int.example.org'],\n    'restrictions' => ['10.0.0.0 mask 255.0.0.0 nomodify notrap']\n  }\n)\n```\n\nThe timeX.int.example.org used in these roles should be the names or IP addresses of internal NTP servers. Then simply add ntp, or `ntp::default` to your run_list to apply the ntp daemon's configuration.\n\n### windows_client recipe\n\nWindows only. Apply on a Windows host to install the Meinberg NTPd client.\n\n### mac_os_x_client recipe\n\nMac OS X only. Apply on a Mac OS X host to configure NTP.\n\n## License & Authors\n\n- Author:: Joshua Timberman ([joshua@chef.io](mailto:joshua@chef.io))\n- Contributor:: Eric G. Wolfe ([wolfe21@marshall.edu](mailto:wolfe21@marshall.edu))\n- Contributor:: Fletcher Nichol ([fletcher@nichol.ca](mailto:fletcher@nichol.ca))\n- Contributor:: Tim Smith ([tsmith@chef.io](mailto:tsmith@chef.io))\n- Contributor:: Charles Johnson ([charles@chef.io](mailto:charles@chef.io))\n- Contributor:: Brad Knowles ([bknowles@momentumsi.com](mailto:bknowles@momentumsi.com))\n\n```text\nCopyright 2009-2016, Chef Software, Inc.\nCopyright 2012, Eric G. Wolfe\nCopyright 2012, Fletcher Nichol\nCopyright 2012, Webtrends, Inc.\nCopyright 2013, Limelight Networks, Inc.\nCopyright 2013, Brad Knowles\nCopyright 2013, Brad Beam\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache-2.0","platforms":{"amazon":">= 0.0.0","centos":">= 0.0.0","debian":">= 0.0.0","fedora":">= 0.0.0","freebsd":">= 0.0.0","gentoo":">= 0.0.0","redhat":">= 0.0.0","scientific":">= 0.0.0","solaris2":">= 0.0.0","oracle":">= 0.0.0","ubuntu":">= 0.0.0","windows":">= 0.0.0","mac_os_x":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"ntp":"Installs and configures ntp either as a server or client"},"source_url":"https://github.com/chef-cookbooks/ntp","issues_url":"https://github.com/chef-cookbooks/ntp/issues","chef_version":[[">= 12.1"]],"ohai_version":[]}
diff --git a/cookbooks/ntp-3.4.0/recipes/apparmor.rb b/cookbooks/ntp-3.4.0/recipes/apparmor.rb
new file mode 100644
index 0000000000000000000000000000000000000000..e5b19dba52e9ecdc1af3f5bbb476611dea8b929c
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/recipes/apparmor.rb
@@ -0,0 +1,30 @@
+#
+# Cookbook:: ntp
+# Recipe:: apparmor
+# Author:: Scott Lampert (<scott@lampert.org>)
+#
+# Copyright:: 2013-2017, Scott Lampert
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+service 'apparmor' do
+  action :nothing
+end
+
+cookbook_file '/etc/apparmor.d/usr.sbin.ntpd' do
+  source 'usr.sbin.ntpd.apparmor'
+  owner 'root'
+  group 'root'
+  mode '0644'
+  notifies :restart, 'service[apparmor]'
+end
diff --git a/cookbooks/ntp-3.4.0/recipes/default.rb b/cookbooks/ntp-3.4.0/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7b61f7558178babb7249d1d3eb3e72e1b5eb6a0f
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/recipes/default.rb
@@ -0,0 +1,129 @@
+#
+# Cookbook:: ntp
+# Recipe:: default
+# Author:: Joshua Timberman (<joshua@chef.io>)
+# Author:: Tim Smith (<tsmith@chef.io>)
+#
+# Copyright:: 2009-2017, Chef Software, Inc.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+::Chef::Resource.send(:include, Opscode::Ntp::Helper)
+
+case node['platform_family']
+when 'windows'
+  include_recipe 'ntp::windows_client'
+when 'mac_os_x'
+  include_recipe 'ntp::mac_os_x_client'
+  # On OS X we only support simple client config and nothing more
+  return 0
+else
+
+  node['ntp']['packages'].each do |ntppkg|
+    package ntppkg
+  end
+
+  package 'Remove ntpdate' do
+    package_name 'ntpdate'
+    action :remove
+    only_if { node['platform_family'] == 'debian' && node['platform_version'].to_i >= 16 }
+  end
+
+  [node['ntp']['varlibdir'], node['ntp']['statsdir']].each do |ntpdir|
+    directory ntpdir do
+      owner node['ntp']['var_owner']
+      group node['ntp']['var_group']
+      mode '0755'
+    end
+  end
+
+  cookbook_file node['ntp']['leapfile'] do
+    owner node['ntp']['conf_owner']
+    group node['ntp']['conf_group']
+    mode '0644'
+    source 'ntp.leapseconds'
+    notifies :restart, "service[#{node['ntp']['service']}]"
+  end
+
+  include_recipe 'ntp::apparmor' if node['ntp']['apparmor_enabled']
+end
+
+if node['ntp']['servers'].empty?
+  node.default['ntp']['servers'] = [
+    '0.pool.ntp.org',
+    '1.pool.ntp.org',
+    '2.pool.ntp.org',
+    '3.pool.ntp.org',
+  ]
+  Chef::Log.debug 'No NTP servers specified, using default ntp.org server pools'
+end
+
+if node['ntp']['listen'].nil? && !node['ntp']['listen_network'].nil?
+  if node['ntp']['listen_network'] == 'primary'
+    node.normal['ntp']['listen'] = node['ipaddress']
+  else
+    require 'ipaddr'
+    net = IPAddr.new(node['ntp']['listen_network'])
+
+    node['network']['interfaces'].each do |_iface, addrs|
+      addrs['addresses'].each do |ip, params|
+        addr = IPAddr.new(ip) if params['family'].eql?('inet') || params['family'].eql?('inet6')
+        node.normal['ntp']['listen'] = addr if net.include?(addr)
+      end
+    end
+  end
+end
+
+node.default['ntp']['tinker']['panic'] = 0 if node['virtualization'] &&
+                                              node['virtualization']['role'] == 'guest' &&
+                                              node['ntp']['disable_tinker_panic_on_virtualization_guest']
+
+template node['ntp']['conffile'] do
+  source 'ntp.conf.erb'
+  owner node['ntp']['conf_owner']
+  group node['ntp']['conf_group']
+  mode '0644'
+  notifies :restart, "service[#{node['ntp']['service']}]" unless node['ntp']['conf_restart_immediate']
+  notifies :restart, "service[#{node['ntp']['service']}]", :immediately if node['ntp']['conf_restart_immediate']
+  variables(
+    lazy { { ntpd_supports_native_leapfiles: ntpd_supports_native_leapfiles } }
+  )
+end
+
+if node['ntp']['sync_clock'] && !platform_family?('windows')
+  execute "Stop #{node['ntp']['service']} in preparation for ntpdate" do
+    command node['platform_family'] == 'freebsd' ? '/usr/bin/true' : '/bin/true'
+    action :run
+    notifies :stop, "service[#{node['ntp']['service']}]", :immediately
+  end
+
+  execute 'Force sync system clock with ntp server' do
+    command node['platform_family'] == 'freebsd' ? 'ntpd -q' : "ntpd -q -u #{node['ntp']['var_owner']}"
+    action :run
+    notifies :start, "service[#{node['ntp']['service']}]"
+  end
+end
+
+execute 'Force sync hardware clock with system clock' do
+  command 'hwclock --systohc'
+  action :run
+  only_if { node['ntp']['sync_hw_clock'] && !(platform_family?('windows') || platform_family?('freebsd')) }
+end
+
+service node['ntp']['service'] do
+  supports status: true, restart: true
+  action [:enable, :start]
+  timeout 120 if platform_family?('windows')
+  retries 3
+  retry_delay 5
+end
diff --git a/cookbooks/ntp-3.4.0/recipes/mac_os_x_client.rb b/cookbooks/ntp-3.4.0/recipes/mac_os_x_client.rb
new file mode 100644
index 0000000000000000000000000000000000000000..a08dc050460b48ee6b22ce450cdc06804ed97c61
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/recipes/mac_os_x_client.rb
@@ -0,0 +1,32 @@
+#
+# Cookbook:: ntp
+# Recipe:: mac_os_x_client
+# Author:: Antek S. Baranski (<antek.baranski@gmail.com>)
+#
+# Copyright:: 2016-2017, Roblox, Inc
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Do not continue if trying to run the Mac OS X recipe on non-OS X platform
+return 'The ntp::mac_os_x_client recipe only supports Mac OS X' unless platform_family?('mac_os_x')
+
+# Mac OS X 10.11+ does not allow for many NTP settings
+execute 'systemsetup -setnetworktimeserver' do
+  command "systemsetup -setnetworktimeserver #{node['ntp']['servers'][0]}"
+  not_if "systemsetup -getnetworktimeserver | grep -F #{node['ntp']['servers'][0]}"
+end
+
+execute 'systemsetup -setusingnetworktime' do
+  command 'systemsetup -setusingnetworktime on'
+  not_if 'systemsetup -getusingnetworktime | grep On'
+end
diff --git a/cookbooks/ntp-3.4.0/recipes/windows_client.rb b/cookbooks/ntp-3.4.0/recipes/windows_client.rb
new file mode 100644
index 0000000000000000000000000000000000000000..98a72131bf313a9bdf20c0366d6d8731c2f72f30
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/recipes/windows_client.rb
@@ -0,0 +1,45 @@
+#
+# Cookbook:: ntp
+# Recipe:: windows_client
+# Author:: Tim Smith (<tsmith@chef.io>)
+#
+# Copyright:: 2012-2017, Webtrends, Inc
+# Copyright:: 2013-2017, Limelight Networks, Inc
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Do not continue if trying to run the Windows recipe on non-Windows platform
+return 'The ntp::windows_client recipe only supports Windows' unless platform_family?('windows')
+
+directory 'C:/NTP/etc' do
+  inherits true
+  action :create
+  recursive true
+end
+
+cookbook_file 'C:/NTP/ntp.ini' do
+  source 'ntp.ini'
+  inherits true
+  action :create
+end
+
+unless File.exist?('C:/NTP/bin/ntpd.exe')
+  remote_file "#{Chef::Config[:file_cache_path]}/ntpd.exe" do
+    source node['ntp']['package_url']
+  end
+
+  execute 'ntpd_install' do
+    command "#{Chef::Config[:file_cache_path]}\\ntpd.exe /USEFILE=C:\\NTP\\ntp.ini"
+    returns [0, 2]
+  end
+end
diff --git a/cookbooks/ntp-3.4.0/templates/default/ntp.conf.erb b/cookbooks/ntp-3.4.0/templates/default/ntp.conf.erb
new file mode 100644
index 0000000000000000000000000000000000000000..23b6d2b25884b8103d620d21a627d60e885b5c45
--- /dev/null
+++ b/cookbooks/ntp-3.4.0/templates/default/ntp.conf.erb
@@ -0,0 +1,102 @@
+# Auto-generated by Chef.
+# Local modifications will be overwritten.
+#
+<%# Windows OHAI does not support determining if a host is a guest %>
+<% unless node['platform'] == 'windows' -%>
+<%-%>tinker <%= node['ntp']['tinker'].flatten.join(' ') %>
+<%-%>statsdir <%= node['ntp']['statsdir'] %>
+<%   if @ntpd_supports_native_leapfiles -%>
+<%-%>leapfile <%= node['ntp']['leapfile'] %>
+<%   end -%>
+<% end -%>
+driftfile <%= node['ntp']['driftfile'] %>
+<% if node['ntp']['logfile'] -%>
+<%-%>logfile <%= node['ntp']['logfile'] %>
+<% end -%>
+
+<%# Enable logs only if statistics option is defined %>
+<% if node['ntp']['statistics'] -%>
+<%-%>statistics loopstats peerstats clockstats
+<%-%>filegen loopstats file loopstats type day enable
+<%-%>filegen peerstats file peerstats type day enable
+<%-%>filegen clockstats file clockstats type day enable
+<% end -%>
+
+<%# If the ignore attribute is set on the node, then apply it %>
+<% unless node['ntp']['ignore'].nil? -%>
+<%   Array(node['ntp']['ignore']).each do |ignore| -%>
+interface ignore <%= ignore %>
+<%   end -%>
+<% end -%>
+
+<%# If the listen attribute is set on the node, then apply it %>
+<% unless node['ntp']['listen'].nil? -%>
+<%   Array(node['ntp']['listen']).each do |listen| -%>
+interface listen <%= listen %>
+<%   end -%>
+<%#  The service must always listen on localhost %>
+<%   unless Array(node['ntp']['listen']).include? '127.0.0.1' -%>
+interface listen 127.0.0.1
+<%   end -%>
+<% end -%>
+
+<% if node['ntp']['monitor'] -%>
+enable monitor
+<% else -%>
+disable monitor
+<% end -%>
+
+<%# If ntp.peers is not empty %>
+<% unless node['ntp']['peers'].empty? -%>
+<%   node['ntp']['peers'].sort.each do |ntppeer| -%>
+<%#    Don't peer with ourself %>
+<%     if node['ipaddress'] != ntppeer && node['fqdn'] != ntppeer -%>
+<%    -%>peer <%= ntppeer %><% if key = node['ntp']['peer']['key'] -%> key <%= key %><% end -%><% if node['ntp']['peer']['use_iburst'] -%> iburst<% end -%><% if node['ntp']['peer']['use_burst'] -%> burst<% end -%> minpoll <%= node['ntp']['peer']['minpoll'] %> maxpoll <%= node['ntp']['peer']['maxpoll'] %>
+<%    -%>restrict <%= ntppeer %> nomodify
+<%     end -%>
+<%   end -%>
+<% end -%>
+
+<%# Whether this is a client or server, we want upstream servers. %>
+<%# We should guard the servers array against deep merge. %>
+<%# This should keep authoritative local servers from being included twice. %>
+<% ( node['ntp']['servers'] - node['ntp']['peers'] ).sort.each do |ntpserver| -%>
+<%#   Loop through defined servers, but don't try to upstream ourself %>
+<%   if node['ipaddress'] != ntpserver and node['fqdn'] != ntpserver -%>
+<%  -%>server <%= ntpserver %><% if node['ntp']['server']['use_iburst'] -%> iburst<% end -%><% if node['ntp']['server']['use_burst'] -%> burst<% end -%> minpoll <%= node['ntp']['server']['minpoll'] %> maxpoll <%= node['ntp']['server']['maxpoll'] %><% if node['ntp']['server']['prefer'] == ntpserver -%> prefer<% end -%>
+<%  -%>restrict <%= ntpserver %> nomodify notrap noquery
+<%   end -%>
+<% end -%>
+
+restrict default <%= node['ntp']['restrict_default'] %>
+restrict 127.0.0.1<%if node['ntp']['localhost']['noquery'] -%> noquery<% end -%>
+restrict -6 default <%= node['ntp']['restrict_default'] %>
+restrict -6 ::1<%if node['ntp']['localhost']['noquery'] -%> noquery<% end -%>
+
+<%# If this is a server with additional LAN restriction lines, put them here %>
+<% unless node['ntp']['restrictions'].empty? -%>
+<%   node['ntp']['restrictions'].each do |restriction| -%>
+<%  -%>restrict <%= restriction %>
+<%   end -%>
+<% end -%>
+
+<%# It is best practice to use a high stratum undisciplined clock, if you have a real CMOS clock %>
+<%# Except cases where you have a low stratum server, or a virtualized system without a real CMOS clock %>
+<% if node['ntp']['use_cmos'] -%>
+<%  -%>server  127.127.1.0 # local clock
+<%  -%>fudge   127.127.1.0 stratum 10
+<% end -%>
+
+<% if node['ntp']['orphan']['enabled'] -%>
+tos orphan <%= node['ntp']['orphan']['stratum'] %>
+<% end -%>
+
+<% if node['ntp']['keys'] -%>
+keys <%= node['ntp']['keys'] %>
+<% end -%>
+<% if node['ntp']['trustedkey'] -%>
+trustedkey <%= node['ntp']['trustedkey'] %>
+<% end -%>
+<% if node['ntp']['requestkey'] -%>
+requestkey <%= node['ntp']['requestkey'] %>
+<% end -%>
diff --git a/cookbooks/pwx_cookbook b/cookbooks/pwx_cookbook
new file mode 160000
index 0000000000000000000000000000000000000000..4696c330161d5bf8eec4de2b51629b32c12054ba
--- /dev/null
+++ b/cookbooks/pwx_cookbook
@@ -0,0 +1 @@
+Subproject commit 4696c330161d5bf8eec4de2b51629b32c12054ba
diff --git a/cookbooks/starter/attributes/default.rb b/cookbooks/starter/attributes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..2fdd479b2572e5f965e7e15d14e3883973d10eac
--- /dev/null
+++ b/cookbooks/starter/attributes/default.rb
@@ -0,0 +1,7 @@
+# This is a Chef attributes file. It can be used to specify default and override
+# attributes to be applied to nodes that run this cookbook.
+
+# Set a default name
+default["starter_name"] = "Sam Doe"
+
+# For further information, see the Chef documentation (https://docs.chef.io/essentials_cookbook_attribute_files.html).
diff --git a/cookbooks/starter/files/default/sample.txt b/cookbooks/starter/files/default/sample.txt
new file mode 100644
index 0000000000000000000000000000000000000000..e65e28558e069d866b9823f389697e38ed3cd489
--- /dev/null
+++ b/cookbooks/starter/files/default/sample.txt
@@ -0,0 +1,16 @@
+This is a Chef cookbook file. It is used to copy content verbatim on to a server.
+For dynamic or otherwise data-driven content, please see sample.erb in the templates/
+directory for an example of using a template resource.
+
+You can create a cookbook_file resource in a recipe file:
+
+    cookbook_file "/etc/myserver.conf" do
+      source "sample.txt"
+      owner "root"
+      group "root"
+      mode "644"
+    end
+
+A cookbook_file resource can be used with any context, including binary files.
+
+For further information, see the Chef documentation (https://docs.chef.io/essentials_cookbook_files.html).
diff --git a/cookbooks/starter/metadata.rb b/cookbooks/starter/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..764cfac19531eca9c94014d8305ea74e807297dc
--- /dev/null
+++ b/cookbooks/starter/metadata.rb
@@ -0,0 +1,5 @@
+name 'starter'
+description 'A basic starter cookbook'
+version '1.0.0'
+maintainer 'Awesome Company, Inc.'
+maintainer_email 'you@example.com'
diff --git a/cookbooks/starter/recipes/default.rb b/cookbooks/starter/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..52e162d89d02411426f4492597b9e63771781bd0
--- /dev/null
+++ b/cookbooks/starter/recipes/default.rb
@@ -0,0 +1,8 @@
+# This is a Chef recipe file. It can be used to specify resources which will
+# apply configuration to a server.
+
+log "Welcome to Chef, #{node["starter_name"]}!" do
+  level :info
+end
+
+# For more information, see the documentation: https://docs.chef.io/essentials_cookbook_recipes.html
diff --git a/cookbooks/starter/templates/default/sample.erb b/cookbooks/starter/templates/default/sample.erb
new file mode 100644
index 0000000000000000000000000000000000000000..6cf782eb573e73884979391b2e02a6cdd8141a67
--- /dev/null
+++ b/cookbooks/starter/templates/default/sample.erb
@@ -0,0 +1,27 @@
+This is a sample Chef template. It uses the Erubis templating language to insert
+dynamic content into text files. For surely static content, including non-text
+files, please see sample.txt in the files/ directory for an example of using a
+cookbook_file resource.
+
+You can create a template resource in a recipe file:
+
+    template "/etc/myserver.conf" do
+      source "sample.erb"
+      owner "root"
+      group "root"
+      mode "644"
+      variables :hostname => node["fqdn"], :servers => ["alpha", "bravo", "charlie"]
+    end
+
+You can insert the value of a template variable by using "<%=  %>", such as:
+
+    name = <%= @hostname %>
+
+You can also use Ruby loops and conditionals via "<%  %>", such as:
+
+    <% @servers.each do |name| %>
+    ServerAlias <%= name %>;
+    <% end %>
+
+For further information, see the Chef documentation (https://docs.chef.io/essentials_cookbook_templates.html)
+and the Erubis User Guide (http://www.kuwata-lab.com/erubis/users-guide.html).
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/.kitchen.yml b/cookbooks/template_samples/.delivery/build_cookbook/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..775a7d607753cf12625df4865c8da117189303de
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/.kitchen.yml
@@ -0,0 +1,21 @@
+---
+driver:
+  name: vagrant
+  synced_folders:
+    - [<%= File.join(ENV['PWD'], '..', '..')%>, '/tmp/repo-data']
+
+provisioner:
+  name: chef_zero
+  encrypted_data_bag_secret_key_path: 'secrets/fakey-mcfakerton'
+  data_bags_path: './data_bags'
+  product_name: chefdk
+
+platforms:
+  - name: ubuntu-16.04
+  - name: centos-7.3
+
+suites:
+  - name: default
+    run_list:
+      - recipe[test]
+    attributes:
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/Berksfile b/cookbooks/template_samples/.delivery/build_cookbook/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..61dab723b78f5f07a4a04767cca81aaf363fba45
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/Berksfile
@@ -0,0 +1,7 @@
+source 'https://supermarket.chef.io'
+
+metadata
+
+group :delivery do
+  cookbook 'test', path: './test/fixtures/cookbooks/test'
+end
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/LICENSE b/cookbooks/template_samples/.delivery/build_cookbook/LICENSE
new file mode 100644
index 0000000000000000000000000000000000000000..d31c097cd765797dae86c191c2ed6548bc4f8ea6
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/LICENSE
@@ -0,0 +1,3 @@
+Copyright 2017 The Authors
+
+All rights reserved, do not redistribute.
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/README.md b/cookbooks/template_samples/.delivery/build_cookbook/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..297af5a63e2feab2b6617f3576a3807bc8e240d1
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/README.md
@@ -0,0 +1,146 @@
+# build_cookbook
+
+A build cookbook for running the parent project through Chef Delivery
+
+This build cookbook should be customized to suit the needs of the parent project. Using this cookbook can be done outside of Chef Delivery, too. If the parent project is a Chef cookbook, we've detected that and "wrapped" [delivery-truck](https://github.com/chef-cookbooks/delivery-truck). That means it is a dependency, and each of its pipeline phase recipes is included in the appropriate phase recipes in this cookbook. If the parent project is not a cookbook, it's left as an exercise to the reader to customize the recipes as needed for each phase in the pipeline.
+
+## .delivery/config.json
+
+In the parent directory to this build_cookbook, the `config.json` can be modified as necessary. For example, phases can be skipped, publishing information can be added, and so on. Refer to customer support or the Chef Delivery documentation for assistance on what options are available for this configuration.
+
+## Test Kitchen - Local Verify Testing
+
+This cookbook also has a `.kitchen.yml` which can be used to create local build nodes with Test Kitchen to perform the verification phases, `unit`, `syntax`, and `lint`. When running `kitchen converge`, the instances will be set up like Chef Delivery "build nodes" with the [delivery_build cookbook](https://github.com/chef-cookbooks/delivery_build). The reason for this is to make sure that the same exact kind of nodes are used by this build cookbook are run on the local workstation as would run Delivery. It will run `delivery job verify PHASE` for the parent project.
+
+Modify the `.kitchen.yml` if necessary to change the platforms or other configuration to run the verify phases. After making changes in the parent project, `cd` into this directory (`.delivery/build_cookbook`), and run:
+
+```
+kitchen test
+```
+
+## Recipes
+
+Each of the recipes in this build_cookbook are run in the named phase during the Chef Delivery pipeline. The `unit`, `syntax`, and `lint` recipes are additionally run when using Test Kitchen for local testing as noted in the above section.
+
+## Making Changes - Cookbook Example
+
+When making changes in the parent project (that which lives in `../..` from this directory), or in the recipes in this build cookbook, there is a bespoke workflow for Chef Delivery. As an example, we'll discuss a Chef Cookbook as the parent.
+
+First, create a new branch for the changes.
+
+```
+git checkout -b testing-build-cookbook
+```
+
+Next, increment the version in the metadata.rb. This should be in the _parent_, not in this, the build_cookbook. If this is not done, the verify phase will fail.
+
+```
+% git diff
+<SNIP>
+-version '0.1.0'
++version '0.1.1'
+```
+
+The change we'll use for an example is to install the `zsh` package. Write a failing ChefSpec in the cookbook project's `spec/unit/recipes/default_spec.rb`.
+
+```ruby
+require 'spec_helper'
+
+describe 'godzilla::default' do
+  context 'When all attributes are default, on Ubuntu 16.04' do
+    let(:chef_run) do
+      runner = ChefSpec::ServerRunner.new(platform: 'ubuntu', version: '16.04')
+      runner.converge(described_recipe)
+    end
+
+    it 'installs zsh' do
+      expect(chef_run).to install_package('zsh')
+    end
+  end
+end
+```
+
+Commit the local changes as work in progress. The `delivery job` expects to use a clean git repository.
+
+```
+git add ../..
+git commit -m 'WIP: Testing changes'
+```
+
+From _this_ directory (`.delivery/build_cookbook`, relative to the parent cookbook project), run
+
+```
+cd .delivery/build_cookbook
+kitchen converge
+```
+
+This will take some time at first, because the VMs need to be created, Chef installed, the Delivery CLI installed, etc. Later runs will be faster until they are destroyed. It will also fail on the first VM, as expected, because we wrote the test first. Now edit the parent cookbook project's default recipe to install `zsh`.
+
+```
+cd ../../
+$EDITOR/recipes/default.rb
+```
+
+It should look like this:
+
+```
+package 'zsh'
+```
+
+Create another commit.
+
+```
+git add .
+git commit -m 'WIP: Install zsh in default recipe'
+```
+
+Now rerun kitchen from the build_cookbook.
+
+```
+cd .delivery/build_cookbook
+kitchen converge
+```
+
+This will take awhile because it will now pass on the first VM, and then create the second VM. We should have warned you this was a good time for a coffee break.
+
+```
+Recipe: test::default
+
+- execute HOME=/home/vagrant delivery job verify unit --server localhost --ent test --org kitchen
+  * execute[HOME=/home/vagrant delivery job verify lint --server localhost --ent test --org kitchen] action run
+    - execute HOME=/home/vagrant delivery job verify lint --server localhost --ent test --org kitchen
+
+    - execute HOME=/home/vagrant delivery job verify syntax --server localhost --ent test --org kitchen
+
+Running handlers:
+Running handlers complete
+Chef Client finished, 3/32 resources updated in 54.665445968 seconds
+Finished converging <default-centos-71> (1m26.83s).
+```
+
+Victory is ours! Our verify phase passed on the build nodes.
+
+We are ready to run this through our Delivery pipeline. Simply run `delivery review` on the local system from the parent project, and it will open a browser window up to the change we just added.
+
+```
+cd ../..
+delivery review
+```
+
+## FAQ
+
+### Why don't I just run rspec and foodcritic/rubocop on my local system?
+
+An objection to the Test Kitchen approach is that it is much faster to run the unit, lint, and syntax commands for the project on the local system. That is totally true, and also totally valid. Do that for the really fast feedback loop. However, the dance we do with Test Kitchen brings a much higher degree of confidence in the changes we're making, that everything will run on the build nodes in Chef Delivery. We strongly encourage this approach before actually pushing the changes to Delivery.
+
+### Why do I have to make a commit every time?
+
+When running `delivery job`, it expects to merge the commit for the changeset against the clean master branch. If we don't save our progress by making a commit, our local changes aren't run through `delivery job` in the Test Kitchen build instances. We can always perform an interactive rebase, and modify the original changeset message in Delivery with `delivery review --edit`. The latter won't modify the git commits, only the changeset in Delivery.
+
+### What do I do next?
+
+Make changes in the cookbook project as required for organizational goals and needs. Modify the `build_cookbook` as necessary for the pipeline phases that the cookbook should go through.
+
+### What if I get stuck?
+
+Contact Chef Support, or your Chef Customer Success team and they will help you get unstuck.
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/chefignore b/cookbooks/template_samples/.delivery/build_cookbook/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json b/cookbooks/template_samples/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
new file mode 100644
index 0000000000000000000000000000000000000000..af375ea862bf1f1dd7690ebd71e5c1cedc6d70ff
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
@@ -0,0 +1 @@
+{"id": "delivery_builder_keys"}
\ No newline at end of file
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/metadata.rb b/cookbooks/template_samples/.delivery/build_cookbook/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..d9b56212aaa865b11ac7fc206d6e986fb65d284d
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/metadata.rb
@@ -0,0 +1,8 @@
+name 'build_cookbook'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'all_rights'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+depends 'delivery-truck'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/recipes/default.rb b/cookbooks/template_samples/.delivery/build_cookbook/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b2746b56b1e55c70e2c97e0af0d57ee087d94e9a
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/recipes/default.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::default'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/recipes/deploy.rb b/cookbooks/template_samples/.delivery/build_cookbook/recipes/deploy.rb
new file mode 100644
index 0000000000000000000000000000000000000000..9a61010dcda0604510d6dcafc9bc6db2877f1d8c
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/recipes/deploy.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: deploy
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::deploy'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/recipes/functional.rb b/cookbooks/template_samples/.delivery/build_cookbook/recipes/functional.rb
new file mode 100644
index 0000000000000000000000000000000000000000..cae646df925c8c63d1c7c000314aff74c9923636
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/recipes/functional.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: functional
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::functional'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/recipes/lint.rb b/cookbooks/template_samples/.delivery/build_cookbook/recipes/lint.rb
new file mode 100644
index 0000000000000000000000000000000000000000..40aee0c5b4de883a34713d9ea8651228e7a429aa
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/recipes/lint.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: lint
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::lint'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/recipes/provision.rb b/cookbooks/template_samples/.delivery/build_cookbook/recipes/provision.rb
new file mode 100644
index 0000000000000000000000000000000000000000..57d0a78cea413ac381326cfb669b4a6754d4a0a8
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/recipes/provision.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: provision
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::provision'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/recipes/publish.rb b/cookbooks/template_samples/.delivery/build_cookbook/recipes/publish.rb
new file mode 100644
index 0000000000000000000000000000000000000000..ad890fd0ec92477b700e75c0a3c466522f38fc8c
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/recipes/publish.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: publish
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::publish'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/recipes/quality.rb b/cookbooks/template_samples/.delivery/build_cookbook/recipes/quality.rb
new file mode 100644
index 0000000000000000000000000000000000000000..f5d4d743afebf2f8557ff6f0e652e2e1cac54b10
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/recipes/quality.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: quality
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::quality'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/recipes/security.rb b/cookbooks/template_samples/.delivery/build_cookbook/recipes/security.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7d47af168dd97b5e4b696b2c0940c00ebd27395b
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/recipes/security.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: security
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::security'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/recipes/smoke.rb b/cookbooks/template_samples/.delivery/build_cookbook/recipes/smoke.rb
new file mode 100644
index 0000000000000000000000000000000000000000..2203cbd2f3812d553ec660d94a5d054debaa44bf
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/recipes/smoke.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: smoke
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::smoke'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/recipes/syntax.rb b/cookbooks/template_samples/.delivery/build_cookbook/recipes/syntax.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7147f96a26936d888ee82a9a5e6f8d1db266ed8d
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/recipes/syntax.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: syntax
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::syntax'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/recipes/unit.rb b/cookbooks/template_samples/.delivery/build_cookbook/recipes/unit.rb
new file mode 100644
index 0000000000000000000000000000000000000000..fa6d9ba4ecf28a65db1cb545cabdd114eb790239
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/recipes/unit.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: unit
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::unit'
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/secrets/fakey-mcfakerton b/cookbooks/template_samples/.delivery/build_cookbook/secrets/fakey-mcfakerton
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb b/cookbooks/template_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..17250391e21792b0418942941b4ef01d6ef41d78
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
@@ -0,0 +1,2 @@
+name 'test'
+version '0.1.0'
\ No newline at end of file
diff --git a/cookbooks/template_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb b/cookbooks/template_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..5675ce6b8dbbfca9dc4ba7c77e795185e8a3ba05
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
@@ -0,0 +1,8 @@
+%w(unit lint syntax).each do |phase|
+  # TODO: This works on Linux/Unix. Not Windows.
+  execute "HOME=/home/vagrant delivery job verify #{phase} --server localhost --ent test --org kitchen" do
+    cwd '/tmp/repo-data'
+    user 'vagrant'
+    environment('GIT_DISCOVERY_ACROSS_FILESYSTEM' => '1')
+  end
+end
diff --git a/cookbooks/template_samples/.delivery/config.json b/cookbooks/template_samples/.delivery/config.json
new file mode 100644
index 0000000000000000000000000000000000000000..6c0e69fc01572a56024e29f4d4cb59c84d0d9d34
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/config.json
@@ -0,0 +1,12 @@
+{
+  "version": "2",
+  "build_cookbook": {
+    "name": "build_cookbook",
+    "path": ".delivery/build_cookbook"
+  },
+  "skip_phases": [],
+  "job_dispatch": {
+    "version": "v2"
+  },
+  "dependencies": []
+}
diff --git a/cookbooks/template_samples/.delivery/project.toml b/cookbooks/template_samples/.delivery/project.toml
new file mode 100644
index 0000000000000000000000000000000000000000..c453234bc9b4b151cc57be8f613ad75c614dc762
--- /dev/null
+++ b/cookbooks/template_samples/.delivery/project.toml
@@ -0,0 +1,36 @@
+# Delivery Prototype for Local Phases Execution
+#
+# The purpose of this file is to prototype a new way to execute
+# phases locally on your workstation. The delivery-cli will read
+# this file and execute the command(s) that are configured for
+# each phase. You can customize them by just modifying the phase
+# key on this file.
+#
+# By default these phases are configured for Cookbook Workflow only
+#
+# As this is still a prototype we are not modifying the current
+# config.json file and it will continue working as usual.
+
+[local_phases]
+unit = "chef exec rspec spec/"
+lint = "chef exec cookstyle"
+# Foodcritic includes rules only appropriate for community cookbooks
+# uploaded to Supermarket. We turn off any rules tagged "supermarket"
+# by default. If you plan to share this cookbook you should remove
+# '-t ~supermarket' below to enable supermarket rules.
+syntax = "chef exec foodcritic . --exclude spec -f any -t ~supermarket"
+provision = "chef exec kitchen create"
+deploy = "chef exec kitchen converge"
+smoke = "chef exec kitchen verify"
+# The functional phase is optional, you can define it by uncommenting
+# the line below and running the command: `delivery local functional`
+# functional = ""
+cleanup = "chef exec kitchen destroy"
+
+# Remote project.toml file
+#
+# Specify a remote URI location for the `project.toml` file.
+# This is useful for teams that wish to centrally manage the behavior
+# of the `delivery local` command across many different projects.
+#
+# remote_file = "https://url/project.toml"
diff --git a/cookbooks/template_samples/.gitignore b/cookbooks/template_samples/.gitignore
new file mode 100644
index 0000000000000000000000000000000000000000..febee30092d697dc9b7c7a2f42bfd571fe9da25a
--- /dev/null
+++ b/cookbooks/template_samples/.gitignore
@@ -0,0 +1,21 @@
+.vagrant
+*~
+*#
+.#*
+\#*#
+.*.sw[a-z]
+*.un~
+
+# Bundler
+Gemfile.lock
+bin/*
+.bundle/*
+
+# test kitchen
+.kitchen/
+.kitchen.local.yml
+
+# Chef
+Berksfile.lock
+.zero-knife.rb
+Policyfile.lock.json
diff --git a/cookbooks/template_samples/.kitchen.yml b/cookbooks/template_samples/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..17384c07ab871ea1f0ba40131b9ba732dd66ab16
--- /dev/null
+++ b/cookbooks/template_samples/.kitchen.yml
@@ -0,0 +1,25 @@
+---
+driver:
+  name: vagrant
+
+provisioner:
+  name: chef_zero
+  # You may wish to disable always updating cookbooks in CI or other testing environments.
+  # For example:
+  #   always_update_cookbooks: <%= !ENV['CI'] %>
+  always_update_cookbooks: true
+
+verifier:
+  name: inspec
+
+platforms:
+  - name: centos-7.3
+
+suites:
+  - name: template
+    run_list:
+      - recipe[template_samples::default]
+    verifier:
+      inspec_tests:
+        - test/smoke/default
+    attributes:
diff --git a/cookbooks/template_samples/Berksfile b/cookbooks/template_samples/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..34fea2166bafb6b6a62488907c532a9d4692d35e
--- /dev/null
+++ b/cookbooks/template_samples/Berksfile
@@ -0,0 +1,3 @@
+source 'https://supermarket.chef.io'
+
+metadata
diff --git a/cookbooks/template_samples/README.md b/cookbooks/template_samples/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..a8540a656f07833a9146956ab377fa2a249437a8
--- /dev/null
+++ b/cookbooks/template_samples/README.md
@@ -0,0 +1,4 @@
+# template_samples
+
+TODO: Enter the cookbook description here.
+
diff --git a/cookbooks/template_samples/attributes/default.rb b/cookbooks/template_samples/attributes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..a275d5a7cf20148dbeb3e26d5e26bc12971c6652
--- /dev/null
+++ b/cookbooks/template_samples/attributes/default.rb
@@ -0,0 +1,3 @@
+default['authorization']['sudo']['groups'] = %w(sysadmin wheel admin)
+default['authorization']['sudo']['users']  = %w(jerry greg)
+default['template_samples']['user'] = 'Ravindra Singh'
diff --git a/cookbooks/template_samples/chefignore b/cookbooks/template_samples/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/cookbooks/template_samples/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/cookbooks/template_samples/metadata.rb b/cookbooks/template_samples/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..ac718df38e56dc5c1203cd9ba6e6026c0cf57350
--- /dev/null
+++ b/cookbooks/template_samples/metadata.rb
@@ -0,0 +1,20 @@
+name 'template_samples'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'All Rights Reserved'
+description 'Installs/Configures template_samples'
+long_description 'Installs/Configures template_samples'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+# The `issues_url` points to the location where issues for this cookbook are
+# tracked.  A `View Issues` link will be displayed on this cookbook's page when
+# uploaded to a Supermarket.
+#
+# issues_url 'https://github.com/<insert_org_here>/template_samples/issues'
+
+# The `source_url` points to the development reposiory for this cookbook.  A
+# `View Source` link will be displayed on this cookbook's page when uploaded to
+# a Supermarket.
+#
+# source_url 'https://github.com/<insert_org_here>/template_samples'
diff --git a/cookbooks/template_samples/recipes/default.rb b/cookbooks/template_samples/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..efac7e48bc0dc887a5bf6ac661339d0e0a3f270d
--- /dev/null
+++ b/cookbooks/template_samples/recipes/default.rb
@@ -0,0 +1,25 @@
+#
+# Cookbook:: template_samples
+# Recipe:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+
+node.default["fqdn"] = "www.Chef-Training.devops"
+
+template '/tmp/vars' do
+  source 'vars.erb'
+  variables(
+    var1: node['template_samples']['user']
+  )
+end
+
+template '/tmp/sudoers' do
+  source 'sudoers.erb'
+  mode '0440'
+  owner 'root'
+  group 'root'
+  variables(
+    sudoers_groups: node['authorization']['sudo']['groups'],
+    sudoers_users: node['authorization']['sudo']['users']
+  )
+end
diff --git a/cookbooks/template_samples/spec/spec_helper.rb b/cookbooks/template_samples/spec/spec_helper.rb
new file mode 100644
index 0000000000000000000000000000000000000000..1dd5126bf629c317834b3c7bb35842981fc93233
--- /dev/null
+++ b/cookbooks/template_samples/spec/spec_helper.rb
@@ -0,0 +1,2 @@
+require 'chefspec'
+require 'chefspec/berkshelf'
diff --git a/cookbooks/template_samples/spec/unit/recipes/default_spec.rb b/cookbooks/template_samples/spec/unit/recipes/default_spec.rb
new file mode 100644
index 0000000000000000000000000000000000000000..636d0457433f38f5e84001850fcf5de8657372ad
--- /dev/null
+++ b/cookbooks/template_samples/spec/unit/recipes/default_spec.rb
@@ -0,0 +1,22 @@
+#
+# Cookbook:: template_samples
+# Spec:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+
+require 'spec_helper'
+
+describe 'template_samples::default' do
+  context 'When all attributes are default, on an Ubuntu 16.04' do
+    let(:chef_run) do
+      # for a complete list of available platforms and versions see:
+      # https://github.com/customink/fauxhai/blob/master/PLATFORMS.md
+      runner = ChefSpec::ServerRunner.new(platform: 'ubuntu', version: '16.04')
+      runner.converge(described_recipe)
+    end
+
+    it 'converges successfully' do
+      expect { chef_run }.to_not raise_error
+    end
+  end
+end
diff --git a/cookbooks/template_samples/templates/sudoers.erb b/cookbooks/template_samples/templates/sudoers.erb
new file mode 100644
index 0000000000000000000000000000000000000000..30459716dc91326367739e0219d22f2312222a3f
--- /dev/null
+++ b/cookbooks/template_samples/templates/sudoers.erb
@@ -0,0 +1,23 @@
+#
+# /etc/sudoers
+#
+# Generated by Chef for <%= node['fqdn'] %>
+#
+
+Defaults        !lecture,tty_tickets,!fqdn
+
+# User privilege specification
+root          ALL=(ALL) ALL
+
+<% @sudoers_users.each do |user| -%>
+<%= user %>   ALL=(ALL) <%= "NOPASSWD:" if @passwordless %>ALL
+<% end -%>
+
+# Members of the sysadmin group may gain root privileges
+%sysadmin     ALL=(ALL) <%= "NOPASSWD:" if @passwordless %>ALL
+
+<% @sudoers_groups.each do |group| -%>
+# Members of the group '<%= group %>' may gain root privileges
+%<%= group %> ALL=(ALL) <%= "NOPASSWD:" if @passwordless %>ALL
+<% end -%>
+
diff --git a/cookbooks/template_samples/templates/vars.erb b/cookbooks/template_samples/templates/vars.erb
new file mode 100644
index 0000000000000000000000000000000000000000..a4cb4ab625815d582239933670d23589050ab6ac
--- /dev/null
+++ b/cookbooks/template_samples/templates/vars.erb
@@ -0,0 +1,18 @@
+The hostname <%= node[:fqdn] %> is given by <%= @var1 %>
+
+<% if 1==1 -%>
+
+BEING A IF I AM WORKING FINE FOR <%= @var1 %>
+
+<% end -%>
+
+<% if 1==2 -%>
+
+BEING A IF I AM WORKING FINE FOR <%= @var1 %>
+
+<% else -%>
+
+OMG I FAILED BUT JUST WAIT FOR ME AGAIN I'LL BE BACK WITH <%= @var1 %>
+
+<% end -%>
+
diff --git a/cookbooks/template_samples/test/smoke/default/default_test.rb b/cookbooks/template_samples/test/smoke/default/default_test.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7fdcb8adfd59567466944caee7de864f368849e2
--- /dev/null
+++ b/cookbooks/template_samples/test/smoke/default/default_test.rb
@@ -0,0 +1,18 @@
+# # encoding: utf-8
+
+# Inspec test for recipe template_samples::default
+
+# The Inspec reference, with examples and extensive documentation, can be
+# found at http://inspec.io/docs/reference/resources/
+
+unless os.windows?
+  # This is an example test, replace with your own test.
+  describe user('root'), :skip do
+    it { should exist }
+  end
+end
+
+# This is an example test, replace it with your own test.
+describe port(80), :skip do
+  it { should_not be_listening }
+end
diff --git a/cookbooks/test b/cookbooks/test
new file mode 160000
index 0000000000000000000000000000000000000000..6e34edad78dfad4b110e1a52bb3dfca3f3d17f36
--- /dev/null
+++ b/cookbooks/test
@@ -0,0 +1 @@
+Subproject commit 6e34edad78dfad4b110e1a52bb3dfca3f3d17f36
diff --git a/cookbooks/website/.delivery/build_cookbook/.kitchen.yml b/cookbooks/website/.delivery/build_cookbook/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..775a7d607753cf12625df4865c8da117189303de
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/.kitchen.yml
@@ -0,0 +1,21 @@
+---
+driver:
+  name: vagrant
+  synced_folders:
+    - [<%= File.join(ENV['PWD'], '..', '..')%>, '/tmp/repo-data']
+
+provisioner:
+  name: chef_zero
+  encrypted_data_bag_secret_key_path: 'secrets/fakey-mcfakerton'
+  data_bags_path: './data_bags'
+  product_name: chefdk
+
+platforms:
+  - name: ubuntu-16.04
+  - name: centos-7.3
+
+suites:
+  - name: default
+    run_list:
+      - recipe[test]
+    attributes:
diff --git a/cookbooks/website/.delivery/build_cookbook/Berksfile b/cookbooks/website/.delivery/build_cookbook/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..61dab723b78f5f07a4a04767cca81aaf363fba45
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/Berksfile
@@ -0,0 +1,7 @@
+source 'https://supermarket.chef.io'
+
+metadata
+
+group :delivery do
+  cookbook 'test', path: './test/fixtures/cookbooks/test'
+end
diff --git a/cookbooks/website/.delivery/build_cookbook/LICENSE b/cookbooks/website/.delivery/build_cookbook/LICENSE
new file mode 100644
index 0000000000000000000000000000000000000000..d31c097cd765797dae86c191c2ed6548bc4f8ea6
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/LICENSE
@@ -0,0 +1,3 @@
+Copyright 2017 The Authors
+
+All rights reserved, do not redistribute.
diff --git a/cookbooks/website/.delivery/build_cookbook/README.md b/cookbooks/website/.delivery/build_cookbook/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..297af5a63e2feab2b6617f3576a3807bc8e240d1
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/README.md
@@ -0,0 +1,146 @@
+# build_cookbook
+
+A build cookbook for running the parent project through Chef Delivery
+
+This build cookbook should be customized to suit the needs of the parent project. Using this cookbook can be done outside of Chef Delivery, too. If the parent project is a Chef cookbook, we've detected that and "wrapped" [delivery-truck](https://github.com/chef-cookbooks/delivery-truck). That means it is a dependency, and each of its pipeline phase recipes is included in the appropriate phase recipes in this cookbook. If the parent project is not a cookbook, it's left as an exercise to the reader to customize the recipes as needed for each phase in the pipeline.
+
+## .delivery/config.json
+
+In the parent directory to this build_cookbook, the `config.json` can be modified as necessary. For example, phases can be skipped, publishing information can be added, and so on. Refer to customer support or the Chef Delivery documentation for assistance on what options are available for this configuration.
+
+## Test Kitchen - Local Verify Testing
+
+This cookbook also has a `.kitchen.yml` which can be used to create local build nodes with Test Kitchen to perform the verification phases, `unit`, `syntax`, and `lint`. When running `kitchen converge`, the instances will be set up like Chef Delivery "build nodes" with the [delivery_build cookbook](https://github.com/chef-cookbooks/delivery_build). The reason for this is to make sure that the same exact kind of nodes are used by this build cookbook are run on the local workstation as would run Delivery. It will run `delivery job verify PHASE` for the parent project.
+
+Modify the `.kitchen.yml` if necessary to change the platforms or other configuration to run the verify phases. After making changes in the parent project, `cd` into this directory (`.delivery/build_cookbook`), and run:
+
+```
+kitchen test
+```
+
+## Recipes
+
+Each of the recipes in this build_cookbook are run in the named phase during the Chef Delivery pipeline. The `unit`, `syntax`, and `lint` recipes are additionally run when using Test Kitchen for local testing as noted in the above section.
+
+## Making Changes - Cookbook Example
+
+When making changes in the parent project (that which lives in `../..` from this directory), or in the recipes in this build cookbook, there is a bespoke workflow for Chef Delivery. As an example, we'll discuss a Chef Cookbook as the parent.
+
+First, create a new branch for the changes.
+
+```
+git checkout -b testing-build-cookbook
+```
+
+Next, increment the version in the metadata.rb. This should be in the _parent_, not in this, the build_cookbook. If this is not done, the verify phase will fail.
+
+```
+% git diff
+<SNIP>
+-version '0.1.0'
++version '0.1.1'
+```
+
+The change we'll use for an example is to install the `zsh` package. Write a failing ChefSpec in the cookbook project's `spec/unit/recipes/default_spec.rb`.
+
+```ruby
+require 'spec_helper'
+
+describe 'godzilla::default' do
+  context 'When all attributes are default, on Ubuntu 16.04' do
+    let(:chef_run) do
+      runner = ChefSpec::ServerRunner.new(platform: 'ubuntu', version: '16.04')
+      runner.converge(described_recipe)
+    end
+
+    it 'installs zsh' do
+      expect(chef_run).to install_package('zsh')
+    end
+  end
+end
+```
+
+Commit the local changes as work in progress. The `delivery job` expects to use a clean git repository.
+
+```
+git add ../..
+git commit -m 'WIP: Testing changes'
+```
+
+From _this_ directory (`.delivery/build_cookbook`, relative to the parent cookbook project), run
+
+```
+cd .delivery/build_cookbook
+kitchen converge
+```
+
+This will take some time at first, because the VMs need to be created, Chef installed, the Delivery CLI installed, etc. Later runs will be faster until they are destroyed. It will also fail on the first VM, as expected, because we wrote the test first. Now edit the parent cookbook project's default recipe to install `zsh`.
+
+```
+cd ../../
+$EDITOR/recipes/default.rb
+```
+
+It should look like this:
+
+```
+package 'zsh'
+```
+
+Create another commit.
+
+```
+git add .
+git commit -m 'WIP: Install zsh in default recipe'
+```
+
+Now rerun kitchen from the build_cookbook.
+
+```
+cd .delivery/build_cookbook
+kitchen converge
+```
+
+This will take awhile because it will now pass on the first VM, and then create the second VM. We should have warned you this was a good time for a coffee break.
+
+```
+Recipe: test::default
+
+- execute HOME=/home/vagrant delivery job verify unit --server localhost --ent test --org kitchen
+  * execute[HOME=/home/vagrant delivery job verify lint --server localhost --ent test --org kitchen] action run
+    - execute HOME=/home/vagrant delivery job verify lint --server localhost --ent test --org kitchen
+
+    - execute HOME=/home/vagrant delivery job verify syntax --server localhost --ent test --org kitchen
+
+Running handlers:
+Running handlers complete
+Chef Client finished, 3/32 resources updated in 54.665445968 seconds
+Finished converging <default-centos-71> (1m26.83s).
+```
+
+Victory is ours! Our verify phase passed on the build nodes.
+
+We are ready to run this through our Delivery pipeline. Simply run `delivery review` on the local system from the parent project, and it will open a browser window up to the change we just added.
+
+```
+cd ../..
+delivery review
+```
+
+## FAQ
+
+### Why don't I just run rspec and foodcritic/rubocop on my local system?
+
+An objection to the Test Kitchen approach is that it is much faster to run the unit, lint, and syntax commands for the project on the local system. That is totally true, and also totally valid. Do that for the really fast feedback loop. However, the dance we do with Test Kitchen brings a much higher degree of confidence in the changes we're making, that everything will run on the build nodes in Chef Delivery. We strongly encourage this approach before actually pushing the changes to Delivery.
+
+### Why do I have to make a commit every time?
+
+When running `delivery job`, it expects to merge the commit for the changeset against the clean master branch. If we don't save our progress by making a commit, our local changes aren't run through `delivery job` in the Test Kitchen build instances. We can always perform an interactive rebase, and modify the original changeset message in Delivery with `delivery review --edit`. The latter won't modify the git commits, only the changeset in Delivery.
+
+### What do I do next?
+
+Make changes in the cookbook project as required for organizational goals and needs. Modify the `build_cookbook` as necessary for the pipeline phases that the cookbook should go through.
+
+### What if I get stuck?
+
+Contact Chef Support, or your Chef Customer Success team and they will help you get unstuck.
diff --git a/cookbooks/website/.delivery/build_cookbook/chefignore b/cookbooks/website/.delivery/build_cookbook/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/cookbooks/website/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json b/cookbooks/website/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
new file mode 100644
index 0000000000000000000000000000000000000000..af375ea862bf1f1dd7690ebd71e5c1cedc6d70ff
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/data_bags/keys/delivery_builder_keys.json
@@ -0,0 +1 @@
+{"id": "delivery_builder_keys"}
\ No newline at end of file
diff --git a/cookbooks/website/.delivery/build_cookbook/metadata.rb b/cookbooks/website/.delivery/build_cookbook/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..d9b56212aaa865b11ac7fc206d6e986fb65d284d
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/metadata.rb
@@ -0,0 +1,8 @@
+name 'build_cookbook'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'all_rights'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+depends 'delivery-truck'
diff --git a/cookbooks/website/.delivery/build_cookbook/recipes/default.rb b/cookbooks/website/.delivery/build_cookbook/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..b2746b56b1e55c70e2c97e0af0d57ee087d94e9a
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/recipes/default.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::default'
diff --git a/cookbooks/website/.delivery/build_cookbook/recipes/deploy.rb b/cookbooks/website/.delivery/build_cookbook/recipes/deploy.rb
new file mode 100644
index 0000000000000000000000000000000000000000..9a61010dcda0604510d6dcafc9bc6db2877f1d8c
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/recipes/deploy.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: deploy
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::deploy'
diff --git a/cookbooks/website/.delivery/build_cookbook/recipes/functional.rb b/cookbooks/website/.delivery/build_cookbook/recipes/functional.rb
new file mode 100644
index 0000000000000000000000000000000000000000..cae646df925c8c63d1c7c000314aff74c9923636
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/recipes/functional.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: functional
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::functional'
diff --git a/cookbooks/website/.delivery/build_cookbook/recipes/lint.rb b/cookbooks/website/.delivery/build_cookbook/recipes/lint.rb
new file mode 100644
index 0000000000000000000000000000000000000000..40aee0c5b4de883a34713d9ea8651228e7a429aa
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/recipes/lint.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: lint
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::lint'
diff --git a/cookbooks/website/.delivery/build_cookbook/recipes/provision.rb b/cookbooks/website/.delivery/build_cookbook/recipes/provision.rb
new file mode 100644
index 0000000000000000000000000000000000000000..57d0a78cea413ac381326cfb669b4a6754d4a0a8
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/recipes/provision.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: provision
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::provision'
diff --git a/cookbooks/website/.delivery/build_cookbook/recipes/publish.rb b/cookbooks/website/.delivery/build_cookbook/recipes/publish.rb
new file mode 100644
index 0000000000000000000000000000000000000000..ad890fd0ec92477b700e75c0a3c466522f38fc8c
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/recipes/publish.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: publish
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::publish'
diff --git a/cookbooks/website/.delivery/build_cookbook/recipes/quality.rb b/cookbooks/website/.delivery/build_cookbook/recipes/quality.rb
new file mode 100644
index 0000000000000000000000000000000000000000..f5d4d743afebf2f8557ff6f0e652e2e1cac54b10
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/recipes/quality.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: quality
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::quality'
diff --git a/cookbooks/website/.delivery/build_cookbook/recipes/security.rb b/cookbooks/website/.delivery/build_cookbook/recipes/security.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7d47af168dd97b5e4b696b2c0940c00ebd27395b
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/recipes/security.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: security
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::security'
diff --git a/cookbooks/website/.delivery/build_cookbook/recipes/smoke.rb b/cookbooks/website/.delivery/build_cookbook/recipes/smoke.rb
new file mode 100644
index 0000000000000000000000000000000000000000..2203cbd2f3812d553ec660d94a5d054debaa44bf
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/recipes/smoke.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: smoke
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::smoke'
diff --git a/cookbooks/website/.delivery/build_cookbook/recipes/syntax.rb b/cookbooks/website/.delivery/build_cookbook/recipes/syntax.rb
new file mode 100644
index 0000000000000000000000000000000000000000..7147f96a26936d888ee82a9a5e6f8d1db266ed8d
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/recipes/syntax.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: syntax
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::syntax'
diff --git a/cookbooks/website/.delivery/build_cookbook/recipes/unit.rb b/cookbooks/website/.delivery/build_cookbook/recipes/unit.rb
new file mode 100644
index 0000000000000000000000000000000000000000..fa6d9ba4ecf28a65db1cb545cabdd114eb790239
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/recipes/unit.rb
@@ -0,0 +1,6 @@
+#
+# Cookbook:: build_cookbook
+# Recipe:: unit
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+include_recipe 'delivery-truck::unit'
diff --git a/cookbooks/website/.delivery/build_cookbook/secrets/fakey-mcfakerton b/cookbooks/website/.delivery/build_cookbook/secrets/fakey-mcfakerton
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/cookbooks/website/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb b/cookbooks/website/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..17250391e21792b0418942941b4ef01d6ef41d78
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/test/fixtures/cookbooks/test/metadata.rb
@@ -0,0 +1,2 @@
+name 'test'
+version '0.1.0'
\ No newline at end of file
diff --git a/cookbooks/website/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb b/cookbooks/website/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..5675ce6b8dbbfca9dc4ba7c77e795185e8a3ba05
--- /dev/null
+++ b/cookbooks/website/.delivery/build_cookbook/test/fixtures/cookbooks/test/recipes/default.rb
@@ -0,0 +1,8 @@
+%w(unit lint syntax).each do |phase|
+  # TODO: This works on Linux/Unix. Not Windows.
+  execute "HOME=/home/vagrant delivery job verify #{phase} --server localhost --ent test --org kitchen" do
+    cwd '/tmp/repo-data'
+    user 'vagrant'
+    environment('GIT_DISCOVERY_ACROSS_FILESYSTEM' => '1')
+  end
+end
diff --git a/cookbooks/website/.delivery/config.json b/cookbooks/website/.delivery/config.json
new file mode 100644
index 0000000000000000000000000000000000000000..6c0e69fc01572a56024e29f4d4cb59c84d0d9d34
--- /dev/null
+++ b/cookbooks/website/.delivery/config.json
@@ -0,0 +1,12 @@
+{
+  "version": "2",
+  "build_cookbook": {
+    "name": "build_cookbook",
+    "path": ".delivery/build_cookbook"
+  },
+  "skip_phases": [],
+  "job_dispatch": {
+    "version": "v2"
+  },
+  "dependencies": []
+}
diff --git a/cookbooks/website/.delivery/project.toml b/cookbooks/website/.delivery/project.toml
new file mode 100644
index 0000000000000000000000000000000000000000..c453234bc9b4b151cc57be8f613ad75c614dc762
--- /dev/null
+++ b/cookbooks/website/.delivery/project.toml
@@ -0,0 +1,36 @@
+# Delivery Prototype for Local Phases Execution
+#
+# The purpose of this file is to prototype a new way to execute
+# phases locally on your workstation. The delivery-cli will read
+# this file and execute the command(s) that are configured for
+# each phase. You can customize them by just modifying the phase
+# key on this file.
+#
+# By default these phases are configured for Cookbook Workflow only
+#
+# As this is still a prototype we are not modifying the current
+# config.json file and it will continue working as usual.
+
+[local_phases]
+unit = "chef exec rspec spec/"
+lint = "chef exec cookstyle"
+# Foodcritic includes rules only appropriate for community cookbooks
+# uploaded to Supermarket. We turn off any rules tagged "supermarket"
+# by default. If you plan to share this cookbook you should remove
+# '-t ~supermarket' below to enable supermarket rules.
+syntax = "chef exec foodcritic . --exclude spec -f any -t ~supermarket"
+provision = "chef exec kitchen create"
+deploy = "chef exec kitchen converge"
+smoke = "chef exec kitchen verify"
+# The functional phase is optional, you can define it by uncommenting
+# the line below and running the command: `delivery local functional`
+# functional = ""
+cleanup = "chef exec kitchen destroy"
+
+# Remote project.toml file
+#
+# Specify a remote URI location for the `project.toml` file.
+# This is useful for teams that wish to centrally manage the behavior
+# of the `delivery local` command across many different projects.
+#
+# remote_file = "https://url/project.toml"
diff --git a/cookbooks/website/.gitignore b/cookbooks/website/.gitignore
new file mode 100644
index 0000000000000000000000000000000000000000..febee30092d697dc9b7c7a2f42bfd571fe9da25a
--- /dev/null
+++ b/cookbooks/website/.gitignore
@@ -0,0 +1,21 @@
+.vagrant
+*~
+*#
+.#*
+\#*#
+.*.sw[a-z]
+*.un~
+
+# Bundler
+Gemfile.lock
+bin/*
+.bundle/*
+
+# test kitchen
+.kitchen/
+.kitchen.local.yml
+
+# Chef
+Berksfile.lock
+.zero-knife.rb
+Policyfile.lock.json
diff --git a/cookbooks/website/.kitchen.yml b/cookbooks/website/.kitchen.yml
new file mode 100644
index 0000000000000000000000000000000000000000..ac49e235006ad0b1c124441e058bd9e7590015df
--- /dev/null
+++ b/cookbooks/website/.kitchen.yml
@@ -0,0 +1,25 @@
+---
+driver:
+  name: vagrant
+
+provisioner:
+  name: chef_zero
+  # You may wish to disable always updating cookbooks in CI or other testing environments.
+  # For example:
+  #   always_update_cookbooks: <%= !ENV['CI'] %>
+  always_update_cookbooks: true
+
+verifier:
+  name: inspec
+
+platforms:
+  - name: centos-7.3
+
+suites:
+  - name: default
+    run_list:
+      - recipe[website::default]
+    verifier:
+      inspec_tests:
+        - test/smoke/default
+    attributes:
diff --git a/cookbooks/website/Berksfile b/cookbooks/website/Berksfile
new file mode 100644
index 0000000000000000000000000000000000000000..34fea2166bafb6b6a62488907c532a9d4692d35e
--- /dev/null
+++ b/cookbooks/website/Berksfile
@@ -0,0 +1,3 @@
+source 'https://supermarket.chef.io'
+
+metadata
diff --git a/cookbooks/website/README.md b/cookbooks/website/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..60c90ee0111980851c1626a0a915061ed4579e68
--- /dev/null
+++ b/cookbooks/website/README.md
@@ -0,0 +1,4 @@
+# website
+
+TODO: Enter the cookbook description here.
+
diff --git a/cookbooks/website/chefignore b/cookbooks/website/chefignore
new file mode 100644
index 0000000000000000000000000000000000000000..38e7379bb8e1fea1eeb0af8be5ac28ac0e1a27d5
--- /dev/null
+++ b/cookbooks/website/chefignore
@@ -0,0 +1,107 @@
+# Put files/directories that should be ignored in this file when uploading
+# to a chef-server or supermarket.
+# Lines that start with '# ' are comments.
+
+# OS generated files #
+######################
+.DS_Store
+Icon?
+nohup.out
+ehthumbs.db
+Thumbs.db
+
+# SASS #
+########
+.sass-cache
+
+# EDITORS #
+###########
+\#*
+.#*
+*~
+*.sw[a-z]
+*.bak
+REVISION
+TAGS*
+tmtags
+*_flymake.*
+*_flymake
+*.tmproj
+.project
+.settings
+mkmf.log
+
+## COMPILED ##
+##############
+a.out
+*.o
+*.pyc
+*.so
+*.com
+*.class
+*.dll
+*.exe
+*/rdoc/
+
+# Testing #
+###########
+.watchr
+.rspec
+spec/*
+spec/fixtures/*
+test/*
+features/*
+examples/*
+Guardfile
+Procfile
+.kitchen*
+.rubocop.yml
+spec/*
+Rakefile
+.travis.yml
+.foodcritic
+.codeclimate.yml
+
+# SCM #
+#######
+.git
+*/.git
+.gitignore
+.gitmodules
+.gitconfig
+.gitattributes
+.svn
+*/.bzr/*
+*/.hg/*
+*/.svn/*
+
+# Berkshelf #
+#############
+Berksfile
+Berksfile.lock
+cookbooks/*
+tmp
+
+# Policyfile #
+##############
+Policyfile.rb
+Policyfile.lock.json
+
+# Cookbooks #
+#############
+CONTRIBUTING*
+CHANGELOG*
+TESTING*
+MAINTAINERS.toml
+
+# Strainer #
+############
+Colanderfile
+Strainerfile
+.colander
+.strainer
+
+# Vagrant #
+###########
+.vagrant
+Vagrantfile
diff --git a/cookbooks/website/metadata.rb b/cookbooks/website/metadata.rb
new file mode 100644
index 0000000000000000000000000000000000000000..66765938665108fbcee3ea3519f714d1437444d5
--- /dev/null
+++ b/cookbooks/website/metadata.rb
@@ -0,0 +1,20 @@
+name 'website'
+maintainer 'The Authors'
+maintainer_email 'you@example.com'
+license 'All Rights Reserved'
+description 'Installs/Configures website'
+long_description 'Installs/Configures website'
+version '0.1.0'
+chef_version '>= 12.1' if respond_to?(:chef_version)
+
+# The `issues_url` points to the location where issues for this cookbook are
+# tracked.  A `View Issues` link will be displayed on this cookbook's page when
+# uploaded to a Supermarket.
+#
+# issues_url 'https://github.com/<insert_org_here>/website/issues'
+
+# The `source_url` points to the development reposiory for this cookbook.  A
+# `View Source` link will be displayed on this cookbook's page when uploaded to
+# a Supermarket.
+#
+# source_url 'https://github.com/<insert_org_here>/website'
diff --git a/cookbooks/website/recipes/default.rb b/cookbooks/website/recipes/default.rb
new file mode 100644
index 0000000000000000000000000000000000000000..a31b15ded7189bf3375862e9822d91253dcf945b
--- /dev/null
+++ b/cookbooks/website/recipes/default.rb
@@ -0,0 +1,10 @@
+#
+# Cookbook:: website
+# Recipe:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+
+website_web 'httpd_site' do
+  port 81
+  action :create
+end
diff --git a/cookbooks/website/resources/web b/cookbooks/website/resources/web
new file mode 100644
index 0000000000000000000000000000000000000000..c6f7185330a42ac88b5ed3ad8a85e50d1d739d11
--- /dev/null
+++ b/cookbooks/website/resources/web
@@ -0,0 +1,46 @@
+property :instance_name, String, name_property: true
+property :port, Integer, required:true
+
+action :create do
+  package 'httpd' do 
+    action :install
+  end 
+  
+  template "/lib/systemd/system/httpd-#{new_resource.instance_name}.service" do 
+    source 'httpd.service.erb'
+    variables(
+      instance_name: new_resource.instance_name
+    )
+    owner 'root'
+    group 'root'
+    mode '0644'
+    action :create
+  end
+  
+  template "/etc/httpd/conf/httpd-#{new_resource.instance_name}.conf" do
+    source 'httpd.conf.erb'
+    variables(
+      instance_name: new_resource.instance_name,
+      port: new_resource.port
+    ) 
+    owner 'root'
+    group 'root'
+    mode '0644'
+    action :create
+  end 
+
+  directory "/var/www/vhosts/#{new_resource.instance_name}" do
+     recursive true
+     owner 'root'
+     group 'root'
+     mode '0755'
+     action :create
+   end
+  
+   service "httpd-#{new_resource.instance_name}" do 
+     action [:enable, :start]
+   end 
+
+end 
+
+
diff --git a/cookbooks/website/spec/spec_helper.rb b/cookbooks/website/spec/spec_helper.rb
new file mode 100644
index 0000000000000000000000000000000000000000..1dd5126bf629c317834b3c7bb35842981fc93233
--- /dev/null
+++ b/cookbooks/website/spec/spec_helper.rb
@@ -0,0 +1,2 @@
+require 'chefspec'
+require 'chefspec/berkshelf'
diff --git a/cookbooks/website/spec/unit/recipes/default_spec.rb b/cookbooks/website/spec/unit/recipes/default_spec.rb
new file mode 100644
index 0000000000000000000000000000000000000000..e89743aad1c5d2da8ede1d1886be1e27e2444f15
--- /dev/null
+++ b/cookbooks/website/spec/unit/recipes/default_spec.rb
@@ -0,0 +1,22 @@
+#
+# Cookbook:: website
+# Spec:: default
+#
+# Copyright:: 2017, The Authors, All Rights Reserved.
+
+require 'spec_helper'
+
+describe 'website::default' do
+  context 'When all attributes are default, on an Ubuntu 16.04' do
+    let(:chef_run) do
+      # for a complete list of available platforms and versions see:
+      # https://github.com/customink/fauxhai/blob/master/PLATFORMS.md
+      runner = ChefSpec::ServerRunner.new(platform: 'ubuntu', version: '16.04')
+      runner.converge(described_recipe)
+    end
+
+    it 'converges successfully' do
+      expect { chef_run }.to_not raise_error
+    end
+  end
+end
diff --git a/cookbooks/website/templates/httpd.conf.erb b/cookbooks/website/templates/httpd.conf.erb
new file mode 100644
index 0000000000000000000000000000000000000000..93ef7659a597eda724efb6df4139c99dc260d92c
--- /dev/null
+++ b/cookbooks/website/templates/httpd.conf.erb
@@ -0,0 +1,13 @@
+ServerRoot "/etc/httpd"
+Listen <%= @port %>
+Include conf.modules.d/*.conf
+User apache
+Group apache
+<Directory />
+  AllowOverride none
+  Require all denied
+</Directory>
+DocumentRoot "/var/www/vhosts/<%= @instance_name %>"
+<IfModule mime_module>
+  TypesConfig /etc/mime.types
+</IfModule>
diff --git a/cookbooks/website/templates/httpd.service.erb b/cookbooks/website/templates/httpd.service.erb
new file mode 100644
index 0000000000000000000000000000000000000000..f4f8c35972d984caef41524445c9d74fcb069b68
--- /dev/null
+++ b/cookbooks/website/templates/httpd.service.erb
@@ -0,0 +1,16 @@
+[Unit]
+Description=The Apache HTTP Server - instance <%= @instance_name %>
+After=network.target remote-fs.target nss-lookup.target
+
+[Service]
+Type=notify
+
+ExecStart=/usr/sbin/httpd -f /etc/httpd/conf/httpd-<%= @instance_name %>.conf -DFOREGROUND
+ExecReload=/usr/sbin/httpd -f /etc/httpd/conf/httpd-<%= @instance_name %>.conf -k graceful
+ExecStop=/bin/kill -WINCH ${MAINPID}
+
+KillSignal=SIGCONT
+PrivateTmp=true
+
+[Install]
+WantedBy=multi-user.target
diff --git a/cookbooks/website/test/smoke/default/default_test.rb b/cookbooks/website/test/smoke/default/default_test.rb
new file mode 100644
index 0000000000000000000000000000000000000000..e72eab8deea7ad58d773060affcde14de6f4a247
--- /dev/null
+++ b/cookbooks/website/test/smoke/default/default_test.rb
@@ -0,0 +1,18 @@
+# # encoding: utf-8
+
+# Inspec test for recipe website::default
+
+# The Inspec reference, with examples and extensive documentation, can be
+# found at http://inspec.io/docs/reference/resources/
+
+unless os.windows?
+  # This is an example test, replace with your own test.
+  describe user('root'), :skip do
+    it { should exist }
+  end
+end
+
+# This is an example test, replace it with your own test.
+describe port(80), :skip do
+  it { should_not be_listening }
+end
diff --git a/environments/dev.rb b/environments/dev.rb
new file mode 100644
index 0000000000000000000000000000000000000000..696bbf79745304125415b3a03327e85c57cbfc49
--- /dev/null
+++ b/environments/dev.rb
@@ -0,0 +1 @@
+name "dev"
diff --git a/nodes/ravidrasinghk.json b/nodes/ravidrasinghk.json
new file mode 100644
index 0000000000000000000000000000000000000000..0668bd3d5694f5b7d19e3e709f57c23c17623b00
--- /dev/null
+++ b/nodes/ravidrasinghk.json
@@ -0,0 +1,3 @@
+{
+  "name": "ravidrasinghk"
+}
\ No newline at end of file
diff --git a/roles/my_cookbook_role.rb b/roles/my_cookbook_role.rb
new file mode 100644
index 0000000000000000000000000000000000000000..a6d3da3c03e40e208cd4c5a9f7ded8811093c23f
--- /dev/null
+++ b/roles/my_cookbook_role.rb
@@ -0,0 +1,4 @@
+name "my_cookbook_role"
+description "role dedicated to my_cookbook"
+run_list "recipe[my_cookbook]"
+default_attributes "my_cookbook" => { "message" => "Hallo Welt!" }
diff --git a/roles/starter.rb b/roles/starter.rb
new file mode 100644
index 0000000000000000000000000000000000000000..8fe65a6864d264ba5e75eaa345bd734fdd6662ea
--- /dev/null
+++ b/roles/starter.rb
@@ -0,0 +1,6 @@
+name "starter"
+description "An example Chef role"
+run_list "recipe[starter]"
+override_attributes({
+  "starter_name" => "Ravindra Singh",
+})
diff --git a/roles/web_servers.rb b/roles/web_servers.rb
new file mode 100644
index 0000000000000000000000000000000000000000..33d8e806db7464b9d87bdae62c9091ee5aa2fec6
--- /dev/null
+++ b/roles/web_servers.rb
@@ -0,0 +1,9 @@
+name "web_servers"
+description "This role contains nodes, which act as web servers"
+run_list "recipe[ntp]",
+         'recipe[pwx_cookbook]'
+default_attributes 'ntp' => {
+  'ntpdate' => {
+    'disable' => true
+  }
+}
-- 
1.8.3.1

